com/ca/mas/core/auth/AuthenticationException = Com.CA.Mas.Core.Auth.AuthenticationException
  <init>(IILjava/lang/String;Ljava/lang/String;)V = .ctor(int, int, string, string)
  <init>(IILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(int, int, string, string, Java.Lang.Throwable)
  <init>(Lcom/ca/mas/core/error/MAGServerException;)V = .ctor(Com.CA.Mas.Core.Error.MAGServerException)
com/ca/mas/core/auth/AuthRenderer = Com.CA.Mas.Core.Auth.AuthRenderer
  <init>()V = .ctor()
  AUTH_CODE_ERR = AuthCodeErr
  context = Context
  provider = Provider
  requestId = RequestId
  getId()Ljava/lang/String; = Id
  close()V = Close()
  init(Landroid/content/Context;Lcom/ca/mas/core/service/Provider;)Z = Init(Android.Content.Context, Com.CA.Mas.Core.Service.Provider)
  onAuthCodeReceived(Ljava/lang/String;)V = OnAuthCodeReceived(string)
  onError(ILjava/lang/String;Ljava/lang/Exception;)V = OnError(int, string, Java.Lang.Exception)
  onRenderCompleted()V = OnRenderCompleted()
  proceed()V = Proceed()
  render()Landroid/view/View; = Render()
  sendCredentialsIntent(Lcom/ca/mas/foundation/MASAuthCredentials;)V = SendCredentialsIntent(Com.CA.Mas.Foundation.IMASAuthCredentials)
com/ca/mas/core/auth/AuthResultReceiver = Com.CA.Mas.Core.Auth.IAuthResultReceiver
  setData(Lorg/json/JSONObject;)V = SetData(Org.Json.JSONObject)
com/ca/mas/core/auth/ble/BluetoothLe = Com.CA.Mas.Core.Auth.Ble.IBluetoothLe
  BLE_ERROR_DISABLED = BleErrorDisabled
  BLE_ERROR_INVALID_UUID = BleErrorInvalidUuid
  BLE_ERROR_NOT_SUPPORTED = BleErrorNotSupported
  BLE_ERROR_SESSION_SHARING_NOT_SUPPORTED = BleErrorSessionSharingNotSupported
  DEVICE_NAME = DeviceName
  EOM = Eom
  PROVIDER_URL = ProviderUrl
  onStatusUpdate(I)V = OnStatusUpdate(int)
com/ca/mas/core/auth/ble/BluetoothLeCentralCallback = Com.CA.Mas.Core.Auth.Ble.IBluetoothLeCentralCallback
  BLE_STATE_AUTH_FAILED = BleStateAuthFailed
  BLE_STATE_AUTH_SUCCEEDED = BleStateAuthSucceeded
  BLE_STATE_CHARACTERISTIC_FOUND = BleStateCharacteristicFound
  BLE_STATE_CHARACTERISTIC_WRITTEN = BleStateCharacteristicWritten
  BLE_STATE_CONNECTED = BleStateConnected
  BLE_STATE_DEVICE_DETECTED = BleStateDeviceDetected
  BLE_STATE_DISCONNECTED = BleStateDisconnected
  BLE_STATE_SCAN_STARTED = BleStateScanStarted
  BLE_STATE_SCAN_STOPPED = BleStateScanStopped
  BLE_STATE_SERVICE_DISCOVERED = BleStateServiceDiscovered
com/ca/mas/core/auth/ble/BluetoothLeCentralRenderer = Com.CA.Mas.Core.Auth.Ble.BluetoothLeCentralRenderer
  <init>(Lcom/ca/mas/core/auth/ble/BluetoothLeCentralCallback;)V = .ctor(Com.CA.Mas.Core.Auth.Ble.IBluetoothLeCentralCallback)
  MAX = Max
  onError(ILjava/lang/String;Ljava/lang/Exception;)V = OnError(int, string, Java.Lang.Exception)
  render()Landroid/view/View; = Render()
  startPollingOnStartup()Z = StartPollingOnStartup()
com/ca/mas/core/auth/ble/BluetoothLeConsentHandler = Com.CA.Mas.Core.Auth.Ble.IBluetoothLeConsentHandler
  cancel()V = Cancel()
  proceed()V = Proceed()
com/ca/mas/core/auth/ble/BluetoothLePeripheral = Com.CA.Mas.Core.Auth.Ble.BluetoothLePeripheral
  getInstance()Lcom/ca/mas/core/auth/ble/BluetoothLePeripheral; = Instance
  isAuthenticating()Z = IsAuthenticating
  init(Lcom/ca/mas/core/conf/ConfigurationProvider;Landroid/content/Context;)V = Init(Com.CA.Mas.Core.Conf.IConfigurationProvider, Android.Content.Context)
  start(Lcom/ca/mas/core/auth/ble/BluetoothLePeripheralCallback;)V = Start(Com.CA.Mas.Core.Auth.Ble.IBluetoothLePeripheralCallback)
  stop()V = Stop()
com/ca/mas/core/auth/ble/BluetoothLePeripheralCallback = Com.CA.Mas.Core.Auth.Ble.IBluetoothLePeripheralCallback
  BLE_ERROR_ADVERTISE_FAILED = BleErrorAdvertiseFailed
  BLE_ERROR_AUTH_FAILED = BleErrorAuthFailed
  BLE_ERROR_CENTRAL_UNSUBSCRIBED = BleErrorCentralUnsubscribed
  BLE_ERROR_PERIPHERAL_MODE_NOT_SUPPORTED = BleErrorPeripheralModeNotSupported
  BLE_STATE_CONNECTED = BleStateConnected
  BLE_STATE_DISCONNECTED = BleStateDisconnected
  BLE_STATE_SESSION_AUTHORIZED = BleStateSessionAuthorized
  BLE_STATE_SESSION_NOTIFIED = BleStateSessionNotified
  BLE_STATE_STARTED = BleStateStarted
  BLE_STATE_STOPPED = BleStateStopped
  onConsentRequested(Ljava/lang/String;Lcom/ca/mas/core/auth/ble/BluetoothLeConsentHandler;)V = OnConsentRequested(string, Com.CA.Mas.Core.Auth.Ble.IBluetoothLeConsentHandler)
  onError(I)V = OnError(int)
com/ca/mas/core/auth/NFCRenderer = Com.CA.Mas.Core.Auth.NFCRenderer
  <init>()V = .ctor()
  ADDRESS = Address
  BLUETOOTH_CONN_ERR = BluetoothConnErr
  BLUETOOTH_ERR = BluetoothErr
  NFC_ERR = NfcErr
  PROVIDER_URL = ProviderUrl
  UUID = Uuid
  onError(ILjava/lang/String;Ljava/lang/Exception;)V = OnError(int, string, Java.Lang.Exception)
  render()Landroid/view/View; = Render()
  startPollingOnStartup()Z = StartPollingOnStartup()
com/ca/mas/core/auth/NfcResultReceiver = Com.CA.Mas.Core.Auth.NfcResultReceiver
  <init>()V = .ctor()
  getData()Lorg/json/JSONObject; = Data
  setData(Lorg/json/JSONObject;)V = SetData(Org.Json.JSONObject)
com/ca/mas/core/auth/otp/model/OtpResponseBody = Com.CA.Mas.Core.Auth.Otp.Model.OtpResponseBody
  <init>()V = .ctor()
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  CREATOR = Creator
  getError()Ljava/lang/String; = Error
  setError(Ljava/lang/String;)V = Error
  getErrorDescription()Ljava/lang/String; = ErrorDescription
  setErrorDescription(Ljava/lang/String;)V = ErrorDescription
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/ca/mas/core/auth/otp/model/OtpResponseHeaders = Com.CA.Mas.Core.Auth.Otp.Model.OtpResponseHeaders
  <init>()V = .ctor()
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  CREATOR = Creator
  getChannels()Ljava/util/List; = Channels
  setChannels(Ljava/util/List;)V = Channels
  getErrorCode()Lcom/ca/mas/core/auth/otp/model/OtpResponseHeaders$X_CA_ERROR; = ErrorCode
  setErrorCode(Lcom/ca/mas/core/auth/otp/model/OtpResponseHeaders$X_CA_ERROR;)V = ErrorCode
  getHttpStatusCode()I = HttpStatusCode
  setHttpStatusCode(I)V = HttpStatusCode
  getRetry()I = Retry
  setRetry(I)V = Retry
  getRetryInterval()I = RetryInterval
  setRetryInterval(I)V = RetryInterval
  describeContents()I = DescribeContents()
  getxOtpValue()Lcom/ca/mas/core/auth/otp/model/OtpResponseHeaders$X_OTP_VALUE; = GetxOtpValue()
  setxOtpValue(Lcom/ca/mas/core/auth/otp/model/OtpResponseHeaders$X_OTP_VALUE;)V = SetxOtpValue(Com.CA.Mas.Core.Auth.Otp.Model.OtpResponseHeaders.X_OTP_VALUE)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/ca/mas/core/auth/otp/OtpAuthenticationHandler = Com.CA.Mas.Core.Auth.Otp.OtpAuthenticationHandler
  <init>(JLjava/util/List;ZLjava/lang/String;)V = .ctor(long, System.Collections.Generic.IList<string>, bool, string)
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  CREATOR = Creator
  getChannels()Ljava/util/List; = Channels
  isInvalidOtp()Z = IsInvalidOtp
  cancel()V = Cancel()
  deliver(Ljava/lang/String;Lcom/ca/mas/core/MAGResultReceiver;)V = Deliver(string, Com.CA.Mas.Core.MAGResultReceiver)
  describeContents()I = DescribeContents()
  proceed(Landroid/content/Context;Ljava/lang/String;)V = Proceed(Android.Content.Context, string)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/ca/mas/core/auth/otp/OtpConstants = Com.CA.Mas.Core.Auth.Otp.OtpConstants
  <init>()V = .ctor()
  ACTION_DISPLAY_OTP_PROTECTED_DATA = ActionDisplayOtpProtectedData
  IS_INVALID_OTP = IsInvalidOtp
  X_CA_ERR = XCaErr
  X_OTP = XOtp
  X_OTP_CHANNEL = XOtpChannel
  X_OTP_RETRY = XOtpRetry
  X_OTP_RETRY_INTERVAL = XOtpRetryInterval
com/ca/mas/core/auth/otp/OtpUtil = Com.CA.Mas.Core.Auth.Otp.OtpUtil
  <init>()V = .ctor()
  convertCommaSeparatedStringToList(Ljava/lang/String;)Ljava/util/List; = ConvertCommaSeparatedStringToList(string)
  convertListToCommaSeparatedString(Ljava/util/List;)Ljava/lang/String; = ConvertListToCommaSeparatedString(System.Collections.Generic.IList<string>)
  convertOtpErrorCodeToEnum(Ljava/lang/String;)Lcom/ca/mas/core/auth/otp/model/OtpResponseHeaders$X_CA_ERROR; = ConvertOtpErrorCodeToEnum(string)
  getXotpValueFromHeaders(Ljava/util/Map;)Lcom/ca/mas/core/auth/otp/model/OtpResponseHeaders; = GetXotpValueFromHeaders(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<string>>)
  isOtpErrorCode(Ljava/lang/String;)Z = IsOtpErrorCode(string)
  parseOtpResponseBody(Ljava/lang/String;)Lcom/ca/mas/core/auth/otp/model/OtpResponseBody; = ParseOtpResponseBody(string)
  toPrettyFormat(Ljava/lang/String;)Ljava/lang/String; = ToPrettyFormat(string)
com/ca/mas/core/auth/PollingRenderer = Com.CA.Mas.Core.Auth.PollingRenderer
  <init>()V = .ctor()
  DELAY = Delay
  INVALID_SESSION_ID_OR_POLL_URL = InvalidSessionIdOrPollUrl
  MAX_POLL_COUNT = MaxPollCount
  POLL_INTERVAL = PollInterval
  SESSION_EXPIRED = SessionExpired
  getDelay()J = Delay
  getMaxPollCount()J = MaxPollCount
  getPollInterval()J = PollInterval
  close()V = Close()
  onAuthCodeReceived(Ljava/lang/String;)V = OnAuthCodeReceived(string)
  onRenderCompleted()V = OnRenderCompleted()
  poll()V = Poll()
  startPollingOnStartup()Z = StartPollingOnStartup()
com/ca/mas/core/auth/QRCode = Com.CA.Mas.Core.Auth.QRCode
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
com/ca/mas/core/auth/QRCodeRenderer = Com.CA.Mas.Core.Auth.QRCodeRenderer
  <init>()V = .ctor()
  QRCODE_ERROR = QrcodeError
  getQRCodeHeight()I = QRCodeHeight
  getQRCodeWidth()I = QRCodeWidth
  onError(ILjava/lang/String;Ljava/lang/Exception;)V = OnError(int, string, Java.Lang.Exception)
  render()Landroid/view/View; = Render()
  startPollingOnStartup()Z = StartPollingOnStartup()
com/ca/mas/core/cert/CertUtils = Com.CA.Mas.Core.Cert.CertUtils
  decodeCertFromPem(Ljava/lang/String;)Ljava/security/cert/X509Certificate; = DecodeCertFromPem(string)
  decodeCertificateChain([B)[Ljava/security/cert/X509Certificate; = DecodeCertificateChain(byte[])
  generateCertificateSigningRequest(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/security/PublicKey;Ljava/security/PrivateKey;)[B = GenerateCertificateSigningRequest(string, string, string, string, Java.Security.IPublicKey, Java.Security.IPrivateKey)
com/ca/mas/core/cert/PublicKeyHash = Com.CA.Mas.Core.Cert.PublicKeyHash
  getHashString()Ljava/lang/String; = HashString
  fromCertificate(Ljava/security/cert/Certificate;)Lcom/ca/mas/core/cert/PublicKeyHash; = FromCertificate(Java.Security.Cert.Certificate)
  fromHashString(Ljava/lang/String;I)Lcom/ca/mas/core/cert/PublicKeyHash; = FromHashString(string, int)
  fromPublicKey(Ljava/security/PublicKey;)Lcom/ca/mas/core/cert/PublicKeyHash; = FromPublicKey(Java.Security.IPublicKey)
  matches([B)Z = Matches(byte[])
  matches(Ljava/security/cert/X509Certificate;)Z = Matches(Java.Security.Cert.X509Certificate)
  matches(Ljava/security/PublicKey;)Z = Matches(Java.Security.IPublicKey)
com/ca/mas/core/cert/TrustedCertificateConfiguration = Com.CA.Mas.Core.Cert.ITrustedCertificateConfiguration
  isAlsoTrustPublicPki()Z = IsAlsoTrustPublicPki
  getTrustedCertificateAnchors()Ljava/util/Collection; = TrustedCertificateAnchors
  getTrustedCertificatePinnedPublicKeyHashes()Ljava/util/Collection; = TrustedCertificatePinnedPublicKeyHashes
com/ca/mas/core/client/ServerClient = Com.CA.Mas.Core.Client.ServerClient
  <init>(Lcom/ca/mas/core/context/MssoContext;)V = .ctor(Com.CA.Mas.Core.Context.MssoContext)
  ACTIVATED = Activated
  APPLICATION_X_WWW_FORM_URLENCODED = ApplicationXWwwFormUrlencoded
  ASSERTION = Assertion
  CERT_FORMAT = CertFormat
  CLIENT_AUTHORIZATION = ClientAuthorization
  CLIENT_EXPIRATION = ClientExpiration
  CLIENT_ID = ClientId
  CLIENT_SECRET = ClientSecret
  conf = Conf
  CONTENT_TYPE = ContentType
  CREATE_SESSION = CreateSession
  DEFAULT_CONTENT_TYPE = DefaultContentType
  DEVICE_ID = DeviceId
  DEVICE_NAME = DeviceName
  DEVICE_STATUS = DeviceStatus
  GRANT_TYPE = GrantType
  ID_TOKEN = IdToken
  ID_TOKEN_TYPE = IdTokenType
  MAG_IDENTIFIER = MagIdentifier
  MSSO = Msso
  MSSO_CLIENT_REGISTER = MssoClientRegister
  mssoContext = MssoContext
  MSSO_REGISTER = MssoRegister
  NONCE = Nonce
  OPENID = Openid
  OPENID_PHONE_EMAIL = OpenidPhoneEmail
  PEM = Pem
  REFRESH_TOKEN = RefreshToken
  REGISTERED = Registered
  SCOPE = Scope
  TEXT_PLAIN = TextPlain
  UTF_8 = Utf8
  X_CA_ERR = XCaErr
com/ca/mas/core/client/ServerResponse = Com.CA.Mas.Core.Client.ServerResponse
  <init>(IILjava/lang/String;)V = .ctor(int, int, string)
  <init>(ILjava/lang/String;)V = .ctor(int, string)
  errorCode = ErrorCode
  json = Json
  parsed = Parsed
  status = Status
  getErrorCode()I = ErrorCode
  isError()Z = IsError
  getJson()Ljava/lang/String; = Json
  getStatus()I = Status
com/ca/mas/core/clientcredentials/ClientCredentialsClient = Com.CA.Mas.Core.Clientcredentials.ClientCredentialsClient
  <init>(Lcom/ca/mas/core/context/MssoContext;)V = .ctor(Com.CA.Mas.Core.Context.MssoContext)
  getClientCredentials(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/ca/mas/core/token/ClientCredentials; = GetClientCredentials(string, string, string)
com/ca/mas/core/clientcredentials/ClientCredentialsException = Com.CA.Mas.Core.Clientcredentials.ClientCredentialsException
  <init>(I)V = .ctor(int)
  <init>(ILjava/lang/String;)V = .ctor(int, string)
  <init>(ILjava/lang/String;Ljava/lang/Throwable;)V = .ctor(int, string, Java.Lang.Throwable)
  <init>(ILjava/lang/Throwable;)V = .ctor(int, Java.Lang.Throwable)
com/ca/mas/core/clientcredentials/ClientCredentialsServerException = Com.CA.Mas.Core.Clientcredentials.ClientCredentialsServerException
  <init>(IILjava/lang/String;Ljava/lang/String;)V = .ctor(int, int, string, string)
  <init>(IILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(int, int, string, string, Java.Lang.Throwable)
  <init>(Lcom/ca/mas/core/error/MAGServerException;)V = .ctor(Com.CA.Mas.Core.Error.MAGServerException)
com/ca/mas/core/conf/Config = Com.CA.Mas.Core.Conf.Config
  <init>(ZLjava/lang/String;Ljava/lang/String;Ljava/lang/Class;)V = .ctor(bool, string, string, Java.Lang.Class)
  AUTHENTICATE_OTP_PATH = AuthenticateOtpPath
  AUTHORIZE_PATH = AuthorizePath
  BLE_RSSI = BleRssi
  BLE_SERVICE_UUID = BleServiceUuid
  BLE_USER_SESSION_CHARACTERISTIC_UUID = BleUserSessionCharacteristicUuid
  CLIENT_CERT_RSA_KEYBITS = ClientCertRsaKeybits
  CLIENT_CREDENTIAL_INIT_PATH = ClientCredentialInitPath
  CLIENT_KEY = ClientKey
  CLIENT_SECRET = ClientSecret
  CLIENT_STORAGE = ClientStorage
  ENTERPRISE_APP_PATH = EnterpriseAppPath
  HOSTNAME = Hostname
  key = Key
  LOCATION_ENABLED = LocationEnabled
  LOCATION_PROVIDER = LocationProvider
  LOGOUT_DEVICE_PATH = LogoutDevicePath
  mandatory = Mandatory
  MSISDN_ENABLED = MsisdnEnabled
  ORGANIZATION = Organization
  path = Path
  PORT = Port
  PREFIX = Prefix
  REDIRECT_URI = RedirectUri
  REGISTER_DEVICE_PATH = RegisterDevicePath
  REGISTER_DEVICE_PATH_CLIENT = RegisterDevicePathClient
  REGISTER_TOKEN_PATH = RegisterTokenPath
  REGISTER_TOKEN_PATH_SSO = RegisterTokenPathSso
  REMOVE_DEVICE_PATH = RemoveDevicePath
  RENEW_DEVICE_PATH = RenewDevicePath
  SCOPE = Scope
  SERVER_CERTS = ServerCerts
  SSO_ENABLED = SsoEnabled
  TRUSTED_CERT_PINNED_PUBLIC_KEY_HASHES = TrustedCertPinnedPublicKeyHashes
  TRUSTED_PUBLIC_PKI = TrustedPublicPki
  type = Type
  values = Values
com/ca/mas/core/conf/ConfigurationManager = Com.CA.Mas.Core.Conf.ConfigurationManager
  getCertificateAdvancedRenewTimeframe()I = CertificateAdvancedRenewTimeframe
  setCertificateAdvancedRenewTimeframe(I)V = CertificateAdvancedRenewTimeframe
  getConfigurationFileName()Ljava/lang/String; = ConfigurationFileName
  setConfigurationFileName(Ljava/lang/String;)V = ConfigurationFileName
  getConnectedGateway()Lcom/ca/mas/core/conf/Server; = ConnectedGateway
  getConnectedGatewayConfig()Lorg/json/JSONObject; = ConnectedGatewayConfig
  getConnectedGatewayConfigurationProvider()Lcom/ca/mas/core/conf/ConfigurationProvider; = ConnectedGatewayConfigurationProvider
  getContext()Landroid/content/Context; = Context
  getDefaultGrantProvider()Lcom/ca/mas/core/oauth/GrantProvider; = DefaultGrantProvider
  setDefaultGrantProvider(Lcom/ca/mas/core/oauth/GrantProvider;)V = DefaultGrantProvider
  getInstance()Lcom/ca/mas/core/conf/ConfigurationManager; = Instance
  isPKCEEnabled()Z = IsPKCEEnabled
  getMobileSsoListener()Lcom/ca/mas/core/MobileSsoListener; = MobileSsoListener
  setMobileSsoListener(Lcom/ca/mas/core/MobileSsoListener;)V = MobileSsoListener
  activate(Lorg/json/JSONObject;)V = Activate(Org.Json.JSONObject)
  activateDefault()V = ActivateDefault()
  create(Lorg/json/JSONObject;)Lcom/ca/mas/core/conf/ConfigurationProvider; = Create(Org.Json.JSONObject)
  enablePKCE(Z)V = EnablePKCE(bool)
  getConfig(Ljava/io/InputStream;)Lorg/json/JSONObject; = GetConfig(System.IO.Stream)
  init(Landroid/content/Context;)V = Init(Android.Content.Context)
  reset()V = Reset()
  setAppConfigs(Ljava/util/List;)V = SetAppConfigs(System.Collections.Generic.IList<Com.CA.Mas.Core.Conf.Config>)
com/ca/mas/core/conf/ConfigurationProvider = Com.CA.Mas.Core.Conf.IConfigurationProvider
  PROP_LOCATION_MIN_DISTANCE = PropLocationMinDistance
  PROP_LOCATION_MIN_TIME = PropLocationMinTime
  getClientId()Ljava/lang/String; = ClientId
  getClientScope()Ljava/lang/String; = ClientScope
  getClientSecret()Ljava/lang/String; = ClientSecret
  getPrefix()Ljava/lang/String; = Prefix
  getRaw()Lorg/json/JSONObject; = Raw
  getServer()Lcom/ca/mas/core/conf/Server; = Server
  getTokenHost()Ljava/lang/String; = TokenHost
  getTokenPort()I = TokenPort
  getUserInfoUri()Landroid/net/Uri; = UserInfoUri
  getProperty(Ljava/lang/String;)Ljava/lang/Object; = GetProperty(string)
  getTokenUri(Ljava/lang/String;)Ljava/net/URI; = GetTokenUri(string)
  getUri(Ljava/lang/String;)Ljava/net/URI; = GetUri(string)
com/ca/mas/core/conf/DefaultConfiguration = Com.CA.Mas.Core.Conf.DefaultConfiguration
  <init>(Lorg/json/JSONObject;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(Org.Json.JSONObject, string, Java.Lang.Integer, string, string, string, string, string, string)
  getClientId()Ljava/lang/String; = ClientId
  getClientScope()Ljava/lang/String; = ClientScope
  getClientSecret()Ljava/lang/String; = ClientSecret
  isAlsoTrustPublicPki()Z = IsAlsoTrustPublicPki
  getPrefix()Ljava/lang/String; = Prefix
  getRaw()Lorg/json/JSONObject; = Raw
  getRedirectUri()Ljava/lang/String; = RedirectUri
  getScope()Ljava/lang/String; = Scope
  getServer()Lcom/ca/mas/core/conf/Server; = Server
  getTokenHost()Ljava/lang/String; = TokenHost
  getTokenPort()I = TokenPort
  getTrustedCertificateAnchors()Ljava/util/Collection; = TrustedCertificateAnchors
  getTrustedCertificatePinnedPublicKeyHashes()Ljava/util/Collection; = TrustedCertificatePinnedPublicKeyHashes
  getUserInfoUri()Landroid/net/Uri; = UserInfoUri
  addTrustedCertificateAnchors([Ljava/lang/String;)V = AddTrustedCertificateAnchors(params string[])
  addTrustedCertificatePinnedPublicKeyHashes([Ljava/lang/String;)V = AddTrustedCertificatePinnedPublicKeyHashes(params string[])
  getProperty(Ljava/lang/String;)Ljava/lang/Object; = GetProperty(string)
  getTokenUri(Ljava/lang/String;)Ljava/net/URI; = GetTokenUri(string)
  getTokenUrlSuffix(Ljava/lang/String;)Ljava/lang/String; = GetTokenUrlSuffix(string)
  getUri(Ljava/lang/String;)Ljava/net/URI; = GetUri(string)
  putProperty(Ljava/lang/String;Ljava/lang/Object;)V = PutProperty(string, Java.Lang.Object)
  setAlsoTrustPublicPki(Z)V = SetAlsoTrustPublicPki(bool)
com/ca/mas/core/conf/Server = Com.CA.Mas.Core.Conf.Server
  <init>(Ljava/lang/String;ILjava/lang/String;)V = .ctor(string, int, string)
  <init>(Lorg/json/JSONObject;)V = .ctor(Org.Json.JSONObject)
  getHost()Ljava/lang/String; = Host
  setHost(Ljava/lang/String;)V = Host
  getPort()I = Port
  setPort(I)V = Port
  getPrefix()Ljava/lang/String; = Prefix
  setPrefix(Ljava/lang/String;)V = Prefix
com/ca/mas/core/context/DeviceIdentifier = Com.CA.Mas.Core.Context.DeviceIdentifier
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  getIdentifierKey()Ljava/lang/String; = IdentifierKey
com/ca/mas/core/context/MssoContext = Com.CA.Mas.Core.Context.MssoContext
  containerDescription = ContainerDescription
  getAccessToken()Ljava/lang/String; = AccessToken
  getAccessTokenExpiry()J = AccessTokenExpiry
  getClientExpiration()Ljava/lang/Long; = ClientExpiration
  getClientId()Ljava/lang/String; = ClientId
  getClientSecret()Ljava/lang/String; = ClientSecret
  getConfigurationProvider()Lcom/ca/mas/core/conf/ConfigurationProvider; = ConfigurationProvider
  getCredentials()Lcom/ca/mas/foundation/MASAuthCredentials; = Credentials
  setCredentials(Lcom/ca/mas/foundation/MASAuthCredentials;)V = Credentials
  getDeviceId()Ljava/lang/String; = DeviceId
  getDeviceName()Ljava/lang/String; = DeviceName
  getGrantedScope()Ljava/lang/String; = GrantedScope
  getIdToken()Lcom/ca/mas/core/token/IdToken; = IdToken
  isDeviceRegistered()Z = IsDeviceRegistered
  isInitialized()Z = IsInitialized
  isLogin()Z = IsLogin
  isSsoEnabled()Z = IsSsoEnabled
  getMAGHttpClient()Lcom/ca/mas/core/http/MAGHttpClient; = MAGHttpClient
  getRefreshToken()Ljava/lang/String; = RefreshToken
  getStoredClientId()Ljava/lang/String; = StoredClientId
  getTokenManager()Lcom/ca/mas/core/store/TokenManager; = TokenManager
  clearAccessToken()V = ClearAccessToken()
  clearClientCredentials()V = ClearClientCredentials()
  clearCredentials()V = ClearCredentials()
  clearIdToken()V = ClearIdToken()
  clearUserProfile()V = ClearUserProfile()
  close()V = Close()
  destroyAllPersistentTokens()V = DestroyAllPersistentTokens()
  destroyPersistentTokens()V = DestroyPersistentTokens()
  init(Landroid/content/Context;)V = Init(Android.Content.Context)
  initPolicyManager()V = InitPolicyManager()
  isClientCredentialExpired(Ljava/lang/Long;)Z = IsClientCredentialExpired(Java.Lang.Long)
  logout(Z)V = Logout(bool)
  newContext()Lcom/ca/mas/core/context/MssoContext; = NewContext()
  onAccessTokenAvailable(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;)V = OnAccessTokenAvailable(string, string, long, string)
  onDeviceRegistrationCompleted()V = OnDeviceRegistrationCompleted()
  onIdTokenAvailable(Lcom/ca/mas/core/token/IdToken;)V = OnIdTokenAvailable(Com.CA.Mas.Core.Token.IdToken)
  removeDeviceRegistration()V = RemoveDeviceRegistration()
  resetHttpClient()V = ResetHttpClient()
  setClientCredentials(Lcom/ca/mas/core/token/ClientCredentials;)V = SetClientCredentials(Com.CA.Mas.Core.Token.ClientCredentials)
  takeRefreshToken()Ljava/lang/String; = TakeRefreshToken()
com/ca/mas/core/context/MssoException = Com.CA.Mas.Core.Context.MssoException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/core/context/UniqueIdentifier = Com.CA.Mas.Core.Context.UniqueIdentifier
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  identifier = Identifier
  getIdentifierKey()Ljava/lang/String; = IdentifierKey
com/ca/mas/core/datasource/AccountManagerStoreDataSource = Com.CA.Mas.Core.Datasource.AccountManagerStoreDataSource
  <init>(Landroid/content/Context;Lorg/json/JSONObject;Lcom/ca/mas/core/datasource/DataConverter;)V = .ctor(Android.Content.Context, Org.Json.JSONObject, Com.CA.Mas.Core.Datasource.IDataConverter)
  getConverter()Lcom/ca/mas/core/datasource/DataConverter; = Converter
  isReady()Z = IsReady
  get(Ljava/lang/Object;)Ljava/lang/Object; = Get(Java.Lang.Object)
  get(Ljava/lang/Object;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = Get(Java.Lang.Object, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  getData(Ljava/lang/Object;Lcom/ca/mas/core/storage/StorageResult;)Ljava/lang/Object; = GetData(Java.Lang.Object, Com.CA.Mas.Core.Storage.StorageResult)
  getKeys(Ljava/lang/Object;)Ljava/util/List; = GetKeys(Java.Lang.Object)
  getKeys(Ljava/lang/Object;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = GetKeys(Java.Lang.Object, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  put(Ljava/lang/Object;Ljava/lang/Object;)V = Put(Java.Lang.Object, Java.Lang.Object)
  put(Ljava/lang/Object;Ljava/lang/Object;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = Put(Java.Lang.Object, Java.Lang.Object, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  remove(Ljava/lang/Object;)V = Remove(Java.Lang.Object)
  remove(Ljava/lang/Object;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = Remove(Java.Lang.Object, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  removeAll(Ljava/lang/Object;)V = RemoveAll(Java.Lang.Object)
  removeAll(Ljava/lang/Object;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = RemoveAll(Java.Lang.Object, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  unlock()V = Unlock()
com/ca/mas/core/datasource/DataConverter = Com.CA.Mas.Core.Datasource.IDataConverter
  convert(Ljava/lang/Object;[B)Ljava/lang/Object; = Convert(Java.Lang.Object, byte[])
com/ca/mas/core/datasource/DataSource = Com.CA.Mas.Core.Datasource.IDataSource
  isReady()Z = IsReady
  get(Ljava/lang/Object;)Ljava/lang/Object; = Get(Java.Lang.Object)
  get(Ljava/lang/Object;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = Get(Java.Lang.Object, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  getKeys(Ljava/lang/Object;)Ljava/util/List; = GetKeys(Java.Lang.Object)
  getKeys(Ljava/lang/Object;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = GetKeys(Java.Lang.Object, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  put(Ljava/lang/Object;Ljava/lang/Object;)V = Put(Java.Lang.Object, Java.Lang.Object)
  put(Ljava/lang/Object;Ljava/lang/Object;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = Put(Java.Lang.Object, Java.Lang.Object, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  remove(Ljava/lang/Object;)V = Remove(Java.Lang.Object)
  remove(Ljava/lang/Object;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = Remove(Java.Lang.Object, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  removeAll(Ljava/lang/Object;)V = RemoveAll(Java.Lang.Object)
  removeAll(Ljava/lang/Object;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = RemoveAll(Java.Lang.Object, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  unlock()V = Unlock()
com/ca/mas/core/datasource/DataSourceCallback = Com.CA.Mas.Core.Datasource.IDataSourceCallback
  getHandler()Landroid/os/Handler; = Handler
  onSuccess(Ljava/lang/Object;)V = OnSuccess(Java.Lang.Object)
com/ca/mas/core/datasource/DataSourceException = Com.CA.Mas.Core.Datasource.DataSourceException
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/core/datasource/DataSourceFactory = Com.CA.Mas.Core.Datasource.DataSourceFactory
  <init>()V = .ctor()
  getStorage(Landroid/content/Context;Ljava/lang/Class;Lorg/json/JSONObject;)Lcom/ca/mas/core/datasource/DataSource; = GetStorage(Android.Content.Context, Java.Lang.Class, Org.Json.JSONObject)
  getStorage(Landroid/content/Context;Ljava/lang/Class;Lorg/json/JSONObject;Lcom/ca/mas/core/datasource/DataConverter;)Lcom/ca/mas/core/datasource/DataSource; = GetStorage(Android.Content.Context, Java.Lang.Class, Org.Json.JSONObject, Com.CA.Mas.Core.Datasource.IDataConverter)
com/ca/mas/core/datasource/KeystoreDataSource = Com.CA.Mas.Core.Datasource.KeystoreDataSource
  <init>(Landroid/content/Context;Lorg/json/JSONObject;Lcom/ca/mas/core/datasource/DataConverter;)V = .ctor(Android.Content.Context, Org.Json.JSONObject, Com.CA.Mas.Core.Datasource.IDataConverter)
  SHARE = Share
  isReady()Z = IsReady
  get(Ljava/lang/Object;)Ljava/lang/Object; = Get(Java.Lang.Object)
  get(Ljava/lang/Object;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = Get(Java.Lang.Object, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  getKeys(Ljava/lang/Object;)Ljava/util/List; = GetKeys(Java.Lang.Object)
  getKeys(Ljava/lang/Object;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = GetKeys(Java.Lang.Object, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  put(Ljava/lang/Object;Ljava/lang/Object;)V = Put(Java.Lang.Object, Java.Lang.Object)
  put(Ljava/lang/Object;Ljava/lang/Object;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = Put(Java.Lang.Object, Java.Lang.Object, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  remove(Ljava/lang/Object;)V = Remove(Java.Lang.Object)
  remove(Ljava/lang/Object;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = Remove(Java.Lang.Object, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  removeAll(Ljava/lang/Object;)V = RemoveAll(Java.Lang.Object)
  removeAll(Ljava/lang/Object;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = RemoveAll(Java.Lang.Object, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  unlock()V = Unlock()
com/ca/mas/core/datasource/LocalStoreDataSource = Com.CA.Mas.Core.Datasource.LocalStoreDataSource
  <init>(Landroid/content/Context;Lorg/json/JSONObject;Lcom/ca/mas/core/datasource/DataConverter;)V = .ctor(Android.Content.Context, Org.Json.JSONObject, Com.CA.Mas.Core.Datasource.IDataConverter)
  isReady()Z = IsReady
  get(Lcom/ca/mas/core/datasource/LocalStoreKey;)Lcom/ca/mas/core/datasource/LocalStoreEntity; = Get(Com.CA.Mas.Core.Datasource.LocalStoreKey)
  get(Lcom/ca/mas/core/datasource/LocalStoreKey;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = Get(Com.CA.Mas.Core.Datasource.LocalStoreKey, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  getKeys(Ljava/lang/Object;)Ljava/util/List; = GetKeys(Java.Lang.Object)
  getKeys(Ljava/lang/Object;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = GetKeys(Java.Lang.Object, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  put(Lcom/ca/mas/core/datasource/LocalStoreKey;Lcom/ca/mas/core/datasource/LocalStoreEntity;)V = Put(Com.CA.Mas.Core.Datasource.LocalStoreKey, Com.CA.Mas.Core.Datasource.LocalStoreEntity)
  put(Lcom/ca/mas/core/datasource/LocalStoreKey;Lcom/ca/mas/core/datasource/LocalStoreEntity;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = Put(Com.CA.Mas.Core.Datasource.LocalStoreKey, Com.CA.Mas.Core.Datasource.LocalStoreEntity, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  remove(Lcom/ca/mas/core/datasource/LocalStoreKey;)V = Remove(Com.CA.Mas.Core.Datasource.LocalStoreKey)
  remove(Lcom/ca/mas/core/datasource/LocalStoreKey;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = Remove(Com.CA.Mas.Core.Datasource.LocalStoreKey, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  removeAll(Ljava/lang/Object;)V = RemoveAll(Java.Lang.Object)
  removeAll(Ljava/lang/Object;Lcom/ca/mas/core/datasource/DataSourceCallback;)V = RemoveAll(Java.Lang.Object, Com.CA.Mas.Core.Datasource.IDataSourceCallback)
  unlock()V = Unlock()
com/ca/mas/core/datasource/LocalStoreEntity = Com.CA.Mas.Core.Datasource.LocalStoreEntity
  <init>(Ljava/lang/String;[B)V = .ctor(string, byte[])
  getType()Ljava/lang/String; = Type
  getData()[B = GetData()
com/ca/mas/core/datasource/LocalStoreKey = Com.CA.Mas.Core.Datasource.LocalStoreKey
  <init>(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;)V = .ctor(string, Java.Lang.Integer, string)
  getCreatedBy()Ljava/lang/String; = CreatedBy
  getKey()Ljava/lang/String; = Key
  getSegment()Ljava/lang/Integer; = Segment
com/ca/mas/core/datasource/SecureAccountManagerStoreDataSource = Com.CA.Mas.Core.Datasource.SecureAccountManagerStoreDataSource
  <init>(Landroid/content/Context;Lorg/json/JSONObject;Lcom/ca/mas/core/datasource/DataConverter;)V = .ctor(Android.Content.Context, Org.Json.JSONObject, Com.CA.Mas.Core.Datasource.IDataConverter)
com/ca/mas/core/datasource/StringDataConverter = Com.CA.Mas.Core.Datasource.StringDataConverter
  <init>()V = .ctor()
  convert(Ljava/lang/String;[B)Ljava/lang/String; = Convert(string, byte[])
com/ca/mas/core/ent/EnterpriseBrowserException = Com.CA.Mas.Core.Ent.EnterpriseBrowserException
  <init>(I)V = .ctor(int)
  <init>(ILjava/lang/String;)V = .ctor(int, string)
  <init>(ILjava/lang/String;Ljava/lang/Throwable;)V = .ctor(int, string, Java.Lang.Throwable)
  <init>(ILjava/lang/Throwable;)V = .ctor(int, Java.Lang.Throwable)
com/ca/mas/core/ent/InvalidResponseException = Com.CA.Mas.Core.Ent.InvalidResponseException
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/core/error/MAGError = Com.CA.Mas.Core.Error.MAGError
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
  getResultCode()I = ResultCode
  setResultCode(I)V = ResultCode
com/ca/mas/core/error/MAGErrorCode = Com.CA.Mas.Core.Error.IMAGErrorCode
  ACCESS_TOKEN_INVALID = AccessTokenInvalid
  APPLICATION_ALREADY_REGISTERED = ApplicationAlreadyRegistered
  APPLICATION_INVALID = ApplicationInvalid
  APPLICATION_INVALID_MAG_IDENTIFER = ApplicationInvalidMagIdentifer
  APPLICATION_NOT_REGISTERED = ApplicationNotRegistered
  DEVICE_ALREADY_REGISTERED = DeviceAlreadyRegistered
  DEVICE_ALREADY_REGISTERED_WITH_DIFFERENT_FLOW = DeviceAlreadyRegisteredWithDifferentFlow
  DEVICE_COULD_NOT_BE_DEREGISTERED = DeviceCouldNotBeDeregistered
  DEVICE_NOT_LOGGED_IN = DeviceNotLoggedIn
  DEVICE_NOT_REGISTERED = DeviceNotRegistered
  DEVICE_NOT_RENEWED = DeviceNotRenewed
  DEVICE_RECORD_IS_NOT_VALID = DeviceRecordIsNotValid
  ENTERPRISE_BROWSER_APP_DOES_NOT_EXIST = EnterpriseBrowserAppDoesNotExist
  ENTERPRISE_BROWSER_INVALID_RESPONSE = EnterpriseBrowserInvalidResponse
  ENTERPRISE_BROWSER_NATIVE_APP_CANNOT_OPEN = EnterpriseBrowserNativeAppCannotOpen
  ENTERPRISE_BROWSER_NATIVE_APP_DOES_NOT_EXIST = EnterpriseBrowserNativeAppDoesNotExist
  ENTERPRISE_BROWSER_WEB_APP_INVALID_URL = EnterpriseBrowserWebAppInvalidUrl
  FAILED_FILE_NOT_FOUND = FailedFileNotFound
  FAILED_JSON_SERIALIZATION = FailedJsonSerialization
  FAILED_JSON_VALIDATION = FailedJsonValidation
  GEOLOCATION_IS_INVALID = GeolocationIsInvalid
  GEOLOCATION_IS_MISSING = GeolocationIsMissing
  INVALID_ENDPOINT = InvalidEndpoint
  INVALID_JSON = InvalidJson
  INVALID_URL = InvalidUrl
  MSISDN_IS_INVALID = MsisdnIsInvalid
  MSISDN_IS_MISSING = MsisdnIsMissing
  REGISTRATION_ATTEMPTED_WITH_UNREGISTERED_SCOPE = RegistrationAttemptedWithUnregisteredScope
  REGISTRATION_WITHOUT_REQUIRED_PARAMETERS = RegistrationWithoutRequiredParameters
  TOKEN_ID_TOKEN_EXPIRED = TokenIdTokenExpired
  TOKEN_ID_TOKEN_INVALID_AUD = TokenIdTokenInvalidAud
  TOKEN_ID_TOKEN_INVALID_AZP = TokenIdTokenInvalidAzp
  TOKEN_ID_TOKEN_INVALID_SIGNATURE = TokenIdTokenInvalidSignature
  TOKEN_INVALID_ID_TOKEN = TokenInvalidIdToken
  TYPE_UNSUPPORTED = TypeUnsupported
  UNKNOWN = Unknown
com/ca/mas/core/error/MAGException = Com.CA.Mas.Core.Error.MAGException
  <init>(I)V = .ctor(int)
  <init>(ILjava/lang/String;)V = .ctor(int, string)
  <init>(ILjava/lang/String;Ljava/lang/Throwable;)V = .ctor(int, string, Java.Lang.Throwable)
  <init>(ILjava/lang/Throwable;)V = .ctor(int, Java.Lang.Throwable)
  getErrorCode()I = ErrorCode
com/ca/mas/core/error/MAGRuntimeException = Com.CA.Mas.Core.Error.MAGRuntimeException
  <init>(I)V = .ctor(int)
  <init>(ILjava/lang/String;)V = .ctor(int, string)
  <init>(ILjava/lang/String;Ljava/lang/Throwable;)V = .ctor(int, string, Java.Lang.Throwable)
  <init>(ILjava/lang/Throwable;)V = .ctor(int, Java.Lang.Throwable)
  getErrorCode()I = ErrorCode
com/ca/mas/core/error/MAGServerException = Com.CA.Mas.Core.Error.MAGServerException
  <init>(IILjava/lang/String;Ljava/lang/String;)V = .ctor(int, int, string, string)
  <init>(IILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(int, int, string, string, Java.Lang.Throwable)
  <init>(Lcom/ca/mas/core/error/MAGServerException;)V = .ctor(Com.CA.Mas.Core.Error.MAGServerException)
  getContentType()Ljava/lang/String; = ContentType
  getErrorCode()I = ErrorCode
  getStatus()I = Status
com/ca/mas/core/error/MAGStateException = Com.CA.Mas.Core.Error.MAGStateException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/core/error/TargetApiException = Com.CA.Mas.Core.Error.TargetApiException
com/ca/mas/core/EventDispatcher = Com.CA.Mas.Core.EventDispatcher
  <init>()V = .ctor()
  AFTER_DEREGISTER = AfterDeregister
  AFTER_GATEWAY_SWITCH = AfterGatewaySwitch
  BEFORE_DEREGISTER = BeforeDeregister
  BEFORE_GATEWAY_SWITCH = BeforeGatewaySwitch
  LOGOUT = Logout
  RESET_LOCALLY = ResetLocally
  STARTED = Started
  STOP = Stop
com/ca/mas/core/http/ContentType = Com.CA.Mas.Core.Http.ContentType
  <init>(Ljava/lang/String;Ljava/nio/charset/Charset;)V = .ctor(string, Java.Nio.Charset.Charset)
  APPLICATION_FORM_URLENCODED = ApplicationFormUrlencoded
  APPLICATION_JSON = ApplicationJson
  APPLICATION_OCTET_STREAM = ApplicationOctetStream
  TEXT_PLAIN = TextPlain
  getCharset()Ljava/nio/charset/Charset; = Charset
  getMimeType()Ljava/lang/String; = MimeType
com/ca/mas/core/http/MAGHttpClient = Com.CA.Mas.Core.Http.MAGHttpClient
  <init>()V = .ctor()
  onConnectionObtained(Ljava/net/HttpURLConnection;)V = OnConnectionObtained(Java.Net.HttpURLConnection)
com/ca/mas/core/http/MAGRequestBody = Com.CA.Mas.Core.Http.MAGRequestBody
  <init>()V = .ctor()
  getContentAsJsonValue()Ljava/lang/Object; = ContentAsJsonValue
  getContentLength()J = ContentLength
  getContentType()Lcom/ca/mas/core/http/ContentType; = ContentType
  byteArrayBody([B)Lcom/ca/mas/core/http/MAGRequestBody; = ByteArrayBody(byte[])
  jsonBody(Lorg/json/JSONObject;)Lcom/ca/mas/core/http/MAGRequestBody; = JsonBody(Org.Json.JSONObject)
  stringBody(Ljava/lang/String;)Lcom/ca/mas/core/http/MAGRequestBody; = StringBody(string)
  urlEncodedFormBody(Ljava/util/List;)Lcom/ca/mas/core/http/MAGRequestBody; = UrlEncodedFormBody(System.Collections.Generic.IList<Android.Util.Pair>)
  write(Ljava/io/OutputStream;)V = Write(System.IO.Stream)
com/ca/mas/core/http/SSLSocketFactoryProvider = Com.CA.Mas.Core.Http.SSLSocketFactoryProvider
  getInstance()Lcom/ca/mas/core/http/SSLSocketFactoryProvider; = Instance
  getPrimaryGatewaySocketFactory()Ljavax/net/ssl/SSLSocketFactory; = PrimaryGatewaySocketFactory
  createSSLSocketFactory(Lcom/ca/mas/foundation/MASSecurityConfiguration;)Ljavax/net/ssl/SSLSocketFactory; = CreateSSLSocketFactory(Com.CA.Mas.Foundation.IMASSecurityConfiguration)
  get(Ljava/net/URL;)Ljavax/net/ssl/SSLSocketFactory; = Get(Java.Net.URL)
  getSSLSocketFactory(Landroid/net/Uri;)Ljavax/net/ssl/SSLSocketFactory; = GetSSLSocketFactory(Android.Net.Uri)
com/ca/mas/core/io/Charsets = Com.CA.Mas.Core.IO.Charsets
  ASCII = Ascii
  ISO_8859_1 = Iso88591
  UTF8 = Utf8
com/ca/mas/core/io/http/SingleKeyX509KeyManager = Com.CA.Mas.Core.IO.Http.SingleKeyX509KeyManager
  <init>(Ljava/security/PrivateKey;[Ljava/security/cert/X509Certificate;)V = .ctor(Java.Security.IPrivateKey, Java.Security.Cert.X509Certificate[])
  chooseClientAlias([Ljava/lang/String;[Ljava/security/Principal;Ljava/net/Socket;)Ljava/lang/String; = ChooseClientAlias(string[], Java.Security.IPrincipal[], Java.Net.Socket)
  chooseServerAlias(Ljava/lang/String;[Ljava/security/Principal;Ljava/net/Socket;)Ljava/lang/String; = ChooseServerAlias(string, Java.Security.IPrincipal[], Java.Net.Socket)
  getCertificateChain(Ljava/lang/String;)[Ljava/security/cert/X509Certificate; = GetCertificateChain(string)
  getClientAliases(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String; = GetClientAliases(string, Java.Security.IPrincipal[])
  getPrivateKey(Ljava/lang/String;)Ljava/security/PrivateKey; = GetPrivateKey(string)
  getServerAliases(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String; = GetServerAliases(string, Java.Security.IPrincipal[])
com/ca/mas/core/io/http/TrustedCertificateConfigurationTrustManager = Com.CA.Mas.Core.IO.Http.TrustedCertificateConfigurationTrustManager
  <init>(Lcom/ca/mas/foundation/MASSecurityConfiguration;)V = .ctor(Com.CA.Mas.Foundation.IMASSecurityConfiguration)
  checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V = CheckClientTrusted(Java.Security.Cert.X509Certificate[], string)
  checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V = CheckServerTrusted(Java.Security.Cert.X509Certificate[], string)
  getAcceptedIssuers()[Ljava/security/cert/X509Certificate; = GetAcceptedIssuers()
com/ca/mas/core/io/IoUtils = Com.CA.Mas.Core.IO.IoUtils
  base64(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String; = Base64(string, Java.Nio.Charset.Charset)
  closeQuietly(Ljava/io/Closeable;)V = CloseQuietly(Java.IO.ICloseable)
  hexDump([B)Ljava/lang/String; = HexDump(byte[])
  hexDump([BII)Ljava/lang/String; = HexDump(byte[], int, int)
  hexDump([BIIZ)Ljava/lang/String; = HexDump(byte[], int, int, bool)
  hexToByteArray(Ljava/lang/String;)[B = HexToByteArray(string)
  slurpStream(Ljava/io/InputStream;I)[B = SlurpStream(System.IO.Stream, int)
com/ca/mas/core/io/ssl/MAGSocketFactory = Com.CA.Mas.Core.IO.Ssl.MAGSocketFactory
  <init>(Lcom/ca/mas/foundation/MASSecurityConfiguration;)V = .ctor(Com.CA.Mas.Foundation.IMASSecurityConfiguration)
  createTLSSocketFactory()Ljavax/net/ssl/SSLSocketFactory; = CreateTLSSocketFactory()
com/ca/mas/core/MAGResultReceiver = Com.CA.Mas.Core.MAGResultReceiver
  <init>()V = .ctor()
  <init>(Landroid/os/Handler;)V = .ctor(Android.OS.Handler)
  onError(Lcom/ca/mas/core/error/MAGError;)V = OnError(Com.CA.Mas.Core.Error.MAGError)
  onRequestCancelled(Landroid/os/Bundle;)V = OnRequestCancelled(Android.OS.Bundle)
com/ca/mas/core/MobileSsoConfig = Com.CA.Mas.Core.IMobileSsoConfig
  AUTHENTICATE_OTP_PATH = AuthenticateOtpPath
  PROP_ADD_CUSTOM_POLICIES = PropAddCustomPolicies
  PROP_AUTHORIZE_REDIRECT_URI = PropAuthorizeRedirectUri
  PROP_BLE_CHARACTERISTIC_UUID = PropBleCharacteristicUuid
  PROP_BLE_RSSI = PropBleRssi
  PROP_BLE_SERVICE_UUID = PropBleServiceUuid
  PROP_CLIENT_CERT_RSA_KEYBITS = PropClientCertRsaKeybits
  PROP_CLIENT_CREDENTIAL_MANAGER = PropClientCredentialManager
  PROP_CLIENT_ID = PropClientId
  PROP_CLIENT_SECRET = PropClientSecret
  PROP_LOCATION_ENABLED = PropLocationEnabled
  PROP_LOCATION_PROVIDER_NAME = PropLocationProviderName
  PROP_MSISDN_ENABLED = PropMsisdnEnabled
  PROP_OAUTH_SCOPE = PropOauthScope
  PROP_ORGANIZATION = PropOrganization
  PROP_PACKAGE_NAME = PropPackageName
  PROP_PRIVATE_TOKEN_MANAGER = PropPrivateTokenManager
  PROP_RESPONSE_BUFFERING_ENABLED = PropResponseBufferingEnabled
  PROP_RESPONSE_BUFFERING_MAX_SIZE = PropResponseBufferingMaxSize
  PROP_SHARE_TOKEN_MANAGER = PropShareTokenManager
  PROP_SSO_ENABLED = PropSsoEnabled
  PROP_STORAGE = PropStorage
  PROP_TOKEN_HOSTNAME = PropTokenHostname
  PROP_TOKEN_PORT_HTTP = PropTokenPortHttp
  PROP_TOKEN_PORT_HTTPS = PropTokenPortHttps
  PROP_TOKEN_URI_PREFIX = PropTokenUriPrefix
  PROP_TOKEN_URL_SUFFIX_AUTHORIZE = PropTokenUrlSuffixAuthorize
  PROP_TOKEN_URL_SUFFIX_CLIENT_CREDENTIALS = PropTokenUrlSuffixClientCredentials
  PROP_TOKEN_URL_SUFFIX_ENTERPRISE_APPS = PropTokenUrlSuffixEnterpriseApps
  PROP_TOKEN_URL_SUFFIX_REGISTER_DEVICE = PropTokenUrlSuffixRegisterDevice
  PROP_TOKEN_URL_SUFFIX_REGISTER_DEVICE_CLIENT = PropTokenUrlSuffixRegisterDeviceClient
  PROP_TOKEN_URL_SUFFIX_REMOVE_DEVICE_X509 = PropTokenUrlSuffixRemoveDeviceX509
  PROP_TOKEN_URL_SUFFIX_RENEW_DEVICE = PropTokenUrlSuffixRenewDevice
  PROP_TOKEN_URL_SUFFIX_REQUEST_TOKEN = PropTokenUrlSuffixRequestToken
  PROP_TOKEN_URL_SUFFIX_REQUEST_TOKEN_SSO = PropTokenUrlSuffixRequestTokenSso
  PROP_TOKEN_URL_SUFFIX_RESOURCE_OWNER_LOGOUT = PropTokenUrlSuffixResourceOwnerLogout
  PROP_TRUSTED_CERT_PINNED_PUBLIC_KEY_HASHES = PropTrustedCertPinnedPublicKeyHashes
  PROP_TRUSTED_CERTS_PEM = PropTrustedCertsPem
  PROP_TRUSTED_PUBLIC_PKI = PropTrustedPublicPki
com/ca/mas/core/MobileSsoFactory = Com.CA.Mas.Core.MobileSsoFactory
  reset()V = Reset()
com/ca/mas/core/MobileSsoListener = Com.CA.Mas.Core.IMobileSsoListener
  onAuthenticateRequest(JLcom/ca/mas/core/service/AuthenticationProvider;)V = OnAuthenticateRequest(long, Com.CA.Mas.Core.Service.AuthenticationProvider)
  onOtpAuthenticationRequest(Lcom/ca/mas/core/auth/otp/OtpAuthenticationHandler;)V = OnOtpAuthenticationRequest(Com.CA.Mas.Core.Auth.Otp.OtpAuthenticationHandler)
com/ca/mas/core/oauth/CodeVerifierCache = Com.CA.Mas.Core.Oauth.CodeVerifierCache
  getInstance()Lcom/ca/mas/core/oauth/CodeVerifierCache; = Instance
  store(Ljava/lang/String;Ljava/lang/String;)V = Store(string, string)
  take()Ljava/lang/String; = Take()
  take(Ljava/lang/String;)Ljava/lang/String; = Take(string)
com/ca/mas/core/oauth/GrantProvider = Com.CA.Mas.Core.Oauth.GrantProvider
  CLIENT_CREDENTIALS = ClientCredentials
  PASSWORD = Password
  isSessionSupported()Z = IsSessionSupported
  getCredentials(Lcom/ca/mas/core/context/MssoContext;)Lcom/ca/mas/foundation/MASAuthCredentials; = GetCredentials(Com.CA.Mas.Core.Context.MssoContext)
  getRegistrationPath(Lcom/ca/mas/core/context/MssoContext;)Ljava/net/URI; = GetRegistrationPath(Com.CA.Mas.Core.Context.MssoContext)
  valueOf(Ljava/lang/String;)Lcom/ca/mas/core/oauth/GrantProvider; = ValueOf(string)
  values()[Lcom/ca/mas/core/oauth/GrantProvider; = Values()
com/ca/mas/core/oauth/OAuthClient = Com.CA.Mas.Core.Oauth.OAuthClient
  <init>(Lcom/ca/mas/core/context/MssoContext;)V = .ctor(Com.CA.Mas.Core.Context.MssoContext)
  AUTHORIZATION = Authorization
  AUTH_URL = AuthUrl
  CODE = Code
  CODE_CHALLENGE = CodeChallenge
  CODE_CHALLENGE_METHOD = CodeChallengeMethod
  DISPLAY = Display
  ID = Id
  IDP = Idp
  ID_TOKEN = IdToken
  ID_TOKEN_TYPE = IdTokenType
  LOGOUT_APPS = LogoutApps
  MSSO_REGISTER = MssoRegister
  POLL_URL = PollUrl
  PROVIDER = Provider
  PROVIDERS = Providers
  REDIRECT_URI = RedirectUri
  RESPONSE_TYPE = ResponseType
  STATE = State
  getSocialPlatformProvider(Landroid/content/Context;)Lcom/ca/mas/core/service/AuthenticationProvider; = GetSocialPlatformProvider(Android.Content.Context)
  logout(Lcom/ca/mas/core/token/IdToken;Ljava/lang/String;Ljava/lang/String;Z)V = Logout(Com.CA.Mas.Core.Token.IdToken, string, string, bool)
com/ca/mas/core/oauth/OAuthClientUtil = Com.CA.Mas.Core.Oauth.OAuthClientUtil
  generateCodeChallenge()Lcom/ca/mas/core/oauth/PKCE; = GenerateCodeChallenge()
com/ca/mas/core/oauth/OAuthException = Com.CA.Mas.Core.Oauth.OAuthException
  <init>(I)V = .ctor(int)
  <init>(ILjava/lang/String;)V = .ctor(int, string)
  <init>(ILjava/lang/String;Ljava/lang/Throwable;)V = .ctor(int, string, Java.Lang.Throwable)
  <init>(ILjava/lang/Throwable;)V = .ctor(int, Java.Lang.Throwable)
com/ca/mas/core/oauth/OAuthServerException = Com.CA.Mas.Core.Oauth.OAuthServerException
  <init>(IILjava/lang/String;Ljava/lang/String;)V = .ctor(int, int, string, string)
  <init>(IILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(int, int, string, string, Java.Lang.Throwable)
  <init>(Lcom/ca/mas/core/error/MAGServerException;)V = .ctor(Com.CA.Mas.Core.Error.MAGServerException)
com/ca/mas/core/oauth/OAuthTokenClient = Com.CA.Mas.Core.Oauth.OAuthTokenClient
  <init>(Lcom/ca/mas/core/context/MssoContext;)V = .ctor(Com.CA.Mas.Core.Context.MssoContext)
  obtainAccessTokenUsingIdToken(Lcom/ca/mas/core/token/IdToken;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/ca/mas/core/oauth/OAuthTokenResponse; = ObtainAccessTokenUsingIdToken(Com.CA.Mas.Core.Token.IdToken, string, string, string)
  obtainTokensUsingCredentials(Lcom/ca/mas/core/request/MAGInternalRequest;Ljava/lang/String;Ljava/lang/String;Z)Lcom/ca/mas/core/oauth/OAuthTokenResponse; = ObtainTokensUsingCredentials(Com.CA.Mas.Core.Request.MAGInternalRequest, string, string, bool)
  obtainTokenUsingRefreshToken(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/ca/mas/core/oauth/OAuthTokenResponse; = ObtainTokenUsingRefreshToken(string, string, string)
com/ca/mas/core/oauth/OAuthTokenResponse = Com.CA.Mas.Core.Oauth.OAuthTokenResponse
  <init>(IILjava/lang/String;)V = .ctor(int, int, string)
  <init>(ILjava/lang/String;)V = .ctor(int, string)
  <init>(Lcom/ca/mas/core/client/ServerResponse;)V = .ctor(Com.CA.Mas.Core.Client.ServerResponse)
  getAccessToken()Ljava/lang/String; = AccessToken
  getExpiresIn()J = ExpiresIn
  getGrantedScope()Ljava/lang/String; = GrantedScope
  getIdToken()Lcom/ca/mas/core/token/IdToken; = IdToken
  isBearer()Z = IsBearer
  getRefreshToken()Ljava/lang/String; = RefreshToken
com/ca/mas/core/oauth/PKCE = Com.CA.Mas.Core.Oauth.PKCE
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string)
  codeChallenge = CodeChallenge
  codeChallengeMethod = CodeChallengeMethod
  codeVerifier = CodeVerifier
com/ca/mas/core/policy/exceptions/CertificateExpiredException = Com.CA.Mas.Core.Policy.Exceptions.CertificateExpiredException
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
  recover(Lcom/ca/mas/core/context/MssoContext;)V = Recover(Com.CA.Mas.Core.Context.MssoContext)
  renewDevice(Lcom/ca/mas/core/context/MssoContext;)V = RenewDevice(Com.CA.Mas.Core.Context.MssoContext)
com/ca/mas/core/policy/exceptions/CredentialRequiredException = Com.CA.Mas.Core.Policy.Exceptions.CredentialRequiredException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/core/policy/exceptions/InvalidClientCredentialException = Com.CA.Mas.Core.Policy.Exceptions.InvalidClientCredentialException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
  recover(Lcom/ca/mas/core/context/MssoContext;)V = Recover(Com.CA.Mas.Core.Context.MssoContext)
com/ca/mas/core/policy/exceptions/LocationInvalidException = Com.CA.Mas.Core.Policy.Exceptions.LocationInvalidException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/core/policy/exceptions/LocationRequiredException = Com.CA.Mas.Core.Policy.Exceptions.LocationRequiredException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/core/policy/exceptions/MobileNumberInvalidException = Com.CA.Mas.Core.Policy.Exceptions.MobileNumberInvalidException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/core/policy/exceptions/MobileNumberRequiredException = Com.CA.Mas.Core.Policy.Exceptions.MobileNumberRequiredException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/core/policy/exceptions/OtpException = Com.CA.Mas.Core.Policy.Exceptions.OtpException
  <init>(IILjava/lang/String;Ljava/lang/String;Lcom/ca/mas/core/auth/otp/model/OtpResponseHeaders;)V = .ctor(int, int, string, string, Com.CA.Mas.Core.Auth.Otp.Model.OtpResponseHeaders)
  <init>(IILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Lcom/ca/mas/core/auth/otp/model/OtpResponseHeaders;)V = .ctor(int, int, string, string, Java.Lang.Throwable, Com.CA.Mas.Core.Auth.Otp.Model.OtpResponseHeaders)
  getOtpResponseHeaders()Lcom/ca/mas/core/auth/otp/model/OtpResponseHeaders; = OtpResponseHeaders
com/ca/mas/core/policy/exceptions/RetryRequestException = Com.CA.Mas.Core.Policy.Exceptions.RetryRequestException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
  recover(Lcom/ca/mas/core/context/MssoContext;)V = Recover(Com.CA.Mas.Core.Context.MssoContext)
com/ca/mas/core/policy/exceptions/TokenStoreUnavailableException = Com.CA.Mas.Core.Policy.Exceptions.TokenStoreUnavailableException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/core/policy/PolicyManager = Com.CA.Mas.Core.Policy.PolicyManager
  <init>(Lcom/ca/mas/core/context/MssoContext;)V = .ctor(Com.CA.Mas.Core.Context.MssoContext)
  close()V = Close()
  init(Landroid/content/Context;)V = Init(Android.Content.Context)
  processRequest(Lcom/ca/mas/core/policy/RequestInfo;)V = ProcessRequest(Com.CA.Mas.Core.Policy.RequestInfo)
com/ca/mas/core/policy/RequestInfo = Com.CA.Mas.Core.Policy.RequestInfo
  getExtra()Landroid/os/Bundle; = Extra
  getNumAttempts()I = NumAttempts
  getRequest()Lcom/ca/mas/core/request/MAGInternalRequest; = Request
  incrementNumAttempts()V = IncrementNumAttempts()
com/ca/mas/core/registration/DeviceRegistrationAwaitingActivationException = Com.CA.Mas.Core.Registration.DeviceRegistrationAwaitingActivationException
  <init>()V = .ctor()
com/ca/mas/core/registration/RegistrationClient = Com.CA.Mas.Core.Registration.RegistrationClient
  <init>(Lcom/ca/mas/core/context/MssoContext;)V = .ctor(Com.CA.Mas.Core.Context.MssoContext)
  removeDeviceRegistration()V = RemoveDeviceRegistration()
com/ca/mas/core/registration/RegistrationException = Com.CA.Mas.Core.Registration.RegistrationException
  <init>(I)V = .ctor(int)
  <init>(ILjava/lang/String;)V = .ctor(int, string)
  <init>(ILjava/lang/String;Ljava/lang/Throwable;)V = .ctor(int, string, Java.Lang.Throwable)
  <init>(ILjava/lang/Throwable;)V = .ctor(int, Java.Lang.Throwable)
com/ca/mas/core/registration/RegistrationServerException = Com.CA.Mas.Core.Registration.RegistrationServerException
  <init>(IILjava/lang/String;Ljava/lang/String;)V = .ctor(int, int, string, string)
  <init>(IILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(int, int, string, string, Java.Lang.Throwable)
  <init>(Lcom/ca/mas/core/error/MAGServerException;)V = .ctor(Com.CA.Mas.Core.Error.MAGServerException)
com/ca/mas/core/request/internal/AuthenticateRequest = Com.CA.Mas.Core.Request.Internal.AuthenticateRequest
  <init>()V = .ctor()
com/ca/mas/core/request/internal/MAGRequestProxy = Com.CA.Mas.Core.Request.Internal.MAGRequestProxy
  <init>()V = .ctor()
  getBody()Lcom/ca/mas/core/http/MAGRequestBody; = Body
  getGrantProvider()Lcom/ca/mas/core/oauth/GrantProvider; = GrantProvider
  getHeaders()Ljava/util/Map; = Headers
  isPublic()Z = IsPublic
  getMethod()Ljava/lang/String; = Method
  getScope()Ljava/lang/String; = Scope
  getURL()Ljava/net/URL; = URL
com/ca/mas/core/request/internal/OAuthTokenRequest = Com.CA.Mas.Core.Request.Internal.OAuthTokenRequest
  <init>()V = .ctor()
  ACCESSTOKEN = Accesstoken
  EXPIRY = Expiry
  REFRESHTOKEN = Refreshtoken
com/ca/mas/core/request/internal/StateRequest = Com.CA.Mas.Core.Request.Internal.StateRequest
  <init>()V = .ctor()
  ACCESS_TOKEN = AccessToken
  CLIENT_ID = ClientId
  MAG_IDENTIFIER = MagIdentifier
com/ca/mas/core/request/MAGInternalRequest = Com.CA.Mas.Core.Request.MAGInternalRequest
  isLocalRequest()Z = IsLocalRequest
  addHeader(Ljava/lang/String;Ljava/lang/String;)V = AddHeader(string, string)
com/ca/mas/core/security/AccountManagerKeyStorageProvider = Com.CA.Mas.Core.Security.AccountManagerKeyStorageProvider
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  deleteSecretKeyLocally(Ljava/lang/String;)Z = DeleteSecretKeyLocally(string)
  getEncryptedSecretKey(Ljava/lang/String;)[B = GetEncryptedSecretKey(string)
  storeSecretKeyLocally(Ljava/lang/String;[B)Z = StoreSecretKeyLocally(string, byte[])
com/ca/mas/core/security/DefaultEncryptionProvider = Com.CA.Mas.Core.Security.DefaultEncryptionProvider
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Lcom/ca/mas/core/security/KeyStorageProvider;)V = .ctor(Android.Content.Context, Com.CA.Mas.Core.Security.IKeyStorageProvider)
  getKeyAlias()Ljava/lang/String; = KeyAlias
  decrypt([B)[B = Decrypt(byte[])
  encrypt([B)[B = Encrypt(byte[])
com/ca/mas/core/security/EncryptionProvider = Com.CA.Mas.Core.Security.IEncryptionProvider
  decrypt([B)[B = Decrypt(byte[])
  encrypt([B)[B = Encrypt(byte[])
com/ca/mas/core/security/GenerateKeyAttribute = Com.CA.Mas.Core.Security.GenerateKeyAttribute
  <init>()V = .ctor()
  getDn()Ljava/lang/String; = Dn
  setDn(Ljava/lang/String;)V = Dn
  isEncryptionRequired()Z = EncryptionRequired
  setEncryptionRequired(Z)V = EncryptionRequired
  isInvalidatedByBiometricEnrollment()Z = InvalidatedByBiometricEnrollment
  setInvalidatedByBiometricEnrollment(Z)V = InvalidatedByBiometricEnrollment
  getKeySize()I = KeySize
  setKeySize(I)V = KeySize
  isUserAuthenticationRequired()Z = UserAuthenticationRequired
  setUserAuthenticationRequired(Z)V = UserAuthenticationRequired
  getUserAuthenticationValidityDurationSeconds()I = UserAuthenticationValidityDurationSeconds
  setUserAuthenticationValidityDurationSeconds(I)V = UserAuthenticationValidityDurationSeconds
com/ca/mas/core/security/KeyStorageProvider = Com.CA.Mas.Core.Security.IKeyStorageProvider
  getKey(Ljava/lang/String;Z)Ljavax/crypto/SecretKey; = GetKey(string, bool)
  removeKey(Ljava/lang/String;)Z = RemoveKey(string)
com/ca/mas/core/security/KeyStore = Com.CA.Mas.Core.Security.IKeyStore
  KEY_NOT_FOUND = KeyNotFound
  LOCKED = Locked
  NO_ERROR = NoError
  PERMISSION_DENIED = PermissionDenied
  PROTOCOL_ERROR = ProtocolError
  SYSTEM_ERROR = SystemError
  UNDEFINED_ACTION = UndefinedAction
  UNINITIALIZED = Uninitialized
  VALUE_CORRUPTED = ValueCorrupted
  WRONG_PASSWORD = WrongPassword
  isUnlocked()Z = IsUnlocked
  getLastError()I = LastError
  contains(Ljava/lang/String;)Z = Contains(string)
  delete(Ljava/lang/String;)Z = Delete(string)
  get(Ljava/lang/String;)[B = Get(string)
  put(Ljava/lang/String;[B)Z = Put(string, byte[])
  saw(Ljava/lang/String;)[Ljava/lang/String; = Saw(string)
com/ca/mas/core/security/KeyStoreAdapter = Com.CA.Mas.Core.Security.KeyStoreAdapter
  isUnlocked()Z = IsUnlocked
  getKeyStore()Lcom/ca/mas/core/security/KeyStore; = KeyStore
  getLastError()I = LastError
  contains(Ljava/lang/String;)Z = Contains(string)
  delete(Ljava/lang/String;)Z = Delete(string)
  get(Ljava/lang/String;)[B = Get(string)
  put(Ljava/lang/String;[B)Z = Put(string, byte[])
  saw(Ljava/lang/String;)[Ljava/lang/String; = Saw(string)
com/ca/mas/core/security/KeyStoreException = Com.CA.Mas.Core.Security.KeyStoreException
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/core/security/KeyStoreKeyStorageProvider = Com.CA.Mas.Core.Security.KeyStoreKeyStorageProvider
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  ASYM_KEY_ALIAS = AsymKeyAlias
  RSA_ECB_PKCS1_PADDING = RsaEcbPkcs1Padding
  getContext()Landroid/content/Context; = Context
  decryptSecretKey([B)Ljavax/crypto/SecretKey; = DecryptSecretKey(byte[])
  encryptSecretKey(Ljavax/crypto/SecretKey;)[B = EncryptSecretKey(Javax.Crypto.ISecretKey)
  getKey(Ljava/lang/String;Z)Ljavax/crypto/SecretKey; = GetKey(string, bool)
  removeKey(Ljava/lang/String;)Z = RemoveKey(string)
com/ca/mas/core/security/LockableEncryptionProvider = Com.CA.Mas.Core.Security.LockableEncryptionProvider
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Ljava/lang/String;)V = .ctor(Android.Content.Context, string)
  ctx = Ctx
  clear()Z = Clear()
  decrypt([B)[B = Decrypt(byte[])
  encrypt([B)[B = Encrypt(byte[])
com/ca/mas/core/security/ScreenLockEncryptionProvider = Com.CA.Mas.Core.Security.ScreenLockEncryptionProvider
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Lcom/ca/mas/core/security/KeyStoreKeyStorageProvider;)V = .ctor(Android.Content.Context, Com.CA.Mas.Core.Security.KeyStoreKeyStorageProvider)
  ctx = Ctx
  decrypt([B)[B = Decrypt(byte[])
  deviceHasScreenLock()Z = DeviceHasScreenLock()
  encrypt([B)[B = Encrypt(byte[])
  getKey(Ljava/lang/String;)Ljavax/crypto/SecretKey; = GetKey(string)
com/ca/mas/core/security/SecureLockException = Com.CA.Mas.Core.Security.SecureLockException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/core/service/AuthenticationProvider = Com.CA.Mas.Core.Service.AuthenticationProvider
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  <init>(Ljava/lang/String;Ljava/util/List;)V = .ctor(string, System.Collections.Generic.IList<Com.CA.Mas.Core.Service.Provider>)
  ALL = All
  CREATOR = Creator
  ENTERPRISE = Enterprise
  getIdp()Ljava/lang/String; = Idp
  isEnterpriseEnabled()Z = IsEnterpriseEnabled
  getProviders()Ljava/util/List; = Providers
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/ca/mas/core/service/MssoClient = Com.CA.Mas.Core.Service.MssoClient
  <init>(Lcom/ca/mas/core/context/MssoContext;Landroid/content/Context;)V = .ctor(Com.CA.Mas.Core.Context.MssoContext, Android.Content.Context)
  authenticate(Lcom/ca/mas/core/token/IdToken;Lcom/ca/mas/core/MAGResultReceiver;)V = Authenticate(Com.CA.Mas.Core.Token.IdToken, Com.CA.Mas.Core.MAGResultReceiver)
  authenticate(Lcom/ca/mas/foundation/MASAuthCredentials;Lcom/ca/mas/core/MAGResultReceiver;)V = Authenticate(Com.CA.Mas.Foundation.IMASAuthCredentials, Com.CA.Mas.Core.MAGResultReceiver)
  authenticate(Ljava/lang/String;[CLcom/ca/mas/core/MAGResultReceiver;)V = Authenticate(string, char[], Com.CA.Mas.Core.MAGResultReceiver)
  authenticate(Ljava/lang/String;Ljava/lang/String;Lcom/ca/mas/core/MAGResultReceiver;)V = Authenticate(string, string, Com.CA.Mas.Core.MAGResultReceiver)
  cancelAll(Landroid/os/Bundle;)V = CancelAll(Android.OS.Bundle)
  cancelRequest(JLandroid/os/Bundle;)V = CancelRequest(long, Android.OS.Bundle)
  processPendingRequests()V = ProcessPendingRequests()
com/ca/mas/core/service/MssoIntents = Com.CA.Mas.Core.Service.IMssoIntents
  ACTION_CREDENTIALS_OBTAINED = ActionCredentialsObtained
  ACTION_LAUNCH_ENTERPRISE_BROWSER = ActionLaunchEnterpriseBrowser
  ACTION_OBTAIN_CREDENTIALS = ActionObtainCredentials
  ACTION_PROCESS_REQUEST = ActionProcessRequest
  ACTION_RENDER_WEBVIEW = ActionRenderWebview
  ACTION_SYNC = ActionSync
  ACTION_VALIDATE_OTP = ActionValidateOtp
  EXTRA_APP = ExtraApp
  EXTRA_APPS = ExtraApps
  EXTRA_AUTH_PROVIDERS = ExtraAuthProviders
  EXTRA_CREDENTIALS = ExtraCredentials
  EXTRA_OTP_HANDLER = ExtraOtpHandler
  EXTRA_OTP_SELECTED_CHANNELS = ExtraOtpSelectedChannels
  EXTRA_OTP_VALUE = ExtraOtpValue
  EXTRA_REQUEST_ID = ExtraRequestId
  EXTRA_SOCIAL_LOGIN_URL = ExtraSocialLoginUrl
  RESULT_CODE_ERR_AUTHORIZE = ResultCodeErrAuthorize
  RESULT_CODE_ERR_AWAITING_REGISTRATION = ResultCodeErrAwaitingRegistration
  RESULT_CODE_ERR_BAD_REQUEST_ID = ResultCodeErrBadRequestId
  RESULT_CODE_ERR_CANCELED = ResultCodeErrCanceled
  RESULT_CODE_ERR_CLIENT_CREDENTIALS = ResultCodeErrClientCredentials
  RESULT_CODE_ERR_ENTERPRISE_BROWSER_APP_NOT_EXIST = ResultCodeErrEnterpriseBrowserAppNotExist
  RESULT_CODE_ERR_ENTERPRISE_BROWSER_INVALID_JSON = ResultCodeErrEnterpriseBrowserInvalidJson
  RESULT_CODE_ERR_ENTERPRISE_BROWSER_INVALID_URL = ResultCodeErrEnterpriseBrowserInvalidUrl
  RESULT_CODE_ERR_ENTERPRISE_BROWSER_NATIVE_APP_NOT_EXIST = ResultCodeErrEnterpriseBrowserNativeAppNotExist
  RESULT_CODE_ERR_IO = ResultCodeErrIo
  RESULT_CODE_ERR_JWT_AUD_INVALID = ResultCodeErrJwtAudInvalid
  RESULT_CODE_ERR_JWT_AZP_INVALID = ResultCodeErrJwtAzpInvalid
  RESULT_CODE_ERR_JWT_EXPIRED = ResultCodeErrJwtExpired
  RESULT_CODE_ERR_JWT_INVALID = ResultCodeErrJwtInvalid
  RESULT_CODE_ERR_JWT_SIGNATURE_INVALID = ResultCodeErrJwtSignatureInvalid
  RESULT_CODE_ERR_LOCATION_REQUIRED = ResultCodeErrLocationRequired
  RESULT_CODE_ERR_LOCATION_UNAUTHORIZED = ResultCodeErrLocationUnauthorized
  RESULT_CODE_ERR_MSISDN_REQUIRED = ResultCodeErrMsisdnRequired
  RESULT_CODE_ERR_MSISDN_UNAUTHORIZED = ResultCodeErrMsisdnUnauthorized
  RESULT_CODE_ERR_OAUTH = ResultCodeErrOauth
  RESULT_CODE_ERR_REGISTRATION = ResultCodeErrRegistration
  RESULT_CODE_ERR_UNKNOWN = ResultCodeErrUnknown
  RESULT_CODE_SUCCESS = ResultCodeSuccess
  RESULT_ERROR = ResultError
  RESULT_ERROR_MESSAGE = ResultErrorMessage
  RESULT_REQUEST_ID = ResultRequestId
com/ca/mas/core/service/MssoState = Com.CA.Mas.Core.Service.MssoState
  <init>()V = .ctor()
com/ca/mas/core/service/Provider = Com.CA.Mas.Core.Service.Provider
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)V = .ctor(string, string, string, Java.Lang.Integer)
  CREATOR = Creator
  getIconId()Ljava/lang/Integer; = IconId
  getId()Ljava/lang/String; = Id
  getPollUrl()Ljava/lang/String; = PollUrl
  getUrl()Ljava/lang/String; = Url
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/ca/mas/core/storage/implementation/AccountManagerStorage = Com.CA.Mas.Core.Storage.Implementation.AccountManagerStorage
  <init>(Ljava/lang/Object;)V = .ctor(Java.Lang.Object)
  getAllKeys()Lcom/ca/mas/core/storage/StorageResult; = AllKeys
  getType()Lcom/ca/mas/core/storage/implementation/MASStorageManager$MASStorageType; = Type
  deleteAll()Lcom/ca/mas/core/storage/StorageResult; = DeleteAll()
  deleteAll(Lcom/ca/mas/core/storage/StorageResultReceiver;)V = DeleteAll(Com.CA.Mas.Core.Storage.StorageResultReceiver)
  deleteData(Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = DeleteData(string)
  deleteData(Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = DeleteData(string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
  deleteString(Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = DeleteString(string)
  deleteString(Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = DeleteString(string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
  getAllKeys(Lcom/ca/mas/core/storage/StorageResultReceiver;)V = GetAllKeys(Com.CA.Mas.Core.Storage.StorageResultReceiver)
  readData(Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = ReadData(string)
  readData(Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = ReadData(string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
  readString(Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = ReadString(string)
  readString(Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = ReadString(string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
  updateData(Ljava/lang/String;[B)Lcom/ca/mas/core/storage/StorageResult; = UpdateData(string, byte[])
  updateData(Ljava/lang/String;[BLcom/ca/mas/core/storage/StorageResultReceiver;)V = UpdateData(string, byte[], Com.CA.Mas.Core.Storage.StorageResultReceiver)
  updateString(Ljava/lang/String;Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = UpdateString(string, string)
  updateString(Ljava/lang/String;Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = UpdateString(string, string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
  writeData(Ljava/lang/String;[B)Lcom/ca/mas/core/storage/StorageResult; = WriteData(string, byte[])
  writeData(Ljava/lang/String;[BLcom/ca/mas/core/storage/StorageResultReceiver;)V = WriteData(string, byte[], Com.CA.Mas.Core.Storage.StorageResultReceiver)
  writeOrUpdateData(Ljava/lang/String;[B)Lcom/ca/mas/core/storage/StorageResult; = WriteOrUpdateData(string, byte[])
  writeOrUpdateData(Ljava/lang/String;[BLcom/ca/mas/core/storage/StorageResultReceiver;)V = WriteOrUpdateData(string, byte[], Com.CA.Mas.Core.Storage.StorageResultReceiver)
  writeOrUpdateString(Ljava/lang/String;Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = WriteOrUpdateString(string, string)
  writeOrUpdateString(Ljava/lang/String;Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = WriteOrUpdateString(string, string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
  writeString(Ljava/lang/String;Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = WriteString(string, string)
  writeString(Ljava/lang/String;Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = WriteString(string, string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
com/ca/mas/core/storage/implementation/AMSAuthenticatorService = Com.CA.Mas.Core.Storage.Implementation.AMSAuthenticatorService
  <init>()V = .ctor()
  onBind(Landroid/content/Intent;)Landroid/os/IBinder; = OnBind(Android.Content.Intent)
com/ca/mas/core/storage/implementation/KeyStoreStorage = Com.CA.Mas.Core.Storage.Implementation.KeyStoreStorage
  <init>(Ljava/lang/Object;)V = .ctor(Java.Lang.Object)
  getAllKeys()Lcom/ca/mas/core/storage/StorageResult; = AllKeys
  getType()Lcom/ca/mas/core/storage/implementation/MASStorageManager$MASStorageType; = Type
  deleteAll()Lcom/ca/mas/core/storage/StorageResult; = DeleteAll()
  deleteAll(Lcom/ca/mas/core/storage/StorageResultReceiver;)V = DeleteAll(Com.CA.Mas.Core.Storage.StorageResultReceiver)
  deleteData(Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = DeleteData(string)
  deleteData(Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = DeleteData(string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
  deleteString(Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = DeleteString(string)
  deleteString(Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = DeleteString(string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
  getAllKeys(Lcom/ca/mas/core/storage/StorageResultReceiver;)V = GetAllKeys(Com.CA.Mas.Core.Storage.StorageResultReceiver)
  readData(Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = ReadData(string)
  readData(Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = ReadData(string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
  readString(Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = ReadString(string)
  readString(Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = ReadString(string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
  updateData(Ljava/lang/String;[B)Lcom/ca/mas/core/storage/StorageResult; = UpdateData(string, byte[])
  updateData(Ljava/lang/String;[BLcom/ca/mas/core/storage/StorageResultReceiver;)V = UpdateData(string, byte[], Com.CA.Mas.Core.Storage.StorageResultReceiver)
  updateString(Ljava/lang/String;Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = UpdateString(string, string)
  updateString(Ljava/lang/String;Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = UpdateString(string, string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
  writeData(Ljava/lang/String;[B)Lcom/ca/mas/core/storage/StorageResult; = WriteData(string, byte[])
  writeData(Ljava/lang/String;[BLcom/ca/mas/core/storage/StorageResultReceiver;)V = WriteData(string, byte[], Com.CA.Mas.Core.Storage.StorageResultReceiver)
  writeOrUpdateData(Ljava/lang/String;[B)Lcom/ca/mas/core/storage/StorageResult; = WriteOrUpdateData(string, byte[])
  writeOrUpdateData(Ljava/lang/String;[BLcom/ca/mas/core/storage/StorageResultReceiver;)V = WriteOrUpdateData(string, byte[], Com.CA.Mas.Core.Storage.StorageResultReceiver)
  writeOrUpdateString(Ljava/lang/String;Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = WriteOrUpdateString(string, string)
  writeOrUpdateString(Ljava/lang/String;Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = WriteOrUpdateString(string, string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
  writeString(Ljava/lang/String;Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = WriteString(string, string)
  writeString(Ljava/lang/String;Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = WriteString(string, string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
com/ca/mas/core/storage/implementation/MASStorageManager = Com.CA.Mas.Core.Storage.Implementation.MASStorageManager
  <init>()V = .ctor()
  getStorage(Lcom/ca/mas/core/storage/implementation/MASStorageManager$MASStorageType;Ljava/lang/Object;)Lcom/ca/mas/core/storage/Storage; = GetStorage(Com.CA.Mas.Core.Storage.Implementation.MASStorageManager.MASStorageType, Java.Lang.Object)
  getStorage(Ljava/lang/Class;Ljava/lang/Object;)Lcom/ca/mas/core/storage/Storage; = GetStorage(Java.Lang.Class, Java.Lang.Object)
  getStorage(Ljava/lang/String;Ljava/lang/Object;)Lcom/ca/mas/core/storage/Storage; = GetStorage(string, Java.Lang.Object)
com/ca/mas/core/storage/sharedstorage/MASAuthenticator = Com.CA.Mas.Core.Storage.Sharedstorage.MASAuthenticator
  addAccount(Landroid/accounts/AccountAuthenticatorResponse;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle; = AddAccount(Android.Accounts.AccountAuthenticatorResponse, string, string, string[], Android.OS.Bundle)
  confirmCredentials(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;Landroid/os/Bundle;)Landroid/os/Bundle; = ConfirmCredentials(Android.Accounts.AccountAuthenticatorResponse, Android.Accounts.Account, Android.OS.Bundle)
  editProperties(Landroid/accounts/AccountAuthenticatorResponse;Ljava/lang/String;)Landroid/os/Bundle; = EditProperties(Android.Accounts.AccountAuthenticatorResponse, string)
  getAuthToken(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle; = GetAuthToken(Android.Accounts.AccountAuthenticatorResponse, Android.Accounts.Account, string, Android.OS.Bundle)
  getAuthTokenLabel(Ljava/lang/String;)Ljava/lang/String; = GetAuthTokenLabel(string)
  hasFeatures(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;[Ljava/lang/String;)Landroid/os/Bundle; = HasFeatures(Android.Accounts.AccountAuthenticatorResponse, Android.Accounts.Account, string[])
  updateCredentials(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle; = UpdateCredentials(Android.Accounts.AccountAuthenticatorResponse, Android.Accounts.Account, string, Android.OS.Bundle)
com/ca/mas/core/storage/sharedstorage/MASAuthenticatorService = Com.CA.Mas.Core.Storage.Sharedstorage.MASAuthenticatorService
  <init>()V = .ctor()
  onBind(Landroid/content/Intent;)Landroid/os/IBinder; = OnBind(Android.Content.Intent)
com/ca/mas/core/storage/sharedstorage/MASSharedStorage = Com.CA.Mas.Core.Storage.Sharedstorage.MASSharedStorage
  <init>(Ljava/lang/String;)V = .ctor(string)
  delete(Ljava/lang/String;)V = Delete(string)
  getBytes(Ljava/lang/String;)[B = GetBytes(string)
  getString(Ljava/lang/String;)Ljava/lang/String; = GetString(string)
  save(Ljava/lang/String;[B)V = Save(string, byte[])
  save(Ljava/lang/String;Ljava/lang/String;)V = Save(string, string)
com/ca/mas/core/storage/Storage = Com.CA.Mas.Core.Storage.Storage
  <init>(Ljava/lang/Object;)V = .ctor(Java.Lang.Object)
  UTF8 = Utf8
  getAllKeys()Lcom/ca/mas/core/storage/StorageResult; = AllKeys
  getType()Lcom/ca/mas/core/storage/implementation/MASStorageManager$MASStorageType; = Type
  deleteAll()Lcom/ca/mas/core/storage/StorageResult; = DeleteAll()
  deleteAll(Lcom/ca/mas/core/storage/StorageResultReceiver;)V = DeleteAll(Com.CA.Mas.Core.Storage.StorageResultReceiver)
  deleteData(Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = DeleteData(string)
  deleteData(Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = DeleteData(string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
  deleteString(Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = DeleteString(string)
  deleteString(Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = DeleteString(string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
  getAllKeys(Lcom/ca/mas/core/storage/StorageResultReceiver;)V = GetAllKeys(Com.CA.Mas.Core.Storage.StorageResultReceiver)
  readData(Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = ReadData(string)
  readData(Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = ReadData(string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
  readString(Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = ReadString(string)
  readString(Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = ReadString(string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
  updateData(Ljava/lang/String;[B)Lcom/ca/mas/core/storage/StorageResult; = UpdateData(string, byte[])
  updateData(Ljava/lang/String;[BLcom/ca/mas/core/storage/StorageResultReceiver;)V = UpdateData(string, byte[], Com.CA.Mas.Core.Storage.StorageResultReceiver)
  updateString(Ljava/lang/String;Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = UpdateString(string, string)
  updateString(Ljava/lang/String;Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = UpdateString(string, string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
  writeData(Ljava/lang/String;[B)Lcom/ca/mas/core/storage/StorageResult; = WriteData(string, byte[])
  writeData(Ljava/lang/String;[BLcom/ca/mas/core/storage/StorageResultReceiver;)V = WriteData(string, byte[], Com.CA.Mas.Core.Storage.StorageResultReceiver)
  writeOrUpdateData(Ljava/lang/String;[B)Lcom/ca/mas/core/storage/StorageResult; = WriteOrUpdateData(string, byte[])
  writeOrUpdateData(Ljava/lang/String;[BLcom/ca/mas/core/storage/StorageResultReceiver;)V = WriteOrUpdateData(string, byte[], Com.CA.Mas.Core.Storage.StorageResultReceiver)
  writeOrUpdateString(Ljava/lang/String;Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = WriteOrUpdateString(string, string)
  writeOrUpdateString(Ljava/lang/String;Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = WriteOrUpdateString(string, string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
  writeString(Ljava/lang/String;Ljava/lang/String;)Lcom/ca/mas/core/storage/StorageResult; = WriteString(string, string)
  writeString(Ljava/lang/String;Ljava/lang/String;Lcom/ca/mas/core/storage/StorageResultReceiver;)V = WriteString(string, string, Com.CA.Mas.Core.Storage.StorageResultReceiver)
com/ca/mas/core/storage/StorageException = Com.CA.Mas.Core.Storage.StorageException
  <init>(I)V = .ctor(int)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;I)V = .ctor(string, Java.Lang.Throwable, int)
  CREATOR = Creator
  DATA_SIZE_LIMIT_EXCEEDED = DataSizeLimitExceeded
  DO_NOT_USE = DoNotUse
  INSTANTIATION_ERROR = InstantiationError
  INSTANTIATION_ERROR_UNAUTHORIZED = InstantiationErrorUnauthorized
  INVALID_INPUT = InvalidInput
  INVALID_INPUT_CALLBACK = InvalidInputCallback
  INVALID_INPUT_KEY = InvalidInputKey
  INVALID_INPUT_VALUE = InvalidInputValue
  KEY_SIZE_LIMIT_EXCEEDED = KeySizeLimitExceeded
  KEYSTORE_DATA_SIZE_LIMIT_EXCEEDED = KeystoreDataSizeLimitExceeded
  KEYSTORE_KEY_SIZE_LIMIT_EXCEEDED = KeystoreKeySizeLimitExceeded
  OPERATION_FAILED = OperationFailed
  READ_DATA_NOT_FOUND = ReadDataNotFound
  STORE_NOT_FOUND = StoreNotFound
  STORE_NOT_UNLOCKED = StoreNotUnlocked
  UNKNOWN_ERROR = UnknownError
  UNSUPPORTED_DATA = UnsupportedData
  UNSUPPORTED_OPERATION = UnsupportedOperation
  WRITE_DATA_ALREADY_EXISTS = WriteDataAlreadyExists
  getCode()I = Code
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/ca/mas/core/storage/StorageResult = Com.CA.Mas.Core.Storage.StorageResult
  <init>(Lcom/ca/mas/core/storage/StorageResult$StorageOperationType;)V = .ctor(Com.CA.Mas.Core.Storage.StorageResult.StorageOperationType)
  CREATOR = Creator
  getData()Ljava/lang/Object; = Data
  setData(Ljava/lang/Object;)V = Data
  getStatus()Lcom/ca/mas/core/storage/StorageResult$StorageOperationStatus; = Status
  setStatus(Lcom/ca/mas/core/storage/StorageResult$StorageOperationStatus;)V = Status
  getType()Lcom/ca/mas/core/storage/StorageResult$StorageOperationType; = Type
  setType(Lcom/ca/mas/core/storage/StorageResult$StorageOperationType;)V = Type
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/ca/mas/core/storage/StorageResultReceiver = Com.CA.Mas.Core.Storage.StorageResultReceiver
  <init>(Landroid/os/Handler;)V = .ctor(Android.OS.Handler)
  onReceiveResult(Lcom/ca/mas/core/storage/StorageResult;)V = OnReceiveResult(Com.CA.Mas.Core.Storage.StorageResult)
  send(Lcom/ca/mas/core/storage/StorageResult;)V = Send(Com.CA.Mas.Core.Storage.StorageResult)
com/ca/mas/core/store/ClientCredentialContainer = Com.CA.Mas.Core.Store.IClientCredentialContainer
  getClientExpiration()Ljava/lang/Long; = ClientExpiration
  getClientId()Ljava/lang/String; = ClientId
  getClientSecret()Ljava/lang/String; = ClientSecret
  getMasterClientId()Ljava/lang/String; = MasterClientId
  clear()V = Clear()
  clearAll()V = ClearAll()
  saveClientCredentials(Lcom/ca/mas/core/token/ClientCredentials;)V = SaveClientCredentials(Com.CA.Mas.Core.Token.ClientCredentials)
com/ca/mas/core/store/ClientCredentialStorage = Com.CA.Mas.Core.Store.ClientCredentialStorage
  <init>(Lcom/ca/mas/core/datasource/DataSource;)V = .ctor(Com.CA.Mas.Core.Datasource.IDataSource)
  getClientExpiration()Ljava/lang/Long; = ClientExpiration
  getClientId()Ljava/lang/String; = ClientId
  getClientSecret()Ljava/lang/String; = ClientSecret
  getMasterClientId()Ljava/lang/String; = MasterClientId
  clear()V = Clear()
  clearAll()V = ClearAll()
  saveClientCredentials(Lcom/ca/mas/core/token/ClientCredentials;)V = SaveClientCredentials(Com.CA.Mas.Core.Token.ClientCredentials)
com/ca/mas/core/store/OAuthTokenContainer = Com.CA.Mas.Core.Store.IOAuthTokenContainer
  getAccessToken()Ljava/lang/String; = AccessToken
  getExpiry()J = Expiry
  getGrantedScope()Ljava/lang/String; = GrantedScope
  getRefreshToken()Ljava/lang/String; = RefreshToken
  clear()V = Clear()
  clearAll()V = ClearAll()
  saveAccessToken(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;)V = SaveAccessToken(string, string, long, string)
  takeRefreshToken()Ljava/lang/String; = TakeRefreshToken()
com/ca/mas/core/store/PrivateTokenStorage = Com.CA.Mas.Core.Store.PrivateTokenStorage
  <init>(Lcom/ca/mas/core/datasource/DataSource;)V = .ctor(Com.CA.Mas.Core.Datasource.IDataSource)
  getAccessToken()Ljava/lang/String; = AccessToken
  getExpiry()J = Expiry
  getGrantedScope()Ljava/lang/String; = GrantedScope
  getRefreshToken()Ljava/lang/String; = RefreshToken
  clear()V = Clear()
  clearAll()V = ClearAll()
  saveAccessToken(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;)V = SaveAccessToken(string, string, long, string)
  takeRefreshToken()Ljava/lang/String; = TakeRefreshToken()
com/ca/mas/core/store/StorageProvider = Com.CA.Mas.Core.Store.StorageProvider
  getClientCredentialContainer()Lcom/ca/mas/core/store/ClientCredentialContainer; = ClientCredentialContainer
  hasValidStore()Z = HasValidStore
  getInstance()Lcom/ca/mas/core/store/StorageProvider; = Instance
  getOAuthTokenContainer()Lcom/ca/mas/core/store/OAuthTokenContainer; = OAuthTokenContainer
  getTokenManager()Lcom/ca/mas/core/store/TokenManager; = TokenManager
  reset()V = Reset()
com/ca/mas/core/store/TokenManager = Com.CA.Mas.Core.Store.ITokenManager
  isTokenStoreReady()Z = IsTokenStoreReady
  getTokenStore()Lcom/ca/mas/core/datasource/DataSource; = TokenStore
  clear()V = Clear()
  clearAll()V = ClearAll()
  deleteIdToken()V = DeleteIdToken()
  deleteSecureIdToken()V = DeleteSecureIdToken()
  deleteUserProfile()V = DeleteUserProfile()
  saveClientCertificateChain([Ljava/security/cert/X509Certificate;)V = SaveClientCertificateChain(Java.Security.Cert.X509Certificate[])
  saveIdToken(Lcom/ca/mas/core/token/IdToken;)V = SaveIdToken(Com.CA.Mas.Core.Token.IdToken)
  saveMagIdentifier(Ljava/lang/String;)V = SaveMagIdentifier(string)
  saveSecureIdToken([B)V = SaveSecureIdToken(byte[])
  saveUserProfile(Ljava/lang/String;)V = SaveUserProfile(string)
com/ca/mas/core/store/TokenProvider = Com.CA.Mas.Core.Store.ITokenProvider
  getClientPrivateKey()Ljava/security/PrivateKey; = ClientPrivateKey
  getClientPublicKey()Ljava/security/PublicKey; = ClientPublicKey
  getIdToken()Lcom/ca/mas/core/token/IdToken; = IdToken
  isClientCertificateChainAvailable()Z = IsClientCertificateChainAvailable
  getMagIdentifier()Ljava/lang/String; = MagIdentifier
  getUserProfile()Ljava/lang/String; = UserProfile
  createPrivateKey(Landroid/content/Context;I)Ljava/security/PrivateKey; = CreatePrivateKey(Android.Content.Context, int)
  getClientCertificateChain()[Ljava/security/cert/X509Certificate; = GetClientCertificateChain()
  getSecureIdToken()[B = GetSecureIdToken()
com/ca/mas/core/store/TokenStoreException = Com.CA.Mas.Core.Store.TokenStoreException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/core/token/ClientCredentials = Com.CA.Mas.Core.Token.ClientCredentials
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;)V = .ctor(string, string, string, Java.Lang.Long)
  getClientExpiration()Ljava/lang/Long; = ClientExpiration
  getClientId()Ljava/lang/String; = ClientId
  getClientSecret()Ljava/lang/String; = ClientSecret
  getMasterClientId()Ljava/lang/String; = MasterClientId
com/ca/mas/core/token/IdToken = Com.CA.Mas.Core.Token.IdToken
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  CREATOR = Creator
  JWT_DEFAULT = JwtDefault
  getType()Ljava/lang/String; = Type
  getValue()Ljava/lang/String; = Value
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/ca/mas/core/token/JWTExpiredException = Com.CA.Mas.Core.Token.JWTExpiredException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/core/token/JWTInvalidAUDException = Com.CA.Mas.Core.Token.JWTInvalidAUDException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/core/token/JWTInvalidAZPException = Com.CA.Mas.Core.Token.JWTInvalidAZPException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/core/token/JWTInvalidSignatureException = Com.CA.Mas.Core.Token.JWTInvalidSignatureException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/core/token/JWTValidation = Com.CA.Mas.Core.Token.JWTValidation
  <init>()V = .ctor()
  ALG = Alg
  AUD = Aud
  AZP = Azp
  EXP = Exp
  isIdTokenExpired(Lcom/ca/mas/core/token/IdToken;)Z = IsIdTokenExpired(Com.CA.Mas.Core.Token.IdToken)
  validateIdToken(Lcom/ca/mas/core/token/IdToken;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z = ValidateIdToken(Com.CA.Mas.Core.Token.IdToken, string, string, string)
com/ca/mas/core/token/JWTValidationException = Com.CA.Mas.Core.Token.JWTValidationException
  <init>(I)V = .ctor(int)
  <init>(ILjava/lang/String;)V = .ctor(int, string)
  <init>(ILjava/lang/String;Ljava/lang/Throwable;)V = .ctor(int, string, Java.Lang.Throwable)
  <init>(ILjava/lang/Throwable;)V = .ctor(int, Java.Lang.Throwable)
com/ca/mas/core/util/Functions = Com.CA.Mas.Core.Util.Functions
com/ca/mas/core/util/KeyUtilsAsymmetric = Com.CA.Mas.Core.Util.KeyUtilsAsymmetric
  <init>()V = .ctor()
  arrayConcat(Ljava/util/ArrayList;)[B = ArrayConcat(System.Collections.Generic.IList<byte[]>)
  arraySplit([BI)Ljava/util/ArrayList; = ArraySplit(byte[], int)
  clearCertificateChain(Ljava/lang/String;)V = ClearCertificateChain(string)
  decrypt(Ljava/security/PrivateKey;I[B)[B = Decrypt(Java.Security.IPrivateKey, int, byte[])
  decryptSection(Ljava/security/PrivateKey;[B)[B = DecryptSection(Java.Security.IPrivateKey, byte[])
  deletePrivateKey(Ljava/lang/String;)V = DeletePrivateKey(string)
  encrypt(Ljava/security/PublicKey;I[B)[B = Encrypt(Java.Security.IPublicKey, int, byte[])
  encryptSection(Ljava/security/PublicKey;[B)[B = EncryptSection(Java.Security.IPublicKey, byte[])
  generateRsaPrivateKey(Landroid/content/Context;ILjava/lang/String;Ljava/lang/String;ZZIZ)Ljava/security/PrivateKey; = GenerateRsaPrivateKey(Android.Content.Context, int, string, string, bool, bool, int, bool)
  getCertificateChain(Ljava/lang/String;)[Ljava/security/cert/X509Certificate; = GetCertificateChain(string)
  getKeystoreKey(Ljava/lang/String;)Ljava/security/Key; = GetKeystoreKey(string)
  getRsaPrivateKey(Ljava/lang/String;)Ljava/security/PrivateKey; = GetRsaPrivateKey(string)
  getRsaPublicKey(Ljava/lang/String;)Ljava/security/PublicKey; = GetRsaPublicKey(string)
  setCertificateChain(Ljava/lang/String;[Ljava/security/cert/X509Certificate;)V = SetCertificateChain(string, Java.Security.Cert.X509Certificate[])
com/ca/mas/core/util/KeyUtilsSymmetric = Com.CA.Mas.Core.Util.KeyUtilsSymmetric
  <init>()V = .ctor()
  ANDROID_KEY_STORE = AndroidKeyStore
  DEFAULT_ALGORITHM = DefaultAlgorithm
  DEFAULT_KEY_LENGTH = DefaultKeyLength
  checkDeleteKeys(Ljava/lang/String;Ljava/lang/Exception;)V = CheckDeleteKeys(string, Java.Lang.Exception)
  computeMac(Ljava/lang/String;[B)[B = ComputeMac(string, byte[])
  concatArrays([B[B[B)[B = ConcatArrays(byte[], byte[], byte[])
  decrypt([BLjavax/crypto/SecretKey;Ljava/lang/String;)[B = Decrypt(byte[], Javax.Crypto.ISecretKey, string)
  deleteKey(Ljava/lang/String;)V = DeleteKey(string)
  deleteKeyAndroidM(Ljava/lang/String;)V = DeleteKeyAndroidM(string)
  destroyKey(Ljavax/crypto/SecretKey;)V = DestroyKey(Javax.Crypto.ISecretKey)
  encrypt([BLjavax/crypto/SecretKey;Ljava/lang/String;)[B = Encrypt(byte[], Javax.Crypto.ISecretKey, string)
  generateKey(Ljava/lang/String;Ljava/lang/String;IZZIZ)Ljavax/crypto/SecretKey; = GenerateKey(string, string, int, bool, bool, int, bool)
  generateKeyInAndroidKeyStoreAndroidM(Ljava/lang/String;Ljava/lang/String;IZI)Ljavax/crypto/SecretKey; = GenerateKeyInAndroidKeyStoreAndroidM(string, string, int, bool, int)
  generateKeyInAndroidKeyStoreAndroidN(Ljava/lang/String;Ljava/lang/String;IZIZ)Ljavax/crypto/SecretKey; = GenerateKeyInAndroidKeyStoreAndroidN(string, string, int, bool, int, bool)
  generateKeyInMemory(Ljava/lang/String;I)Ljavax/crypto/SecretKey; = GenerateKeyInMemory(string, int)
  retrieveKey(Ljava/lang/String;)Ljavax/crypto/SecretKey; = RetrieveKey(string)
  retrieveKeyAndroidM(Ljava/lang/String;)Ljavax/crypto/SecretKey; = RetrieveKeyAndroidM(string)
  storeKeyAndroidM(Ljava/lang/String;Ljavax/crypto/SecretKey;ZI)Z = StoreKeyAndroidM(string, Javax.Crypto.ISecretKey, bool, int)
  storeKeyAndroidN(Ljava/lang/String;Ljavax/crypto/SecretKey;ZIZ)Z = StoreKeyAndroidN(string, Javax.Crypto.ISecretKey, bool, int, bool)
com/ca/mas/foundation/auth/MASApplication = Com.CA.Mas.Foundation.Auth.MASApplication
  getAuthUrl()Ljava/lang/String; = AuthUrl
  getCustom()Lorg/json/JSONObject; = Custom
  getIconUrl()Ljava/lang/String; = IconUrl
  getIdentifier()Ljava/lang/String; = Identifier
  getName()Ljava/lang/String; = Name
  getNativeUri()Ljava/lang/String; = NativeUri
  renderEnterpriseIcon(Landroid/widget/ImageView;)V = RenderEnterpriseIcon(Android.Widget.ImageView)
  retrieveEnterpriseApps(Lcom/ca/mas/foundation/MASCallback;)V = RetrieveEnterpriseApps(Com.CA.Mas.Foundation.MASCallback)
  setApplicationLauncher(Lcom/ca/mas/foundation/auth/MASApplication$MASApplicationLauncher;)V = SetApplicationLauncher(Com.CA.Mas.Foundation.Auth.MASApplication.MASApplicationLauncher)
com/ca/mas/foundation/auth/MASAuthenticationProvider = Com.CA.Mas.Foundation.Auth.MASAuthenticationProvider
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  <init>(Lcom/ca/mas/core/service/Provider;)V = .ctor(Com.CA.Mas.Core.Service.Provider)
  CREATOR = Creator
  getAuthenticationUrl()Ljava/lang/String; = AuthenticationUrl
  getIdentifier()Ljava/lang/String; = Identifier
  isEnterprise()Z = IsEnterprise
  isFacebook()Z = IsFacebook
  isGoogle()Z = IsGoogle
  isLinkedIn()Z = IsLinkedIn
  isProximityLogin()Z = IsProximityLogin
  isSalesForce()Z = IsSalesForce
  getPollUrl()Ljava/lang/String; = PollUrl
  describeContents()I = DescribeContents()
  getAuthConfiguration(Landroid/content/Context;Lcom/ca/mas/foundation/auth/MASAuthenticationProvider;Lcom/ca/mas/foundation/MASCallback;)V = GetAuthConfiguration(Android.Content.Context, Com.CA.Mas.Foundation.Auth.MASAuthenticationProvider, Com.CA.Mas.Foundation.MASCallback)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/ca/mas/foundation/auth/MASAuthenticationProviders = Com.CA.Mas.Foundation.Auth.MASAuthenticationProviders
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  <init>(Lcom/ca/mas/core/service/AuthenticationProvider;)V = .ctor(Com.CA.Mas.Core.Service.AuthenticationProvider)
  CREATOR = Creator
  getIdp()Ljava/lang/String; = Idp
  getProviders()Ljava/util/List; = Providers
  describeContents()I = DescribeContents()
  getAuthenticationProviders(Lcom/ca/mas/foundation/MASCallback;)V = GetAuthenticationProviders(Com.CA.Mas.Foundation.MASCallback)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/ca/mas/foundation/auth/MASProximityLogin = Com.CA.Mas.Foundation.Auth.IMASProximityLogin
  init(Landroid/app/Activity;JLcom/ca/mas/foundation/auth/MASAuthenticationProviders;)Z = Init(Android.App.Activity, long, Com.CA.Mas.Foundation.Auth.MASAuthenticationProviders)
  render()Landroid/view/View; = Render()
  start()V = Start()
  stop()V = Stop()
com/ca/mas/foundation/auth/MASProximityLoginBLE = Com.CA.Mas.Foundation.Auth.MASProximityLoginBLE
  <init>(Lcom/ca/mas/foundation/auth/MASProximityLoginBLECentralListener;)V = .ctor(Com.CA.Mas.Foundation.Auth.IMASProximityLoginBLECentralListener)
  BLE_ERROR_DISABLED = BleErrorDisabled
  BLE_ERROR_INVALID_UUID = BleErrorInvalidUuid
  BLE_ERROR_NOT_SUPPORTED = BleErrorNotSupported
  BLE_ERROR_SESSION_SHARING_NOT_SUPPORTED = BleErrorSessionSharingNotSupported
  init(Landroid/app/Activity;JLcom/ca/mas/foundation/auth/MASAuthenticationProviders;)Z = Init(Android.App.Activity, long, Com.CA.Mas.Foundation.Auth.MASAuthenticationProviders)
  start()V = Start()
  stop()V = Stop()
com/ca/mas/foundation/auth/MASProximityLoginBLECentralListener = Com.CA.Mas.Foundation.Auth.IMASProximityLoginBLECentralListener
com/ca/mas/foundation/auth/MASProximityLoginBLEPeripheralListener = Com.CA.Mas.Foundation.Auth.MASProximityLoginBLEPeripheralListener
  <init>()V = .ctor()
  onConsentRequested(Landroid/content/Context;Ljava/lang/String;Lcom/ca/mas/foundation/auth/MASProximityLoginBLEUserConsentHandler;)V = OnConsentRequested(Android.Content.Context, string, Com.CA.Mas.Foundation.Auth.IMASProximityLoginBLEUserConsentHandler)
  onConsentRequested(Ljava/lang/String;Lcom/ca/mas/core/auth/ble/BluetoothLeConsentHandler;)V = OnConsentRequested(string, Com.CA.Mas.Core.Auth.Ble.IBluetoothLeConsentHandler)
com/ca/mas/foundation/auth/MASProximityLoginBLEUserConsentHandler = Com.CA.Mas.Foundation.Auth.IMASProximityLoginBLEUserConsentHandler
com/ca/mas/foundation/auth/MASProximityLoginNFC = Com.CA.Mas.Foundation.Auth.MASProximityLoginNFC
  <init>()V = .ctor()
  authorize(Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = Authorize(string, Com.CA.Mas.Foundation.MASCallback)
  init(Landroid/app/Activity;JLcom/ca/mas/foundation/auth/MASAuthenticationProviders;)Z = Init(Android.App.Activity, long, Com.CA.Mas.Foundation.Auth.MASAuthenticationProviders)
  start()V = Start()
  stop()V = Stop()
com/ca/mas/foundation/auth/MASProximityLoginQRCode = Com.CA.Mas.Foundation.Auth.MASProximityLoginQRCode
  <init>()V = .ctor()
  authorize(Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = Authorize(string, Com.CA.Mas.Foundation.MASCallback)
  init(Landroid/app/Activity;JLcom/ca/mas/foundation/auth/MASAuthenticationProviders;)Z = Init(Android.App.Activity, long, Com.CA.Mas.Foundation.Auth.MASAuthenticationProviders)
  start()V = Start()
  stop()V = Stop()
com/ca/mas/foundation/auth/MASWebApplication = Com.CA.Mas.Foundation.Auth.MASWebApplication
  <init>(Landroid/webkit/WebView;Ljava/lang/String;)V = .ctor(Android.Webkit.WebView, string)
  getRequestTimeout()I = RequestTimeout
  getWebViewClient()Landroid/webkit/WebViewClient; = WebViewClient
com/ca/mas/foundation/BuildConfig = Com.CA.Mas.Foundation.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/ca/mas/foundation/Device = Com.CA.Mas.Foundation.IDevice
  getIdentifier()Ljava/lang/String; = Identifier
  isRegistered()Z = IsRegistered
  deregister(Lcom/ca/mas/foundation/MASCallback;)V = Deregister(Com.CA.Mas.Foundation.MASCallback)
  resetLocally()V = ResetLocally()
  startAsBluetoothPeripheral(Lcom/ca/mas/foundation/auth/MASProximityLoginBLEPeripheralListener;)V = StartAsBluetoothPeripheral(Com.CA.Mas.Foundation.Auth.MASProximityLoginBLEPeripheralListener)
  stopAsBluetoothPeripheral()V = StopAsBluetoothPeripheral()
com/ca/mas/foundation/Extension = Com.CA.Mas.Foundation.Extension
com/ca/mas/foundation/FoundationConsts = Com.CA.Mas.Foundation.FoundationConsts
  <init>()V = .ctor()
  AMP = Amp
  BASE64 = Base64
  CLOSE_PAREN = CloseParen
  COLON = Colon
  COMMA = Comma
  DOT = Dot
  EMPTY = Empty
  ENC_DOUBLE_QUOTE = EncDoubleQuote
  ENC_SPACE = EncSpace
  ENC_UTF8 = EncUtf8
  EQ = Eq
  FSLASH = Fslash
  HEADER_KEY_ACCEPT = HeaderKeyAccept
  HEADER_KEY_CONTENT_TYPE = HeaderKeyContentType
  HEADER_KEY_USER_AGENT = HeaderKeyUserAgent
  HEADER_VALUE_ACCEPT = HeaderValueAccept
  HEADER_VALUE_CONTENT_TYPE = HeaderValueContentType
  HTTPS_SCIM_SCHEME = HttpsScimScheme
  KEY_CONFIG_APP_DESCRIPTION = KeyConfigAppDescription
  KEY_CONFIG_APP_NAME = KeyConfigAppName
  KEY_CONFIG_APP_ORGANIZATION = KeyConfigAppOrganization
  KEY_CONFIG_APP_REGISTERED_BY = KeyConfigAppRegisteredBy
  KEY_CONFIG_APP_TYPE = KeyConfigAppType
  KEY_CONFIG_CLOUD_STORAGE_PATH = KeyConfigCloudStoragePath
  KEY_CONFIG_SCIM_PATH = KeyConfigScimPath
  KEY_CONFIG_USER_INFO = KeyConfigUserInfo
  KEY_EVENT_TYPE = KeyEventType
  KEY_MESSAGE = KeyMessage
  KEY_ON_MESSAGE = KeyOnMessage
  KEY_TYPE = KeyType
  KEY_VALUE = KeyValue
  MT_APP_JSON = MtAppJson
  MT_APPLICATION_OCTET_STREAM = MtApplicationOctetStream
  MT_TEXT_PLAIN = MtTextPlain
  QM = Qm
  SEC_MILLIS = SecMillis
  SEMI_COLON = SemiColon
  SPACE = Space
  TIMEOUT_VAL = TimeoutVal
  UA_APP_MOBILE_APP_SERVICES = UaAppMobileAppServices
  UA_KHTML = UaKhtml
  UA_MOZILLA = UaMozilla
com/ca/mas/foundation/Internal = Com.CA.Mas.Foundation.IInternal
com/ca/mas/foundation/MAS = Com.CA.Mas.Foundation.MAS
  <init>()V = .ctor()
  DEBUG = Debug
  TAG = Tag
  getContext()Landroid/content/Context; = Context
  getCurrentActivity()Landroid/app/Activity; = CurrentActivity
  isAuthenticationListenerRegistered()Z = IsAuthenticationListenerRegistered
  isBrowserBasedAuthenticationEnabled()Z = IsBrowserBasedAuthenticationEnabled
  isPKCEEnabled()Z = IsPKCEEnabled
  cancelAllRequest(Landroid/os/Bundle;)V = CancelAllRequest(Android.OS.Bundle)
  cancelAllRequests()V = CancelAllRequests()
  cancelRequest(J)V = CancelRequest(long)
  cancelRequest(JLandroid/os/Bundle;)V = CancelRequest(long, Android.OS.Bundle)
  debug()V = Debug()
  enableBrowserBasedAuthentication()V = EnableBrowserBasedAuthentication()
  enablePKCE(Z)V = EnablePKCE(bool)
  gatewayIsReachable(Lcom/ca/mas/foundation/MASCallback;)V = GatewayIsReachable(Com.CA.Mas.Foundation.MASCallback)
  getState(Landroid/content/Context;)I = GetState(Android.Content.Context)
  processPendingRequests()V = ProcessPendingRequests()
  setAuthenticationListener(Lcom/ca/mas/foundation/MASAuthenticationListener;)V = SetAuthenticationListener(Com.CA.Mas.Foundation.IMASAuthenticationListener)
  setConfigurationFileName(Ljava/lang/String;)V = SetConfigurationFileName(string)
  setGrantFlow(I)V = SetGrantFlow(int)
  sign(Lcom/ca/mas/foundation/MASClaims;)Ljava/lang/String; = Sign(Com.CA.Mas.Foundation.IMASClaims)
  sign(Lcom/ca/mas/foundation/MASClaims;Ljava/security/PrivateKey;)Ljava/lang/String; = Sign(Com.CA.Mas.Foundation.IMASClaims, Java.Security.IPrivateKey)
  start(Landroid/content/Context;)V = Start(Android.Content.Context)
  start(Landroid/content/Context;Z)V = Start(Android.Content.Context, bool)
  start(Landroid/content/Context;Ljava/net/URL;)V = Start(Android.Content.Context, Java.Net.URL)
  start(Landroid/content/Context;Ljava/net/URL;Lcom/ca/mas/foundation/MASCallback;)V = Start(Android.Content.Context, Java.Net.URL, Com.CA.Mas.Foundation.MASCallback)
  start(Landroid/content/Context;Lorg/json/JSONObject;)V = Start(Android.Content.Context, Org.Json.JSONObject)
  stop()V = Stop()
com/ca/mas/foundation/MASAuthCredentials = Com.CA.Mas.Foundation.IMASAuthCredentials
  REGISTRATION_TYPE = RegistrationType
  getGrantType()Ljava/lang/String; = GrantType
  isReusable()Z = IsReusable
  isValid()Z = IsValid
  getUsername()Ljava/lang/String; = Username
  canRegisterDevice()Z = CanRegisterDevice()
  clear()V = Clear()
  getHeaders(Lcom/ca/mas/core/context/MssoContext;)Ljava/util/Map; = GetHeaders(Com.CA.Mas.Core.Context.MssoContext)
  getParams(Lcom/ca/mas/core/context/MssoContext;)Ljava/util/List; = GetParams(Com.CA.Mas.Core.Context.MssoContext)
com/ca/mas/foundation/MASAuthCredentialsAuthorizationCode = Com.CA.Mas.Foundation.MASAuthCredentialsAuthorizationCode
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  CREATOR = Creator
  getGrantType()Ljava/lang/String; = GrantType
  isReusable()Z = IsReusable
  isValid()Z = IsValid
  getUsername()Ljava/lang/String; = Username
  canRegisterDevice()Z = CanRegisterDevice()
  clear()V = Clear()
  describeContents()I = DescribeContents()
  getHeaders(Lcom/ca/mas/core/context/MssoContext;)Ljava/util/Map; = GetHeaders(Com.CA.Mas.Core.Context.MssoContext)
  getParams(Lcom/ca/mas/core/context/MssoContext;)Ljava/util/List; = GetParams(Com.CA.Mas.Core.Context.MssoContext)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/ca/mas/foundation/MASAuthCredentialsClientCredentials = Com.CA.Mas.Foundation.MASAuthCredentialsClientCredentials
  <init>()V = .ctor()
  getGrantType()Ljava/lang/String; = GrantType
  isReusable()Z = IsReusable
  isValid()Z = IsValid
  getUsername()Ljava/lang/String; = Username
  canRegisterDevice()Z = CanRegisterDevice()
  clear()V = Clear()
  describeContents()I = DescribeContents()
  getHeaders(Lcom/ca/mas/core/context/MssoContext;)Ljava/util/Map; = GetHeaders(Com.CA.Mas.Core.Context.MssoContext)
  getParams(Lcom/ca/mas/core/context/MssoContext;)Ljava/util/List; = GetParams(Com.CA.Mas.Core.Context.MssoContext)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/ca/mas/foundation/MASAuthCredentialsJWT = Com.CA.Mas.Foundation.MASAuthCredentialsJWT
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  <init>(Lcom/ca/mas/core/token/IdToken;)V = .ctor(Com.CA.Mas.Core.Token.IdToken)
  CREATOR = Creator
  getGrantType()Ljava/lang/String; = GrantType
  isReusable()Z = IsReusable
  isValid()Z = IsValid
  getUsername()Ljava/lang/String; = Username
  canRegisterDevice()Z = CanRegisterDevice()
  clear()V = Clear()
  describeContents()I = DescribeContents()
  getHeaders(Lcom/ca/mas/core/context/MssoContext;)Ljava/util/Map; = GetHeaders(Com.CA.Mas.Core.Context.MssoContext)
  getParams(Lcom/ca/mas/core/context/MssoContext;)Ljava/util/List; = GetParams(Com.CA.Mas.Core.Context.MssoContext)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/ca/mas/foundation/MASAuthCredentialsPassword = Com.CA.Mas.Foundation.MASAuthCredentialsPassword
  <init>(Ljava/lang/String;[C)V = .ctor(string, char[])
  CREATOR = Creator
  getGrantType()Ljava/lang/String; = GrantType
  isReusable()Z = IsReusable
  isValid()Z = IsValid
  getUsername()Ljava/lang/String; = Username
  canRegisterDevice()Z = CanRegisterDevice()
  clear()V = Clear()
  describeContents()I = DescribeContents()
  getHeaders(Lcom/ca/mas/core/context/MssoContext;)Ljava/util/Map; = GetHeaders(Com.CA.Mas.Core.Context.MssoContext)
  getParams(Lcom/ca/mas/core/context/MssoContext;)Ljava/util/List; = GetParams(Com.CA.Mas.Core.Context.MssoContext)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/ca/mas/foundation/MASAuthenticationListener = Com.CA.Mas.Foundation.IMASAuthenticationListener
  onAuthenticateRequest(Landroid/content/Context;JLcom/ca/mas/foundation/auth/MASAuthenticationProviders;)V = OnAuthenticateRequest(Android.Content.Context, long, Com.CA.Mas.Foundation.Auth.MASAuthenticationProviders)
  onOtpAuthenticateRequest(Landroid/content/Context;Lcom/ca/mas/foundation/MASOtpAuthenticationHandler;)V = OnOtpAuthenticateRequest(Android.Content.Context, Com.CA.Mas.Foundation.MASOtpAuthenticationHandler)
com/ca/mas/foundation/MASAuthorizationRequest = Com.CA.Mas.Foundation.MASAuthorizationRequest
  getClientId()Ljava/lang/String; = ClientId
  getDisplay()Ljava/lang/String; = Display
  getRedirectUri()Landroid/net/Uri; = RedirectUri
  getResponseType()Ljava/lang/String; = ResponseType
  getScope()Ljava/lang/String; = Scope
  getState()Ljava/lang/String; = State
com/ca/mas/foundation/MASAuthorizationRequestHandler = Com.CA.Mas.Foundation.IMASAuthorizationRequestHandler
  authorize(Lcom/ca/mas/foundation/MASAuthorizationRequest;)V = Authorize(Com.CA.Mas.Foundation.MASAuthorizationRequest)
com/ca/mas/foundation/MASAuthorizationResponse = Com.CA.Mas.Foundation.MASAuthorizationResponse
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  getAuthorizationCode()Ljava/lang/String; = AuthorizationCode
  getState()Ljava/lang/String; = State
  fromUri(Landroid/net/Uri;)Lcom/ca/mas/foundation/MASAuthorizationResponse; = FromUri(Android.Net.Uri)
com/ca/mas/foundation/MASCallback = Com.CA.Mas.Foundation.MASCallback
  <init>()V = .ctor()
  getHandler()Landroid/os/Handler; = Handler
  onError(Ljava/lang/Throwable;)V = OnError(Java.Lang.Throwable)
  onSuccess(Ljava/lang/Object;)V = OnSuccess(Java.Lang.Object)
com/ca/mas/foundation/MASClaims = Com.CA.Mas.Foundation.IMASClaims
  getAudience()Ljava/util/List; = Audience
  getClaims()Ljava/util/Map; = Claims
  getExpirationTime()Ljava/util/Date; = ExpirationTime
  getIssuedAt()Ljava/util/Date; = IssuedAt
  getIssuer()Ljava/lang/String; = Issuer
  getJwtId()Ljava/lang/String; = JwtId
  getNotBefore()Ljava/util/Date; = NotBefore
  getSubject()Ljava/lang/String; = Subject
com/ca/mas/foundation/MASClaimsBuilder = Com.CA.Mas.Foundation.MASClaimsBuilder
  <init>()V = .ctor()
  <init>(Lcom/ca/mas/foundation/MASClaims;)V = .ctor(Com.CA.Mas.Foundation.IMASClaims)
  audience(Ljava/lang/String;)Lcom/ca/mas/foundation/MASClaimsBuilder; = Audience(string)
  audience(Ljava/util/List;)Lcom/ca/mas/foundation/MASClaimsBuilder; = Audience(System.Collections.Generic.IList<string>)
  build()Lcom/ca/mas/foundation/MASClaims; = Build()
  claim(Ljava/lang/String;Ljava/lang/Object;)Lcom/ca/mas/foundation/MASClaimsBuilder; = Claim(string, Java.Lang.Object)
  expirationTime(Ljava/util/Date;)Lcom/ca/mas/foundation/MASClaimsBuilder; = ExpirationTime(Java.Util.Date)
  issuer(Ljava/lang/String;)Lcom/ca/mas/foundation/MASClaimsBuilder; = Issuer(string)
  issueTime(Ljava/util/Date;)Lcom/ca/mas/foundation/MASClaimsBuilder; = IssueTime(Java.Util.Date)
  jwtId(Ljava/lang/String;)Lcom/ca/mas/foundation/MASClaimsBuilder; = JwtId(string)
  notBeforeTime(Ljava/util/Date;)Lcom/ca/mas/foundation/MASClaimsBuilder; = NotBeforeTime(Java.Util.Date)
  subject(Ljava/lang/String;)Lcom/ca/mas/foundation/MASClaimsBuilder; = Subject(string)
com/ca/mas/foundation/MASClaimsConstants = Com.CA.Mas.Foundation.MASClaimsConstants
com/ca/mas/foundation/MASConfiguration = Com.CA.Mas.Foundation.MASConfiguration
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  SECURITY_CONFIGURATION_CHANGED = SecurityConfigurationChanged
  SECURITY_CONFIGURATION_RESET = SecurityConfigurationReset
  getApplicationDescription()Ljava/lang/String; = ApplicationDescription
  getApplicationName()Ljava/lang/String; = ApplicationName
  getApplicationOrganization()Ljava/lang/String; = ApplicationOrganization
  getApplicationRegisteredBy()Ljava/lang/String; = ApplicationRegisteredBy
  getApplicationType()Ljava/lang/String; = ApplicationType
  getCertificateAdvancedRenewTimeframe()I = CertificateAdvancedRenewTimeframe
  setCertificateAdvancedRenewTimeframe(I)V = CertificateAdvancedRenewTimeframe
  getCurrentConfiguration()Lcom/ca/mas/foundation/MASConfiguration; = CurrentConfiguration
  getGatewayCertificates()Ljava/util/Collection; = GatewayCertificates
  getGatewayHostName()Ljava/lang/String; = GatewayHostName
  getGatewayPort()I = GatewayPort
  getGatewayPrefix()Ljava/lang/String; = GatewayPrefix
  getGatewayUrl()Ljava/net/URL; = GatewayUrl
  isEnabledPublicKeyPinning()Z = IsEnabledPublicKeyPinning
  isEnabledTrustedPublicPKI()Z = IsEnabledTrustedPublicPKI
  isLoaded()Z = IsLoaded
  isSsoEnabled()Z = IsSsoEnabled
  getLocationIsRequired()Z = LocationIsRequired
  addSecurityConfiguration(Lcom/ca/mas/foundation/MASSecurityConfiguration;)V = AddSecurityConfiguration(Com.CA.Mas.Foundation.IMASSecurityConfiguration)
  getEndpointPath(Ljava/lang/String;)Ljava/lang/String; = GetEndpointPath(string)
  getSecurityConfiguration(Landroid/net/Uri;)Lcom/ca/mas/foundation/MASSecurityConfiguration; = GetSecurityConfiguration(Android.Net.Uri)
  removeSecurityConfiguration(Landroid/net/Uri;)V = RemoveSecurityConfiguration(Android.Net.Uri)
com/ca/mas/foundation/MASConstants = Com.CA.Mas.Foundation.MASConstants
  MAS_APPLICATION = MasApplication
  MAS_GRANT_FLOW_CLIENT_CREDENTIALS = MasGrantFlowClientCredentials
  MAS_GRANT_FLOW_PASSWORD = MasGrantFlowPassword
  MAS_STATE_NOT_CONFIGURED = MasStateNotConfigured
  MAS_STATE_NOT_INITIALIZED = MasStateNotInitialized
  MAS_STATE_STARTED = MasStateStarted
  MAS_STATE_STOPPED = MasStateStopped
  MAS_USER = MasUser
com/ca/mas/foundation/MASDevice = Com.CA.Mas.Foundation.MASDevice
  getCurrentDevice()Lcom/ca/mas/foundation/MASDevice; = CurrentDevice
  deregister(Lcom/ca/mas/foundation/MASCallback;)V = Deregister(Com.CA.Mas.Foundation.MASCallback)
com/ca/mas/foundation/MASException = Com.CA.Mas.Foundation.MASException
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
  getRootCause()Ljava/lang/Throwable; = RootCause
  getRootCause(Ljava/lang/Throwable;)Ljava/lang/Throwable; = GetRootCause(Java.Lang.Throwable)
com/ca/mas/foundation/MASExtension = Com.CA.Mas.Foundation.IMASExtension
com/ca/mas/foundation/MASFoundationStrings = Com.CA.Mas.Foundation.MASFoundationStrings
  API_TARGET_EXCEPTION = ApiTargetException
  SDK_UNINITIALIZED = SdkUninitialized
  SECURE_LOCK_FAILED_TO_DELETE_ID_TOKEN = SecureLockFailedToDeleteIdToken
  SECURE_LOCK_FAILED_TO_DELETE_SECURE_ID_TOKEN = SecureLockFailedToDeleteSecureIdToken
  SECURE_LOCK_FAILED_TO_RETRIEVE_ID_TOKEN = SecureLockFailedToRetrieveIdToken
  SECURE_LOCK_FAILED_TO_SAVE_ID_TOKEN = SecureLockFailedToSaveIdToken
  SECURE_LOCK_FAILED_TO_SAVE_SECURE_ID_TOKEN = SecureLockFailedToSaveSecureIdToken
  SECURE_LOCK_SESSION_CURRENTLY_LOCKED = SecureLockSessionCurrentlyLocked
  SHARED_STORAGE_NULL_ACCOUNT_NAME = SharedStorageNullAccountName
  SHARED_STORAGE_NULL_ACCOUNT_TYPE = SharedStorageNullAccountType
  TOKEN_ID_EXPIRED = TokenIdExpired
  USER_NOT_CURRENTLY_AUTHENTICATED = UserNotCurrentlyAuthenticated
com/ca/mas/foundation/MASGrantFlow = Com.CA.Mas.Foundation.IMASGrantFlow
com/ca/mas/foundation/MASGroup = Com.CA.Mas.Foundation.MASGroup
  <init>()V = .ctor()
  getGroupName()Ljava/lang/String; = GroupName
  setGroupName(Ljava/lang/String;)V = GroupName
  getId()Ljava/lang/String; = Id
  getMembers()Ljava/util/List; = Members
  getMeta()Lcom/ca/mas/identity/user/MASMeta; = Meta
  getOwner()Lcom/ca/mas/identity/group/MASOwner; = Owner
  getReference()Ljava/lang/String; = Reference
  getValue()Ljava/lang/String; = Value
  addMember(Lcom/ca/mas/identity/group/MASMember;)V = AddMember(Com.CA.Mas.Identity.Group.MASMember)
  delete(Lcom/ca/mas/foundation/MASCallback;)V = Delete(Com.CA.Mas.Foundation.MASCallback)
  getAllGroups(Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = GetAllGroups(string, Com.CA.Mas.Foundation.MASCallback)
  getGroupByGroupName(Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = GetGroupByGroupName(string, Com.CA.Mas.Foundation.MASCallback)
  getGroupById(Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = GetGroupById(string, Com.CA.Mas.Foundation.MASCallback)
  getGroupByMember(Lcom/ca/mas/foundation/MASUser;Lcom/ca/mas/foundation/MASCallback;)V = GetGroupByMember(Com.CA.Mas.Foundation.MASUser, Com.CA.Mas.Foundation.MASCallback)
  getGroupMetaData(Lcom/ca/mas/foundation/MASCallback;)V = GetGroupMetaData(Com.CA.Mas.Foundation.MASCallback)
  getGroupsByFilter(Lcom/ca/mas/identity/common/MASFilteredRequest;Lcom/ca/mas/foundation/MASCallback;)V = GetGroupsByFilter(Com.CA.Mas.Identity.Common.MASFilteredRequest, Com.CA.Mas.Foundation.MASCallback)
  newInstance()Lcom/ca/mas/foundation/MASGroup; = NewInstance()
  removeMember(Lcom/ca/mas/identity/group/MASMember;)V = RemoveMember(Com.CA.Mas.Identity.Group.MASMember)
  save(Lcom/ca/mas/foundation/MASCallback;)V = Save(Com.CA.Mas.Foundation.MASCallback)
com/ca/mas/foundation/MASIdToken = Com.CA.Mas.Foundation.MASIdToken
com/ca/mas/foundation/MASInvalidHostException = Com.CA.Mas.Foundation.MASInvalidHostException
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
com/ca/mas/foundation/MASOtpAuthenticationHandler = Com.CA.Mas.Foundation.MASOtpAuthenticationHandler
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  <init>(Lcom/ca/mas/core/auth/otp/OtpAuthenticationHandler;)V = .ctor(Com.CA.Mas.Core.Auth.Otp.OtpAuthenticationHandler)
  CREATOR = Creator
  getChannels()Ljava/util/List; = Channels
  isInvalidOtp()Z = IsInvalidOtp
  cancel()V = Cancel()
  deliver(Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = Deliver(string, Com.CA.Mas.Foundation.MASCallback)
  describeContents()I = DescribeContents()
  proceed(Landroid/content/Context;Ljava/lang/String;)V = Proceed(Android.Content.Context, string)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/ca/mas/foundation/MASRequestBody = Com.CA.Mas.Foundation.MASRequestBody
  <init>()V = .ctor()
  byteArrayBody([B)Lcom/ca/mas/foundation/MASRequestBody; = ByteArrayBody(byte[])
  jsonBody(Lorg/json/JSONObject;)Lcom/ca/mas/foundation/MASRequestBody; = JsonBody(Org.Json.JSONObject)
  stringBody(Ljava/lang/String;)Lcom/ca/mas/foundation/MASRequestBody; = StringBody(string)
  urlEncodedFormBody(Ljava/util/List;)Lcom/ca/mas/foundation/MASRequestBody; = UrlEncodedFormBody(System.Collections.Generic.IList<Android.Util.Pair>)
com/ca/mas/foundation/MASResultReceiver = Com.CA.Mas.Foundation.MASResultReceiver
  <init>()V = .ctor()
  <init>(Landroid/os/Handler;)V = .ctor(Android.OS.Handler)
  onRequestCancelled(Landroid/os/Bundle;)V = OnRequestCancelled(Android.OS.Bundle)
com/ca/mas/foundation/MASSecurityConfiguration = Com.CA.Mas.Foundation.IMASSecurityConfiguration
  getCertificates()Ljava/util/List; = Certificates
  getHost()Landroid/net/Uri; = Host
  isPublic()Z = IsPublic
  getPublicKeyHashes()Ljava/util/List; = PublicKeyHashes
  trustPublicPki()Z = TrustPublicPki()
com/ca/mas/foundation/MASServerException = Com.CA.Mas.Foundation.MASServerException
  <init>(IILjava/lang/String;Ljava/lang/String;)V = .ctor(int, int, string, string)
  <init>(IILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(int, int, string, string, Java.Lang.Throwable)
  <init>(Lcom/ca/mas/core/error/MAGServerException;)V = .ctor(Com.CA.Mas.Core.Error.MAGServerException)
com/ca/mas/foundation/MASSessionUnlockCallback = Com.CA.Mas.Foundation.MASSessionUnlockCallback
  <init>()V = .ctor()
  onUserAuthenticationRequired()V = OnUserAuthenticationRequired()
com/ca/mas/foundation/MASSharedStorageException = Com.CA.Mas.Foundation.MASSharedStorageException
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
com/ca/mas/foundation/MASState = Com.CA.Mas.Foundation.IMASState
com/ca/mas/foundation/MASTokenRequest = Com.CA.Mas.Foundation.MASTokenRequest
  <init>()V = .ctor()
  getBody()Lcom/ca/mas/core/http/MAGRequestBody; = Body
  getGrantProvider()Lcom/ca/mas/core/oauth/GrantProvider; = GrantProvider
  getHeaders()Ljava/util/Map; = Headers
  isPublic()Z = IsPublic
  getMethod()Ljava/lang/String; = Method
  getScope()Ljava/lang/String; = Scope
  getURL()Ljava/net/URL; = URL
  notifyOnCancel()Z = NotifyOnCancel()
com/ca/mas/foundation/MASTransformable = Com.CA.Mas.Foundation.IMASTransformable
  getAsJSONObject()Lorg/json/JSONObject; = AsJSONObject
  populate(Lorg/json/JSONObject;)V = Populate(Org.Json.JSONObject)
com/ca/mas/foundation/MASUser = Com.CA.Mas.Foundation.MASUser
  <init>()V = .ctor()
  getAccessToken()Ljava/lang/String; = AccessToken
  getAuthCredentialsType()Ljava/lang/String; = AuthCredentialsType
  getCurrentUser()Lcom/ca/mas/foundation/MASUser; = CurrentUser
  isAuthenticated()Z = IsAuthenticated
  isCurrentUser()Z = IsCurrentUser
  isSessionLocked()Z = IsSessionLocked
  getThumbnailImage()Landroid/graphics/Bitmap; = ThumbnailImage
  getUserById(Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = GetUserById(string, Com.CA.Mas.Foundation.MASCallback)
  getUserMetaData(Lcom/ca/mas/foundation/MASCallback;)V = GetUserMetaData(Com.CA.Mas.Foundation.MASCallback)
  getUsersByFilter(Lcom/ca/mas/identity/common/MASFilteredRequest;Lcom/ca/mas/foundation/MASCallback;)V = GetUsersByFilter(Com.CA.Mas.Identity.Common.MASFilteredRequest, Com.CA.Mas.Foundation.MASCallback)
  lockSession(Lcom/ca/mas/foundation/MASCallback;)V = LockSession(Com.CA.Mas.Foundation.MASCallback)
  login(Lcom/ca/mas/foundation/MASAuthCredentials;Lcom/ca/mas/foundation/MASCallback;)V = Login(Com.CA.Mas.Foundation.IMASAuthCredentials, Com.CA.Mas.Foundation.MASCallback)
  login(Lcom/ca/mas/foundation/MASAuthorizationRequest;Lcom/ca/mas/foundation/MASAuthorizationRequestHandler;)V = Login(Com.CA.Mas.Foundation.MASAuthorizationRequest, Com.CA.Mas.Foundation.IMASAuthorizationRequestHandler)
  login(Lcom/ca/mas/foundation/MASAuthorizationResponse;Lcom/ca/mas/foundation/MASCallback;)V = Login(Com.CA.Mas.Foundation.MASAuthorizationResponse, Com.CA.Mas.Foundation.MASCallback)
  login(Lcom/ca/mas/foundation/MASCallback;)V = Login(Com.CA.Mas.Foundation.MASCallback)
  login(Lcom/ca/mas/foundation/MASIdToken;Lcom/ca/mas/foundation/MASCallback;)V = Login(Com.CA.Mas.Foundation.MASIdToken, Com.CA.Mas.Foundation.MASCallback)
  login(Ljava/lang/String;[CLcom/ca/mas/foundation/MASCallback;)V = Login(string, char[], Com.CA.Mas.Foundation.MASCallback)
  login(Ljava/lang/String;Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = Login(string, string, Com.CA.Mas.Foundation.MASCallback)
  logout(Lcom/ca/mas/foundation/MASCallback;)V = Logout(Com.CA.Mas.Foundation.MASCallback)
  removeSessionLock(Lcom/ca/mas/foundation/MASCallback;)V = RemoveSessionLock(Com.CA.Mas.Foundation.MASCallback)
  requestUserInfo(Lcom/ca/mas/foundation/MASCallback;)V = RequestUserInfo(Com.CA.Mas.Foundation.MASCallback)
  sendMessage(Lcom/ca/mas/messaging/MASMessage;Lcom/ca/mas/foundation/MASGroup;Lcom/ca/mas/foundation/MASCallback;)V = SendMessage(Com.CA.Mas.Messaging.MASMessage, Com.CA.Mas.Foundation.MASGroup, Com.CA.Mas.Foundation.MASCallback)
  sendMessage(Lcom/ca/mas/messaging/MASMessage;Lcom/ca/mas/foundation/MASGroup;Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = SendMessage(Com.CA.Mas.Messaging.MASMessage, Com.CA.Mas.Foundation.MASGroup, string, Com.CA.Mas.Foundation.MASCallback)
  sendMessage(Lcom/ca/mas/messaging/MASMessage;Lcom/ca/mas/foundation/MASUser;Lcom/ca/mas/foundation/MASCallback;)V = SendMessage(Com.CA.Mas.Messaging.MASMessage, Com.CA.Mas.Foundation.MASUser, Com.CA.Mas.Foundation.MASCallback)
  sendMessage(Lcom/ca/mas/messaging/MASMessage;Lcom/ca/mas/foundation/MASUser;Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = SendMessage(Com.CA.Mas.Messaging.MASMessage, Com.CA.Mas.Foundation.MASUser, string, Com.CA.Mas.Foundation.MASCallback)
  sendMessage(Lcom/ca/mas/messaging/topic/MASTopic;Lcom/ca/mas/messaging/MASMessage;Lcom/ca/mas/foundation/MASCallback;)V = SendMessage(Com.CA.Mas.Messaging.Topic.IMASTopic, Com.CA.Mas.Messaging.MASMessage, Com.CA.Mas.Foundation.MASCallback)
  startListeningToMyMessages(Lcom/ca/mas/foundation/MASCallback;)V = StartListeningToMyMessages(Com.CA.Mas.Foundation.MASCallback)
  stopListeningToMyMessages(Lcom/ca/mas/foundation/MASCallback;)V = StopListeningToMyMessages(Com.CA.Mas.Foundation.MASCallback)
  unlockSession(Lcom/ca/mas/foundation/MASSessionUnlockCallback;)V = UnlockSession(Com.CA.Mas.Foundation.MASSessionUnlockCallback)
com/ca/mas/foundation/notify/Callback = Com.CA.Mas.Foundation.Notify.Callback
  <init>()V = .ctor()
  getHandler(Lcom/ca/mas/foundation/MASCallback;)Landroid/os/Handler; = GetHandler(Com.CA.Mas.Foundation.MASCallback)
  onError(Lcom/ca/mas/foundation/MASCallback;Ljava/lang/Throwable;)V = OnError(Com.CA.Mas.Foundation.MASCallback, Java.Lang.Throwable)
  onSuccess(Lcom/ca/mas/foundation/MASCallback;Ljava/lang/Object;)V = OnSuccess(Com.CA.Mas.Foundation.MASCallback, Java.Lang.Object)
com/ca/mas/foundation/UserRepository = Com.CA.Mas.Foundation.IUserRepository
  getCurrentUser(Lcom/ca/mas/foundation/MASCallback;)V = GetCurrentUser(Com.CA.Mas.Foundation.MASCallback)
com/ca/mas/identity/common/Attribute = Com.CA.Mas.Identity.Common.Attribute
  <init>()V = .ctor()
  getDescription()Ljava/lang/String; = Description
  isCaseExact()Z = IsCaseExact
  isMultiValued()Z = IsMultiValued
  isRequired()Z = IsRequired
  getMutability()Ljava/lang/String; = Mutability
  getName()Ljava/lang/String; = Name
  getReturned()Ljava/lang/String; = Returned
  getType()Ljava/lang/String; = Type
  getUniqueness()Ljava/lang/String; = Uniqueness
  populate(Lorg/json/JSONObject;)V = Populate(Org.Json.JSONObject)
com/ca/mas/identity/common/Attributes = Com.CA.Mas.Identity.Common.Attributes
  <init>()V = .ctor()
  <init>(Ljava/util/List;)V = .ctor(System.Collections.Generic.IList<string>)
  mAttributes = MAttributes
  getAsJSONObject()Lorg/json/JSONObject; = AsJSONObject
  getKey()Ljava/lang/String; = Key
  clear(Landroid/content/Context;)V = Clear(Android.Content.Context)
  getAttributes()Ljava/util/List; = GetAttributes()
  populate(Lorg/json/JSONObject;)V = Populate(Org.Json.JSONObject)
  save(Landroid/content/Context;)V = Save(Android.Content.Context)
com/ca/mas/identity/common/MASFilteredRequest = Com.CA.Mas.Identity.Common.MASFilteredRequest
  <init>(Ljava/util/List;Ljava/lang/String;)V = .ctor(System.Collections.Generic.IList<string>, string)
  mAttributes = MAttributes
  mExcludedAttributes = MExcludedAttributes
  createUri(Landroid/content/Context;)Landroid/net/Uri; = CreateUri(Android.Content.Context)
com/ca/mas/identity/common/MASPagination = Com.CA.Mas.Identity.Common.IMASPagination
  PAGE_INC_BY = PageIncBy
  PAGE_NO_PAGINATION = PageNoPagination
  PAGE_START = PageStart
  PAGE_START_EXP = PageStartExp
  PAGE_START_INDEX = PageStartIndex
com/ca/mas/identity/group/GroupAttributes = Com.CA.Mas.Identity.Group.GroupAttributes
  <init>()V = .ctor()
  getKey()Ljava/lang/String; = Key
  populate(Lorg/json/JSONObject;)V = Populate(Org.Json.JSONObject)
com/ca/mas/identity/group/MASGroupIdentity = Com.CA.Mas.Identity.Group.IMASGroupIdentity
  getAllGroups(Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = GetAllGroups(string, Com.CA.Mas.Foundation.MASCallback)
  getGroupByGroupName(Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = GetGroupByGroupName(string, Com.CA.Mas.Foundation.MASCallback)
  getGroupById(Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = GetGroupById(string, Com.CA.Mas.Foundation.MASCallback)
  getGroupByMember(Lcom/ca/mas/foundation/MASUser;Lcom/ca/mas/foundation/MASCallback;)V = GetGroupByMember(Com.CA.Mas.Foundation.MASUser, Com.CA.Mas.Foundation.MASCallback)
  getGroupMetaData(Lcom/ca/mas/foundation/MASCallback;)V = GetGroupMetaData(Com.CA.Mas.Foundation.MASCallback)
  getGroupsByFilter(Lcom/ca/mas/identity/common/MASFilteredRequest;Lcom/ca/mas/foundation/MASCallback;)V = GetGroupsByFilter(Com.CA.Mas.Identity.Common.MASFilteredRequest, Com.CA.Mas.Foundation.MASCallback)
com/ca/mas/identity/group/MASGroupRepository = Com.CA.Mas.Identity.Group.IMASGroupRepository
  delete(Lcom/ca/mas/foundation/MASGroup;Lcom/ca/mas/foundation/MASCallback;)V = Delete(Com.CA.Mas.Foundation.MASGroup, Com.CA.Mas.Foundation.MASCallback)
  getGroupById(Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = GetGroupById(string, Com.CA.Mas.Foundation.MASCallback)
  getGroupMetaData(Lcom/ca/mas/foundation/MASCallback;)V = GetGroupMetaData(Com.CA.Mas.Foundation.MASCallback)
  getGroupsByFilter(Lcom/ca/mas/identity/common/MASFilteredRequest;Lcom/ca/mas/foundation/MASCallback;)V = GetGroupsByFilter(Com.CA.Mas.Identity.Common.MASFilteredRequest, Com.CA.Mas.Foundation.MASCallback)
  save(Lcom/ca/mas/foundation/MASGroup;Lcom/ca/mas/foundation/MASCallback;)V = Save(Com.CA.Mas.Foundation.MASGroup, Com.CA.Mas.Foundation.MASCallback)
com/ca/mas/identity/group/MASMember = Com.CA.Mas.Identity.Group.MASMember
  <init>(Lcom/ca/mas/foundation/MASUser;)V = .ctor(Com.CA.Mas.Foundation.MASUser)
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string, string)
  getDisplay()Ljava/lang/String; = Display
  setDisplay(Ljava/lang/String;)V = Display
  getRef()Ljava/lang/String; = Ref
  setRef(Ljava/lang/String;)V = Ref
  getType()Ljava/lang/String; = Type
  setType(Ljava/lang/String;)V = Type
  getValue()Ljava/lang/String; = Value
  setValue(Ljava/lang/String;)V = Value
com/ca/mas/identity/group/MASOwner = Com.CA.Mas.Identity.Group.MASOwner
  <init>(Lcom/ca/mas/foundation/MASUser;)V = .ctor(Com.CA.Mas.Foundation.MASUser)
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string)
  getDisplay()Ljava/lang/String; = Display
  getRef()Ljava/lang/String; = Ref
  getValue()Ljava/lang/String; = Value
com/ca/mas/identity/ScimIdentifiable = Com.CA.Mas.Identity.IScimIdentifiable
  getCardinality()J = Cardinality
  getDisplayName()Ljava/lang/String; = DisplayName
  getExternalId()Ljava/lang/String; = ExternalId
  getId()Ljava/lang/String; = Id
com/ca/mas/identity/user/IdentityBase = Com.CA.Mas.Identity.User.IdentityBase
  <init>()V = .ctor()
  getAsJSONObject()Lorg/json/JSONObject; = AsJSONObject
  getType()Ljava/lang/String; = Type
  getValue()Ljava/lang/String; = Value
  populate(Lorg/json/JSONObject;)V = Populate(Org.Json.JSONObject)
com/ca/mas/identity/user/MASAddress = Com.CA.Mas.Identity.User.MASAddress
  <init>()V = .ctor()
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string, string, string)
  getAsJSONObject()Lorg/json/JSONObject; = AsJSONObject
  getCountry()Ljava/lang/String; = Country
  setCountry(Ljava/lang/String;)V = Country
  getFormatted()Ljava/lang/String; = Formatted
  isPrimary()Z = IsPrimary
  getLocality()Ljava/lang/String; = Locality
  getPostalCode()Ljava/lang/String; = PostalCode
  getRegion()Ljava/lang/String; = Region
  getStreetAddress()Ljava/lang/String; = StreetAddress
  getType()Ljava/lang/String; = Type
  populate(Lorg/json/JSONObject;)V = Populate(Org.Json.JSONObject)
com/ca/mas/identity/user/MASEmail = Com.CA.Mas.Identity.User.MASEmail
  <init>()V = .ctor()
  isPrimary()Z = IsPrimary
com/ca/mas/identity/user/MASIms = Com.CA.Mas.Identity.User.MASIms
  <init>()V = .ctor()
com/ca/mas/identity/user/MASMeta = Com.CA.Mas.Identity.User.MASMeta
  <init>()V = .ctor()
  getAsJSONObject()Lorg/json/JSONObject; = AsJSONObject
  getCreated()Ljava/lang/String; = Created
  getLastModified()Ljava/lang/String; = LastModified
  getLocation()Ljava/lang/String; = Location
  getResourceType()Ljava/lang/String; = ResourceType
  getVersion()Ljava/lang/String; = Version
  populate(Lorg/json/JSONObject;)V = Populate(Org.Json.JSONObject)
com/ca/mas/identity/user/MASName = Com.CA.Mas.Identity.User.MASName
  <init>()V = .ctor()
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  getAsJSONObject()Lorg/json/JSONObject; = AsJSONObject
  getFamilyName()Ljava/lang/String; = FamilyName
  getFormatted()Ljava/lang/String; = Formatted
  getGivenName()Ljava/lang/String; = GivenName
  getHonorificPrefix()Ljava/lang/String; = HonorificPrefix
  getHonorificSuffix()Ljava/lang/String; = HonorificSuffix
  getMiddleName()Ljava/lang/String; = MiddleName
  populate(Lorg/json/JSONObject;)V = Populate(Org.Json.JSONObject)
com/ca/mas/identity/user/MASPhone = Com.CA.Mas.Identity.User.MASPhone
  <init>()V = .ctor()
com/ca/mas/identity/user/MASPhoto = Com.CA.Mas.Identity.User.MASPhoto
  <init>()V = .ctor()
com/ca/mas/identity/user/MASUserIdentity = Com.CA.Mas.Identity.User.IMASUserIdentity
  getUserById(Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = GetUserById(string, Com.CA.Mas.Foundation.MASCallback)
  getUserMetaData(Lcom/ca/mas/foundation/MASCallback;)V = GetUserMetaData(Com.CA.Mas.Foundation.MASCallback)
  getUsersByFilter(Lcom/ca/mas/identity/common/MASFilteredRequest;Lcom/ca/mas/foundation/MASCallback;)V = GetUsersByFilter(Com.CA.Mas.Identity.Common.MASFilteredRequest, Com.CA.Mas.Foundation.MASCallback)
com/ca/mas/identity/user/MASUserRepository = Com.CA.Mas.Identity.User.IMASUserRepository
  me(Lcom/ca/mas/foundation/MASCallback;)V = Me(Com.CA.Mas.Foundation.MASCallback)
com/ca/mas/identity/user/ScimUser = Com.CA.Mas.Identity.User.IScimUser
  getAddressList()Ljava/util/List; = AddressList
  getEmailList()Ljava/util/List; = EmailList
  getGroupList()Ljava/util/List; = GroupList
  getImsList()Ljava/util/List; = ImsList
  isActive()Z = IsActive
  getLocale()Ljava/lang/String; = Locale
  getMeta()Lcom/ca/mas/identity/user/MASMeta; = Meta
  getName()Lcom/ca/mas/identity/user/MASName; = Name
  getNickName()Ljava/lang/String; = NickName
  getPassword()Ljava/lang/String; = Password
  getPhoneList()Ljava/util/List; = PhoneList
  getPhotoList()Ljava/util/List; = PhotoList
  getPreferredLanguage()Ljava/lang/String; = PreferredLanguage
  getProfileUrl()Ljava/lang/String; = ProfileUrl
  getSource()Lorg/json/JSONObject; = Source
  getTimeZone()Ljava/lang/String; = TimeZone
  getTitle()Ljava/lang/String; = Title
  getUserName()Ljava/lang/String; = UserName
  getUserType()Ljava/lang/String; = UserType
com/ca/mas/identity/user/User = Com.CA.Mas.Identity.User.User
  <init>()V = .ctor()
  mId = MId
  mName = MName
  mUserName = MUserName
  getAccessToken()Ljava/lang/String; = AccessToken
  getAddressList()Ljava/util/List; = AddressList
  getAsJSONObject()Lorg/json/JSONObject; = AsJSONObject
  getCardinality()J = Cardinality
  getDisplayName()Ljava/lang/String; = DisplayName
  getEmailList()Ljava/util/List; = EmailList
  getExternalId()Ljava/lang/String; = ExternalId
  getGroupList()Ljava/util/List; = GroupList
  getId()Ljava/lang/String; = Id
  getImsList()Ljava/util/List; = ImsList
  isActive()Z = IsActive
  isAuthenticated()Z = IsAuthenticated
  isCurrentUser()Z = IsCurrentUser
  isSessionLocked()Z = IsSessionLocked
  getLocale()Ljava/lang/String; = Locale
  getMeta()Lcom/ca/mas/identity/user/MASMeta; = Meta
  getName()Lcom/ca/mas/identity/user/MASName; = Name
  getNickName()Ljava/lang/String; = NickName
  getPassword()Ljava/lang/String; = Password
  getPhoneList()Ljava/util/List; = PhoneList
  getPhotoList()Ljava/util/List; = PhotoList
  getPreferredLanguage()Ljava/lang/String; = PreferredLanguage
  getProfileUrl()Ljava/lang/String; = ProfileUrl
  getSource()Lorg/json/JSONObject; = Source
  getThumbnailImage()Landroid/graphics/Bitmap; = ThumbnailImage
  getTimeZone()Ljava/lang/String; = TimeZone
  getTitle()Ljava/lang/String; = Title
  getUserName()Ljava/lang/String; = UserName
  getUserType()Ljava/lang/String; = UserType
  getUserById(Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = GetUserById(string, Com.CA.Mas.Foundation.MASCallback)
  getUserMetaData(Lcom/ca/mas/foundation/MASCallback;)V = GetUserMetaData(Com.CA.Mas.Foundation.MASCallback)
  getUsersByFilter(Lcom/ca/mas/identity/common/MASFilteredRequest;Lcom/ca/mas/foundation/MASCallback;)V = GetUsersByFilter(Com.CA.Mas.Identity.Common.MASFilteredRequest, Com.CA.Mas.Foundation.MASCallback)
  lockSession(Lcom/ca/mas/foundation/MASCallback;)V = LockSession(Com.CA.Mas.Foundation.MASCallback)
  logout(Lcom/ca/mas/foundation/MASCallback;)V = Logout(Com.CA.Mas.Foundation.MASCallback)
  populate(Lorg/json/JSONObject;)V = Populate(Org.Json.JSONObject)
  removeSessionLock(Lcom/ca/mas/foundation/MASCallback;)V = RemoveSessionLock(Com.CA.Mas.Foundation.MASCallback)
  requestUserInfo(Lcom/ca/mas/foundation/MASCallback;)V = RequestUserInfo(Com.CA.Mas.Foundation.MASCallback)
  sendMessage(Lcom/ca/mas/messaging/MASMessage;Lcom/ca/mas/foundation/MASGroup;Lcom/ca/mas/foundation/MASCallback;)V = SendMessage(Com.CA.Mas.Messaging.MASMessage, Com.CA.Mas.Foundation.MASGroup, Com.CA.Mas.Foundation.MASCallback)
  sendMessage(Lcom/ca/mas/messaging/MASMessage;Lcom/ca/mas/foundation/MASGroup;Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = SendMessage(Com.CA.Mas.Messaging.MASMessage, Com.CA.Mas.Foundation.MASGroup, string, Com.CA.Mas.Foundation.MASCallback)
  sendMessage(Lcom/ca/mas/messaging/MASMessage;Lcom/ca/mas/foundation/MASUser;Lcom/ca/mas/foundation/MASCallback;)V = SendMessage(Com.CA.Mas.Messaging.MASMessage, Com.CA.Mas.Foundation.MASUser, Com.CA.Mas.Foundation.MASCallback)
  sendMessage(Lcom/ca/mas/messaging/MASMessage;Lcom/ca/mas/foundation/MASUser;Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = SendMessage(Com.CA.Mas.Messaging.MASMessage, Com.CA.Mas.Foundation.MASUser, string, Com.CA.Mas.Foundation.MASCallback)
  sendMessage(Lcom/ca/mas/messaging/topic/MASTopic;Lcom/ca/mas/messaging/MASMessage;Lcom/ca/mas/foundation/MASCallback;)V = SendMessage(Com.CA.Mas.Messaging.Topic.IMASTopic, Com.CA.Mas.Messaging.MASMessage, Com.CA.Mas.Foundation.MASCallback)
  startListeningToMyMessages(Lcom/ca/mas/foundation/MASCallback;)V = StartListeningToMyMessages(Com.CA.Mas.Foundation.MASCallback)
  stopListeningToMyMessages(Lcom/ca/mas/foundation/MASCallback;)V = StopListeningToMyMessages(Com.CA.Mas.Foundation.MASCallback)
  unlockSession(Lcom/ca/mas/foundation/MASSessionUnlockCallback;)V = UnlockSession(Com.CA.Mas.Foundation.MASSessionUnlockCallback)
com/ca/mas/identity/user/UserAttributes = Com.CA.Mas.Identity.User.UserAttributes
  <init>()V = .ctor()
  <init>(Ljava/util/List;)V = .ctor(System.Collections.Generic.IList<string>)
  getKey()Ljava/lang/String; = Key
  populate(Lorg/json/JSONObject;)V = Populate(Org.Json.JSONObject)
com/ca/mas/identity/user/UserNotAuthenticatedException = Com.CA.Mas.Identity.User.UserNotAuthenticatedException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/identity/util/IdentityConsts = Com.CA.Mas.Identity.Util.IdentityConsts
  <init>()V = .ctor()
  INDEX_START = IndexStart
  KEY_ACTIVE = KeyActive
  KEY_ADDR_COUNTRY = KeyAddrCountry
  KEY_ADDR_FORMATTED = KeyAddrFormatted
  KEY_ADDR_LOCALITY = KeyAddrLocality
  KEY_ADDR_POSTAL = KeyAddrPostal
  KEY_ADDR_PRIMARY = KeyAddrPrimary
  KEY_ADDR_REGION = KeyAddrRegion
  KEY_ADDRS = KeyAddrs
  KEY_ADDR_STREET = KeyAddrStreet
  KEY_ADDR_TYPE = KeyAddrType
  KEY_ATTRIBUTES = KeyAttributes
  KEY_DISPLAY = KeyDisplay
  KEY_DISPLAY_NAME = KeyDisplayName
  KEY_EMAIL_PRIMARY = KeyEmailPrimary
  KEY_EMAILS = KeyEmails
  KEY_EXCLUDED_ATTRIBUTES = KeyExcludedAttributes
  KEY_EXTERNAL_ID = KeyExternalId
  KEY_FAMILY_NAME = KeyFamilyName
  KEY_FILTER = KeyFilter
  KEY_FORMATTED = KeyFormatted
  KEY_GIVEN_NAME = KeyGivenName
  KEY_GROUP_ATTRIBUTES = KeyGroupAttributes
  KEY_GROUPS = KeyGroups
  KEY_GROUPS_BY_MEMBER = KeyGroupsByMember
  KEY_GROUPS_BY_NAME = KeyGroupsByName
  KEY_GROUPS_BY_OWNER = KeyGroupsByOwner
  KEY_ID = KeyId
  KEY_IMS = KeyIms
  KEY_LOCALE = KeyLocale
  KEY_MEMBERS = KeyMembers
  KEY_META = KeyMeta
  KEY_META_CREATED = KeyMetaCreated
  KEY_META_LAST_MODIFIED = KeyMetaLastModified
  KEY_META_LOCATION = KeyMetaLocation
  KEY_META_RESOURCE_TYPE = KeyMetaResourceType
  KEY_META_VERSION = KeyMetaVersion
  KEY_MIDDLE_NAME = KeyMiddleName
  KEY_MY_ADDRESS = KeyMyAddress
  KEY_MY_COUNTRY = KeyMyCountry
  KEY_MY_EMAIL = KeyMyEmail
  KEY_MY_FAMILY_NAME = KeyMyFamilyName
  KEY_MY_GIVEN_NAME = KeyMyGivenName
  KEY_MY_LOCALITY = KeyMyLocality
  KEY_MY_MIDDLE_NAME = KeyMyMiddleName
  KEY_MY_PHONE = KeyMyPhone
  KEY_MY_PICTURE = KeyMyPicture
  KEY_MY_POSTAL_CODE = KeyMyPostalCode
  KEY_MY_PREF_UNAME = KeyMyPrefUname
  KEY_MY_REGION = KeyMyRegion
  KEY_MY_STREET_ADDR = KeyMyStreetAddr
  KEY_MY_SUB = KeyMySub
  KEY_NAME = KeyName
  KEY_NICK_NAME = KeyNickName
  KEY_OP = KeyOp
  KEY_OPERATIONS = KeyOperations
  KEY_OWNER = KeyOwner
  KEY_PASSWORD = KeyPassword
  KEY_PATH = KeyPath
  KEY_PHONE_NUMBERS = KeyPhoneNumbers
  KEY_PHOTOS = KeyPhotos
  KEY_PREFERRED_LANG = KeyPreferredLang
  KEY_PREFIX_NAME = KeyPrefixName
  KEY_PROFILE_URL = KeyProfileUrl
  KEY_REFERENCE = KeyReference
  KEY_RESOURCES = KeyResources
  KEY_SCHEMAS = KeySchemas
  KEY_SUB_ATTRIBUTES = KeySubAttributes
  KEY_SUFFIX_NAME = KeySuffixName
  KEY_TIMEZONE = KeyTimezone
  KEY_TITLE = KeyTitle
  KEY_TOTAL_RESULTS = KeyTotalResults
  KEY_USER_ATTRIBUTES = KeyUserAttributes
  KEY_USERNAME = KeyUsername
  KEY_USER_TYPE = KeyUserType
  KEY_X509CERTS = KeyX509certs
  META_DATE_FORMAT = MetaDateFormat
  OP_ADD = OpAdd
  OP_CONTAINS = OpContains
  OP_ENDS_WITH = OpEndsWith
  OP_EQUAL = OpEqual
  OP_GREATER_THAN = OpGreaterThan
  OP_GREATER_THAN_OR_EQUAL = OpGreaterThanOrEqual
  OP_IS_PRESENT = OpIsPresent
  OP_LESS_THAN = OpLessThan
  OP_LESS_THAN_OR_EQUAL = OpLessThanOrEqual
  OP_NOT_EQUAL = OpNotEqual
  OP_REMOVE = OpRemove
  OP_REPLACE = OpReplace
  OP_STARTS_WITH = OpStartsWith
  PAGE_SIZE = PageSize
  PHOTO_TYPE_THUMBNAIL = PhotoTypeThumbnail
  SCHEMA_GROUP = SchemaGroup
  SCHEMA_PATCH = SchemaPatch
  SCHEMAS_PREFIX = SchemasPrefix
  SCHEMA_USER = SchemaUser
  SCIM_GROUPS = ScimGroups
  SCIM_SCHEMAS = ScimSchemas
  SCIM_USERS = ScimUsers
com/ca/mas/identity/util/IdentityUtil = Com.CA.Mas.Identity.Util.IdentityUtil
  <init>()V = .ctor()
  SCHEMA_MAP = SchemaMap
  getGroupPath()Ljava/lang/String; = GroupPath
  getSchemasPath()Ljava/lang/String; = SchemasPath
  getUserPath()Ljava/lang/String; = UserPath
  getPhoto(Ljava/util/List;)Landroid/graphics/Bitmap; = GetPhoto(System.Collections.Generic.IList<Com.CA.Mas.Identity.User.MASPhoto>)
  getThumbnail(Ljava/util/List;)Landroid/graphics/Bitmap; = GetThumbnail(System.Collections.Generic.IList<Com.CA.Mas.Identity.User.MASPhoto>)
  normalizeAttributes(Ljava/util/List;Ljava/util/List;)Ljava/util/List; = NormalizeAttributes(System.Collections.Generic.IList<string>, System.Collections.Generic.IList<string>)
com/ca/mas/messaging/MASMessage = Com.CA.Mas.Messaging.MASMessage
  <init>()V = .ctor()
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  CREATOR = Creator
  getContentEncoding()Ljava/lang/String; = ContentEncoding
  setContentEncoding(Ljava/lang/String;)V = ContentEncoding
  getContentType()Ljava/lang/String; = ContentType
  setContentType(Ljava/lang/String;)V = ContentType
  getDisplayName()Ljava/lang/String; = DisplayName
  isDuplicate()Z = Duplicate
  setDuplicate(Z)V = Duplicate
  getQos()I = Qos
  setQos(I)V = Qos
  isRetained()Z = Retained
  setRetained(Z)V = Retained
  getSenderId()Ljava/lang/String; = SenderId
  setSenderId(Ljava/lang/String;)V = SenderId
  getSenderType()Ljava/lang/String; = SenderType
  setSenderType(Ljava/lang/String;)V = SenderType
  getSentTime()J = SentTime
  setSentTime(J)V = SentTime
  getTopic()Ljava/lang/String; = Topic
  setTopic(Ljava/lang/String;)V = Topic
  getVersion()Ljava/lang/String; = Version
  setVersion(Ljava/lang/String;)V = Version
  createJSONStringFromMASMessage(Landroid/content/Context;)Ljava/lang/String; = CreateJSONStringFromMASMessage(Android.Content.Context)
  createMASMessageFromJSONString(Ljava/lang/String;)V = CreateMASMessageFromJSONString(string)
  describeContents()I = DescribeContents()
  getPayload()[B = GetPayload()
  newInstance()Lcom/ca/mas/messaging/MASMessage; = NewInstance()
  newInstance(Landroid/content/Intent;)Lcom/ca/mas/messaging/MASMessage; = NewInstance(Android.Content.Intent)
  setPayload([B)V = SetPayload(byte[])
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/ca/mas/messaging/MASMessageException = Com.CA.Mas.Messaging.MASMessageException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/ca/mas/messaging/MASMessenger = Com.CA.Mas.Messaging.IMASMessenger
  sendMessage(Lcom/ca/mas/messaging/MASMessage;Lcom/ca/mas/foundation/MASGroup;Lcom/ca/mas/foundation/MASCallback;)V = SendMessage(Com.CA.Mas.Messaging.MASMessage, Com.CA.Mas.Foundation.MASGroup, Com.CA.Mas.Foundation.MASCallback)
  sendMessage(Lcom/ca/mas/messaging/MASMessage;Lcom/ca/mas/foundation/MASGroup;Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = SendMessage(Com.CA.Mas.Messaging.MASMessage, Com.CA.Mas.Foundation.MASGroup, string, Com.CA.Mas.Foundation.MASCallback)
  sendMessage(Lcom/ca/mas/messaging/MASMessage;Lcom/ca/mas/foundation/MASUser;Lcom/ca/mas/foundation/MASCallback;)V = SendMessage(Com.CA.Mas.Messaging.MASMessage, Com.CA.Mas.Foundation.MASUser, Com.CA.Mas.Foundation.MASCallback)
  sendMessage(Lcom/ca/mas/messaging/MASMessage;Lcom/ca/mas/foundation/MASUser;Ljava/lang/String;Lcom/ca/mas/foundation/MASCallback;)V = SendMessage(Com.CA.Mas.Messaging.MASMessage, Com.CA.Mas.Foundation.MASUser, string, Com.CA.Mas.Foundation.MASCallback)
  sendMessage(Lcom/ca/mas/messaging/topic/MASTopic;Lcom/ca/mas/messaging/MASMessage;Lcom/ca/mas/foundation/MASCallback;)V = SendMessage(Com.CA.Mas.Messaging.Topic.IMASTopic, Com.CA.Mas.Messaging.MASMessage, Com.CA.Mas.Foundation.MASCallback)
  startListeningToMyMessages(Lcom/ca/mas/foundation/MASCallback;)V = StartListeningToMyMessages(Com.CA.Mas.Foundation.MASCallback)
  stopListeningToMyMessages(Lcom/ca/mas/foundation/MASCallback;)V = StopListeningToMyMessages(Com.CA.Mas.Foundation.MASCallback)
com/ca/mas/messaging/MASPayload = Com.CA.Mas.Messaging.IMASPayload
  getContentEncoding()Ljava/lang/String; = ContentEncoding
  setContentEncoding(Ljava/lang/String;)V = ContentEncoding
  getContentType()Ljava/lang/String; = ContentType
  setContentType(Ljava/lang/String;)V = ContentType
  getDisplayName()Ljava/lang/String; = DisplayName
  getSenderId()Ljava/lang/String; = SenderId
  setSenderId(Ljava/lang/String;)V = SenderId
  getSenderType()Ljava/lang/String; = SenderType
  setSenderType(Ljava/lang/String;)V = SenderType
  getSentTime()J = SentTime
  setSentTime(J)V = SentTime
  getVersion()Ljava/lang/String; = Version
  setVersion(Ljava/lang/String;)V = Version
  createJSONStringFromMASMessage(Landroid/content/Context;)Ljava/lang/String; = CreateJSONStringFromMASMessage(Android.Content.Context)
  createMASMessageFromJSONString(Ljava/lang/String;)V = CreateMASMessageFromJSONString(string)
  getPayload()[B = GetPayload()
  setPayload([B)V = SetPayload(byte[])
com/ca/mas/messaging/MessagingConsts = Com.CA.Mas.Messaging.MessagingConsts
  <init>()V = .ctor()
  AT_LEAST_ONCE = AtLeastOnce
  AT_MOST_ONCE = AtMostOnce
  DEFAULT_TEXT_PLAIN_CONTENT_TYPE = DefaultTextPlainContentType
  EXACTLY_ONCE = ExactlyOnce
  MAS_CONNECTA_BROADCAST_MESSAGE_ARRIVED = MasConnectaBroadcastMessageArrived
com/ca/mas/messaging/topic/MASMessagingSegment = Com.CA.Mas.Messaging.Topic.IMASMessagingSegment
com/ca/mas/messaging/topic/MASTopic = Com.CA.Mas.Messaging.Topic.IMASTopic
  getQos()I = Qos
sun/misc/BASE64Decoder = Sun.Misc.BASE64Decoder
  <init>()V = .ctor()
  bytesPerAtom()I = BytesPerAtom()
  bytesPerLine()I = BytesPerLine()
sun/misc/BASE64Encoder = Sun.Misc.BASE64Encoder
  <init>()V = .ctor()
  bytesPerAtom()I = BytesPerAtom()
  bytesPerLine()I = BytesPerLine()
  encodeAtom(Ljava/io/OutputStream;[BII)V = EncodeAtom(System.IO.Stream, byte[], int, int)
sun/misc/CEFormatException = Sun.Misc.CEFormatException
  <init>(Ljava/lang/String;)V = .ctor(string)
sun/misc/CEStreamExhausted = Sun.Misc.CEStreamExhausted
  <init>()V = .ctor()
sun/misc/CharacterDecoder = Sun.Misc.CharacterDecoder
  <init>()V = .ctor()
  bytesPerAtom()I = BytesPerAtom()
  bytesPerLine()I = BytesPerLine()
  decodeAtom(Ljava/io/PushbackInputStream;Ljava/io/OutputStream;I)V = DecodeAtom(Java.IO.PushbackInputStream, System.IO.Stream, int)
  decodeBuffer(Ljava/io/InputStream;)[B = DecodeBuffer(System.IO.Stream)
  decodeBuffer(Ljava/io/InputStream;Ljava/io/OutputStream;)V = DecodeBuffer(System.IO.Stream, System.IO.Stream)
  decodeBuffer(Ljava/lang/String;)[B = DecodeBuffer(string)
  decodeBufferPrefix(Ljava/io/PushbackInputStream;Ljava/io/OutputStream;)V = DecodeBufferPrefix(Java.IO.PushbackInputStream, System.IO.Stream)
  decodeBufferSuffix(Ljava/io/PushbackInputStream;Ljava/io/OutputStream;)V = DecodeBufferSuffix(Java.IO.PushbackInputStream, System.IO.Stream)
  decodeBufferToByteBuffer(Ljava/io/InputStream;)Ljava/nio/ByteBuffer; = DecodeBufferToByteBuffer(System.IO.Stream)
  decodeBufferToByteBuffer(Ljava/lang/String;)Ljava/nio/ByteBuffer; = DecodeBufferToByteBuffer(string)
  decodeLinePrefix(Ljava/io/PushbackInputStream;Ljava/io/OutputStream;)I = DecodeLinePrefix(Java.IO.PushbackInputStream, System.IO.Stream)
  decodeLineSuffix(Ljava/io/PushbackInputStream;Ljava/io/OutputStream;)V = DecodeLineSuffix(Java.IO.PushbackInputStream, System.IO.Stream)
  readFully(Ljava/io/InputStream;[BII)I = ReadFully(System.IO.Stream, byte[], int, int)
sun/misc/CharacterEncoder = Sun.Misc.CharacterEncoder
  <init>()V = .ctor()
  pStream = PStream
  bytesPerAtom()I = BytesPerAtom()
  bytesPerLine()I = BytesPerLine()
  encode([B)Ljava/lang/String; = Encode(byte[])
  encode([BLjava/io/OutputStream;)V = Encode(byte[], System.IO.Stream)
  encode(Ljava/io/InputStream;Ljava/io/OutputStream;)V = Encode(System.IO.Stream, System.IO.Stream)
  encode(Ljava/nio/ByteBuffer;)Ljava/lang/String; = Encode(Java.Nio.ByteBuffer)
  encode(Ljava/nio/ByteBuffer;Ljava/io/OutputStream;)V = Encode(Java.Nio.ByteBuffer, System.IO.Stream)
  encodeAtom(Ljava/io/OutputStream;[BII)V = EncodeAtom(System.IO.Stream, byte[], int, int)
  encodeBuffer([B)Ljava/lang/String; = EncodeBuffer(byte[])
  encodeBuffer([BLjava/io/OutputStream;)V = EncodeBuffer(byte[], System.IO.Stream)
  encodeBuffer(Ljava/io/InputStream;Ljava/io/OutputStream;)V = EncodeBuffer(System.IO.Stream, System.IO.Stream)
  encodeBuffer(Ljava/nio/ByteBuffer;)Ljava/lang/String; = EncodeBuffer(Java.Nio.ByteBuffer)
  encodeBuffer(Ljava/nio/ByteBuffer;Ljava/io/OutputStream;)V = EncodeBuffer(Java.Nio.ByteBuffer, System.IO.Stream)
  encodeBufferPrefix(Ljava/io/OutputStream;)V = EncodeBufferPrefix(System.IO.Stream)
  encodeBufferSuffix(Ljava/io/OutputStream;)V = EncodeBufferSuffix(System.IO.Stream)
  encodeLinePrefix(Ljava/io/OutputStream;I)V = EncodeLinePrefix(System.IO.Stream, int)
  encodeLineSuffix(Ljava/io/OutputStream;)V = EncodeLineSuffix(System.IO.Stream)
  readFully(Ljava/io/InputStream;[B)I = ReadFully(System.IO.Stream, byte[])
sun/misc/HexDumpEncoder = Sun.Misc.HexDumpEncoder
  <init>()V = .ctor()
  bytesPerAtom()I = BytesPerAtom()
  bytesPerLine()I = BytesPerLine()
  encodeAtom(Ljava/io/OutputStream;[BII)V = EncodeAtom(System.IO.Stream, byte[], int, int)
sun/security/ec/ECKeyFactory = Sun.Security.EC.ECKeyFactory
  <init>()V = .ctor()
  ecInternalProvider = EcInternalProvider
  INSTANCE = Instance
  engineGeneratePrivate(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey; = EngineGeneratePrivate(Java.Security.Spec.IKeySpec)
  engineGeneratePublic(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey; = EngineGeneratePublic(Java.Security.Spec.IKeySpec)
  engineGetKeySpec(Ljava/security/Key;Ljava/lang/Class;)Ljava/security/spec/KeySpec; = EngineGetKeySpec(Java.Security.IKey, Java.Lang.Class)
  engineTranslateKey(Ljava/security/Key;)Ljava/security/Key; = EngineTranslateKey(Java.Security.IKey)
  toECKey(Ljava/security/Key;)Ljava/security/interfaces/ECKey; = ToECKey(Java.Security.IKey)
sun/security/ec/ECParameters = Sun.Security.EC.ECParameters
  <init>()V = .ctor()
  decodeParameters([B)Ljava/security/spec/ECParameterSpec; = DecodeParameters(byte[])
  decodePoint([BLjava/security/spec/EllipticCurve;)Ljava/security/spec/ECPoint; = DecodePoint(byte[], Java.Security.Spec.EllipticCurve)
  encodeParameters(Ljava/security/spec/ECParameterSpec;)[B = EncodeParameters(Java.Security.Spec.ECParameterSpec)
  encodePoint(Ljava/security/spec/ECPoint;Ljava/security/spec/EllipticCurve;)[B = EncodePoint(Java.Security.Spec.ECPoint, Java.Security.Spec.EllipticCurve)
  engineGetEncoded()[B = EngineGetEncoded()
  engineGetEncoded(Ljava/lang/String;)[B = EngineGetEncoded(string)
  engineGetParameterSpec(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec; = EngineGetParameterSpec(Java.Lang.Class)
  engineInit([B)V = EngineInit(byte[])
  engineInit([BLjava/lang/String;)V = EngineInit(byte[], string)
  engineInit(Ljava/security/spec/AlgorithmParameterSpec;)V = EngineInit(Java.Security.Spec.IAlgorithmParameterSpec)
  engineToString()Ljava/lang/String; = EngineToString()
  getCurveName(Ljava/security/spec/ECParameterSpec;)Ljava/lang/String; = GetCurveName(Java.Security.Spec.ECParameterSpec)
  getNamedCurve(Ljava/security/spec/ECParameterSpec;)Lsun/security/ec/NamedCurve; = GetNamedCurve(Java.Security.Spec.ECParameterSpec)
sun/security/ec/ECPrivateKeyImpl = Sun.Security.EC.ECPrivateKeyImpl
  <init>([B)V = .ctor(byte[])
  <init>(Ljava/math/BigInteger;Ljava/security/spec/ECParameterSpec;)V = .ctor(Java.Math.BigInteger, Java.Security.Spec.ECParameterSpec)
  getParams()Ljava/security/spec/ECParameterSpec; = Params
  getS()Ljava/math/BigInteger; = GetS()
sun/security/ec/ECPublicKeyImpl = Sun.Security.EC.ECPublicKeyImpl
  <init>([B)V = .ctor(byte[])
  <init>(Ljava/security/spec/ECPoint;Ljava/security/spec/ECParameterSpec;)V = .ctor(Java.Security.Spec.ECPoint, Java.Security.Spec.ECParameterSpec)
  getParams()Ljava/security/spec/ECParameterSpec; = Params
  getEncodedPublicValue()[B = GetEncodedPublicValue()
  getW()Ljava/security/spec/ECPoint; = GetW()
  writeReplace()Ljava/lang/Object; = WriteReplace()
sun/security/ec/NamedCurve = Sun.Security.EC.NamedCurve
  getECParameterSpec(I)Ljava/security/spec/ECParameterSpec; = GetECParameterSpec(int)
  getECParameterSpec(Ljava/lang/String;)Ljava/security/spec/ECParameterSpec; = GetECParameterSpec(string)
  knownECParameterSpecs()Ljava/util/Collection; = KnownECParameterSpecs()
sun/security/pkcs/ContentInfo = Sun.Security.Pkcs.ContentInfo
  <init>([B)V = .ctor(byte[])
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  <init>(Lsun/security/util/DerInputStream;Z)V = .ctor(Sun.Security.Util.DerInputStream, bool)
  DATA_OID = DataOid
  DIGESTED_DATA_OID = DigestedDataOid
  ENCRYPTED_DATA_OID = EncryptedDataOid
  ENVELOPED_DATA_OID = EnvelopedDataOid
  NETSCAPE_CERT_SEQUENCE_OID = NetscapeCertSequenceOid
  OLD_DATA_OID = OldDataOid
  OLD_SIGNED_DATA_OID = OldSignedDataOid
  SIGNED_AND_ENVELOPED_DATA_OID = SignedAndEnvelopedDataOid
  SIGNED_DATA_OID = SignedDataOid
  TIMESTAMP_TOKEN_INFO_OID = TimestampTokenInfoOid
  getContentType()Lsun/security/util/ObjectIdentifier; = ContentType
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  getContentBytes()[B = GetContentBytes()
  getData()[B = GetData()
sun/security/pkcs/ParsingException = Sun.Security.Pkcs.ParsingException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
sun/security/pkcs/PKCS10 = Sun.Security.Pkcs.PKCS10
  <init>([B)V = .ctor(byte[])
  <init>(Ljava/security/PublicKey;)V = .ctor(Java.Security.IPublicKey)
  <init>(Ljava/security/PublicKey;Lsun/security/pkcs/PKCS10Attributes;)V = .ctor(Java.Security.IPublicKey, Sun.Security.Pkcs.PKCS10Attributes)
  getAttributes()Lsun/security/pkcs/PKCS10Attributes; = Attributes
  getSubjectName()Lsun/security/x509/X500Name; = SubjectName
  getSubjectPublicKeyInfo()Ljava/security/PublicKey; = SubjectPublicKeyInfo
  encodeAndSign(Lsun/security/x509/X500Signer;)V = EncodeAndSign(Sun.Security.X509.X500Signer)
  getEncoded()[B = GetEncoded()
  print(Ljava/io/PrintStream;)V = Print(Java.IO.PrintStream)
sun/security/pkcs/PKCS10Attribute = Sun.Security.Pkcs.PKCS10Attribute
  <init>(Lsun/security/pkcs/PKCS9Attribute;)V = .ctor(Sun.Security.Pkcs.PKCS9Attribute)
  <init>(Lsun/security/util/ObjectIdentifier;Ljava/lang/Object;)V = .ctor(Sun.Security.Util.ObjectIdentifier, Java.Lang.Object)
  attributeId = AttributeId
  attributeValue = AttributeValue
  getAttributeId()Lsun/security/util/ObjectIdentifier; = AttributeId
  getAttributeValue()Ljava/lang/Object; = AttributeValue
  derEncode(Ljava/io/OutputStream;)V = DerEncode(System.IO.Stream)
sun/security/pkcs/PKCS10Attributes = Sun.Security.Pkcs.PKCS10Attributes
  <init>()V = .ctor()
  <init>([Lsun/security/pkcs/PKCS10Attribute;)V = .ctor(Sun.Security.Pkcs.PKCS10Attribute[])
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  getAttributes()Ljava/util/Collection; = Attributes
  getElements()Ljava/util/Enumeration; = Elements
  deleteAttribute(Ljava/lang/String;)V = DeleteAttribute(string)
  derEncode(Ljava/io/OutputStream;)V = DerEncode(System.IO.Stream)
  encode(Ljava/io/OutputStream;)V = Encode(System.IO.Stream)
  getAttribute(Ljava/lang/String;)Ljava/lang/Object; = GetAttribute(string)
  setAttribute(Ljava/lang/String;Ljava/lang/Object;)V = SetAttribute(string, Java.Lang.Object)
sun/security/pkcs/PKCS8Key = Sun.Security.Pkcs.PKCS8Key
  <init>()V = .ctor()
  algid = Algid
  encodedKey = EncodedKey
  key = Key
  version = Version
  getAlgorithm()Ljava/lang/String; = Algorithm
  getAlgorithmId()Lsun/security/x509/AlgorithmId; = AlgorithmId
  getFormat()Ljava/lang/String; = Format
  decode([B)V = Decode(byte[])
  decode(Ljava/io/InputStream;)V = Decode(System.IO.Stream)
  encode()[B = Encode()
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  getEncoded()[B = GetEncoded()
  parseKeyBits()V = ParseKeyBits()
  writeReplace()Ljava/lang/Object; = WriteReplace()
sun/security/pkcs/PKCS9Attribute = Sun.Security.Pkcs.PKCS9Attribute
  <init>(Ljava/lang/String;Ljava/lang/Object;)V = .ctor(string, Java.Lang.Object)
  <init>(Lsun/security/util/ObjectIdentifier;Ljava/lang/Object;)V = .ctor(Sun.Security.Util.ObjectIdentifier, Java.Lang.Object)
  CHALLENGE_PASSWORD_OID = ChallengePasswordOid
  CHALLENGE_PASSWORD_STR = ChallengePasswordStr
  CONTENT_TYPE_OID = ContentTypeOid
  CONTENT_TYPE_STR = ContentTypeStr
  COUNTERSIGNATURE_OID = CountersignatureOid
  COUNTERSIGNATURE_STR = CountersignatureStr
  EMAIL_ADDRESS_OID = EmailAddressOid
  EMAIL_ADDRESS_STR = EmailAddressStr
  EXTENDED_CERTIFICATE_ATTRIBUTES_OID = ExtendedCertificateAttributesOid
  EXTENDED_CERTIFICATE_ATTRIBUTES_STR = ExtendedCertificateAttributesStr
  EXTENSION_REQUEST_OID = ExtensionRequestOid
  EXTENSION_REQUEST_STR = ExtensionRequestStr
  ISSUER_SERIALNUMBER_OID = IssuerSerialnumberOid
  ISSUER_SERIALNUMBER_STR = IssuerSerialnumberStr
  MESSAGE_DIGEST_OID = MessageDigestOid
  MESSAGE_DIGEST_STR = MessageDigestStr
  SIGNATURE_TIMESTAMP_TOKEN_OID = SignatureTimestampTokenOid
  SIGNATURE_TIMESTAMP_TOKEN_STR = SignatureTimestampTokenStr
  SIGNING_CERTIFICATE_OID = SigningCertificateOid
  SIGNING_CERTIFICATE_STR = SigningCertificateStr
  SIGNING_TIME_OID = SigningTimeOid
  SIGNING_TIME_STR = SigningTimeStr
  SMIME_CAPABILITY_OID = SmimeCapabilityOid
  SMIME_CAPABILITY_STR = SmimeCapabilityStr
  UNSTRUCTURED_ADDRESS_OID = UnstructuredAddressOid
  UNSTRUCTURED_ADDRESS_STR = UnstructuredAddressStr
  UNSTRUCTURED_NAME_OID = UnstructuredNameOid
  UNSTRUCTURED_NAME_STR = UnstructuredNameStr
  isSingleValued()Z = IsSingleValued
  getName()Ljava/lang/String; = Name
  getOID()Lsun/security/util/ObjectIdentifier; = OID
  getValue()Ljava/lang/Object; = Value
  derEncode(Ljava/io/OutputStream;)V = DerEncode(System.IO.Stream)
  getName(Lsun/security/util/ObjectIdentifier;)Ljava/lang/String; = GetName(Sun.Security.Util.ObjectIdentifier)
  getOID(Ljava/lang/String;)Lsun/security/util/ObjectIdentifier; = GetOID(string)
sun/security/pkcs/PKCS9Attributes = Sun.Security.Pkcs.PKCS9Attributes
  <init>([Lsun/security/pkcs/PKCS9Attribute;)V = .ctor(Sun.Security.Pkcs.PKCS9Attribute[])
  <init>([Lsun/security/util/ObjectIdentifier;Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.ObjectIdentifier[], Sun.Security.Util.DerInputStream)
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  <init>(Lsun/security/util/DerInputStream;Z)V = .ctor(Sun.Security.Util.DerInputStream, bool)
  encode(BLjava/io/OutputStream;)V = Encode(sbyte, System.IO.Stream)
  getAttribute(Ljava/lang/String;)Lsun/security/pkcs/PKCS9Attribute; = GetAttribute(string)
  getAttribute(Lsun/security/util/ObjectIdentifier;)Lsun/security/pkcs/PKCS9Attribute; = GetAttribute(Sun.Security.Util.ObjectIdentifier)
  getAttributes()[Lsun/security/pkcs/PKCS9Attribute; = GetAttributes()
  getAttributeValue(Ljava/lang/String;)Ljava/lang/Object; = GetAttributeValue(string)
  getAttributeValue(Lsun/security/util/ObjectIdentifier;)Ljava/lang/Object; = GetAttributeValue(Sun.Security.Util.ObjectIdentifier)
  getDerEncoding()[B = GetDerEncoding()
sun/security/pkcs/SignerInfo = Sun.Security.Pkcs.SignerInfo
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  <init>(Lsun/security/util/DerInputStream;Z)V = .ctor(Sun.Security.Util.DerInputStream, bool)
  <init>(Lsun/security/x509/X500Name;Ljava/math/BigInteger;Lsun/security/x509/AlgorithmId;Lsun/security/pkcs/PKCS9Attributes;Lsun/security/x509/AlgorithmId;[BLsun/security/pkcs/PKCS9Attributes;)V = .ctor(Sun.Security.X509.X500Name, Java.Math.BigInteger, Sun.Security.X509.AlgorithmId, Sun.Security.Pkcs.PKCS9Attributes, Sun.Security.X509.AlgorithmId, byte[], Sun.Security.Pkcs.PKCS9Attributes)
  <init>(Lsun/security/x509/X500Name;Ljava/math/BigInteger;Lsun/security/x509/AlgorithmId;Lsun/security/x509/AlgorithmId;[B)V = .ctor(Sun.Security.X509.X500Name, Java.Math.BigInteger, Sun.Security.X509.AlgorithmId, Sun.Security.X509.AlgorithmId, byte[])
  getAuthenticatedAttributes()Lsun/security/pkcs/PKCS9Attributes; = AuthenticatedAttributes
  getCertificateSerialNumber()Ljava/math/BigInteger; = CertificateSerialNumber
  getDigestAlgorithmId()Lsun/security/x509/AlgorithmId; = DigestAlgorithmId
  getDigestEncryptionAlgorithmId()Lsun/security/x509/AlgorithmId; = DigestEncryptionAlgorithmId
  getIssuerName()Lsun/security/x509/X500Name; = IssuerName
  getUnauthenticatedAttributes()Lsun/security/pkcs/PKCS9Attributes; = UnauthenticatedAttributes
  getVersion()Ljava/math/BigInteger; = Version
  derEncode(Ljava/io/OutputStream;)V = DerEncode(System.IO.Stream)
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  getEncryptedDigest()[B = GetEncryptedDigest()
sun/security/pkcs/SigningCertificateInfo = Sun.Security.Pkcs.SigningCertificateInfo
  <init>([B)V = .ctor(byte[])
  parse([B)V = Parse(byte[])
sun/security/provider/certpath/X509CertificatePair = Sun.Security.Provider.Certpath.X509CertificatePair
  <init>()V = .ctor()
  <init>(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)V = .ctor(Java.Security.Cert.X509Certificate, Java.Security.Cert.X509Certificate)
  getForward()Ljava/security/cert/X509Certificate; = Forward
  setForward(Ljava/security/cert/X509Certificate;)V = Forward
  getReverse()Ljava/security/cert/X509Certificate; = Reverse
  setReverse(Ljava/security/cert/X509Certificate;)V = Reverse
  clearCache()V = ClearCache()
  generateCertificatePair([B)Lsun/security/provider/certpath/X509CertificatePair; = GenerateCertificatePair(byte[])
  getEncoded()[B = GetEncoded()
sun/security/provider/X509Factory = Sun.Security.Provider.X509Factory
  <init>()V = .ctor()
  BEGIN_CERT = BeginCert
  END_CERT = EndCert
  engineGenerateCertificate(Ljava/io/InputStream;)Ljava/security/cert/Certificate; = EngineGenerateCertificate(System.IO.Stream)
  engineGenerateCertificates(Ljava/io/InputStream;)Ljava/util/Collection; = EngineGenerateCertificates(System.IO.Stream)
  engineGenerateCertPath(Ljava/util/List;)Ljava/security/cert/CertPath; = EngineGenerateCertPath(System.Collections.Generic.IList<Java.Security.Cert.Certificate>)
  engineGenerateCRL(Ljava/io/InputStream;)Ljava/security/cert/CRL; = EngineGenerateCRL(System.IO.Stream)
  engineGenerateCRLs(Ljava/io/InputStream;)Ljava/util/Collection; = EngineGenerateCRLs(System.IO.Stream)
  intern(Ljava/security/cert/X509Certificate;)Lsun/security/x509/X509CertImpl; = Intern(Java.Security.Cert.X509Certificate)
  intern(Ljava/security/cert/X509CRL;)Lsun/security/x509/X509CRLImpl; = Intern(Java.Security.Cert.X509CRL)
sun/security/util/BitArray = Sun.Security.Util.BitArray
  <init>([Z)V = .ctor(bool[])
  <init>(I)V = .ctor(int)
  <init>(I[B)V = .ctor(int, byte[])
  clone()Ljava/lang/Object; = Clone()
  get(I)Z = Get(int)
  length()I = Length()
  set(IZ)V = Set(int, bool)
  toBooleanArray()[Z = ToBooleanArray()
  toByteArray()[B = ToByteArray()
  truncate()Lsun/security/util/BitArray; = Truncate()
sun/security/util/Cache = Sun.Security.Util.Cache
  <init>()V = .ctor()
  clear()V = Clear()
  get(Ljava/lang/Object;)Ljava/lang/Object; = Get(Java.Lang.Object)
  newHardMemoryCache(I)Lsun/security/util/Cache; = NewHardMemoryCache(int)
  newHardMemoryCache(II)Lsun/security/util/Cache; = NewHardMemoryCache(int, int)
  newNullCache()Lsun/security/util/Cache; = NewNullCache()
  newSoftMemoryCache(I)Lsun/security/util/Cache; = NewSoftMemoryCache(int)
  newSoftMemoryCache(II)Lsun/security/util/Cache; = NewSoftMemoryCache(int, int)
  put(Ljava/lang/Object;Ljava/lang/Object;)V = Put(Java.Lang.Object, Java.Lang.Object)
  remove(Ljava/lang/Object;)V = Remove(Java.Lang.Object)
  size()I = Size()
sun/security/util/Debug = Sun.Security.Util.Debug
  <init>()V = .ctor()
  getInstance(Ljava/lang/String;)Lsun/security/util/Debug; = GetInstance(string)
  getInstance(Ljava/lang/String;Ljava/lang/String;)Lsun/security/util/Debug; = GetInstance(string, string)
  Help()V = Help()
  isOn(Ljava/lang/String;)Z = IsOn(string)
  println()V = Println()
  println(Ljava/lang/String;)V = Println(string)
  println(Ljava/lang/String;Ljava/lang/String;)V = Println(string, string)
  toHexString(Ljava/math/BigInteger;)Ljava/lang/String; = ToHexString(Java.Math.BigInteger)
  toString([B)Ljava/lang/String; = ToString(byte[])
sun/security/util/DerEncoder = Sun.Security.Util.IDerEncoder
  derEncode(Ljava/io/OutputStream;)V = DerEncode(System.IO.Stream)
sun/security/util/DerInputStream = Sun.Security.Util.DerInputStream
  <init>([B)V = .ctor(byte[])
  <init>([BII)V = .ctor(byte[], int, int)
  tag = Tag
  getBigInteger()Ljava/math/BigInteger; = BigInteger
  getBMPString()Ljava/lang/String; = BMPString
  getEnumerated()I = Enumerated
  getGeneralizedTime()Ljava/util/Date; = GeneralizedTime
  getGeneralString()Ljava/lang/String; = GeneralString
  getIA5String()Ljava/lang/String; = IA5String
  getInteger()I = Integer
  getOID()Lsun/security/util/ObjectIdentifier; = OID
  getPositiveBigInteger()Ljava/math/BigInteger; = PositiveBigInteger
  getPrintableString()Ljava/lang/String; = PrintableString
  getT61String()Ljava/lang/String; = T61String
  getUnalignedBitString()Lsun/security/util/BitArray; = UnalignedBitString
  getUTCTime()Ljava/util/Date; = UTCTime
  getUTF8String()Ljava/lang/String; = UTF8String
  available()I = Available()
  getBitString()[B = GetBitString()
  getBytes([B)V = GetBytes(byte[])
  getNull()V = GetNull()
  getOctetString()[B = GetOctetString()
  mark(I)V = Mark(int)
  peekByte()I = PeekByte()
  reset()V = Reset()
  subStream(IZ)Lsun/security/util/DerInputStream; = SubStream(int, bool)
  toByteArray()[B = ToByteArray()
sun/security/util/DerOutputStream = Sun.Security.Util.DerOutputStream
  <init>()V = .ctor()
  <init>(I)V = .ctor(int)
  derEncode(Ljava/io/OutputStream;)V = DerEncode(System.IO.Stream)
  putBitString([B)V = PutBitString(byte[])
  putBMPString(Ljava/lang/String;)V = PutBMPString(string)
  putBoolean(Z)V = PutBoolean(bool)
  putEnumerated(I)V = PutEnumerated(int)
  putGeneralizedTime(Ljava/util/Date;)V = PutGeneralizedTime(Java.Util.Date)
  putGeneralString(Ljava/lang/String;)V = PutGeneralString(string)
  putIA5String(Ljava/lang/String;)V = PutIA5String(string)
  putInteger(I)V = PutInteger(int)
  putInteger(Ljava/lang/Integer;)V = PutInteger(Java.Lang.Integer)
  putInteger(Ljava/math/BigInteger;)V = PutInteger(Java.Math.BigInteger)
  putLength(I)V = PutLength(int)
  putNull()V = PutNull()
  putOctetString([B)V = PutOctetString(byte[])
  putOID(Lsun/security/util/ObjectIdentifier;)V = PutOID(Sun.Security.Util.ObjectIdentifier)
  putOrderedSet(B[Lsun/security/util/DerEncoder;)V = PutOrderedSet(sbyte, Sun.Security.Util.IDerEncoder[])
  putOrderedSetOf(B[Lsun/security/util/DerEncoder;)V = PutOrderedSetOf(sbyte, Sun.Security.Util.IDerEncoder[])
  putPrintableString(Ljava/lang/String;)V = PutPrintableString(string)
  putT61String(Ljava/lang/String;)V = PutT61String(string)
  putTag(BZB)V = PutTag(sbyte, bool, sbyte)
  putTruncatedUnalignedBitString(Lsun/security/util/BitArray;)V = PutTruncatedUnalignedBitString(Sun.Security.Util.BitArray)
  putUnalignedBitString(Lsun/security/util/BitArray;)V = PutUnalignedBitString(Sun.Security.Util.BitArray)
  putUTCTime(Ljava/util/Date;)V = PutUTCTime(Java.Util.Date)
  putUTF8String(Ljava/lang/String;)V = PutUTF8String(string)
  write(B[B)V = Write(sbyte, byte[])
  write(BLsun/security/util/DerOutputStream;)V = Write(sbyte, Sun.Security.Util.DerOutputStream)
  writeImplicit(BLsun/security/util/DerOutputStream;)V = WriteImplicit(sbyte, Sun.Security.Util.DerOutputStream)
sun/security/util/ObjectIdentifier = Sun.Security.Util.ObjectIdentifier
  <init>([I)V = .ctor(int[])
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  equals(Lsun/security/util/ObjectIdentifier;)Z = Equals(Sun.Security.Util.ObjectIdentifier)
  newInternal([I)Lsun/security/util/ObjectIdentifier; = NewInternal(int[])
  precedes(Lsun/security/util/ObjectIdentifier;)Z = Precedes(Sun.Security.Util.ObjectIdentifier)
sun/security/x509/AccessDescription = Sun.Security.X509.AccessDescription
  Ad_CAISSUERS_Id = AdCAISSUERSId
  Ad_CAREPOSITORY_Id = AdCAREPOSITORYId
  Ad_OCSP_Id = AdOCSPId
  Ad_TIMESTAMPING_Id = AdTIMESTAMPINGId
  getAccessLocation()Lsun/security/x509/GeneralName; = AccessLocation
  getAccessMethod()Lsun/security/util/ObjectIdentifier; = AccessMethod
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
sun/security/x509/AlgorithmId = Sun.Security.X509.AlgorithmId
  <init>()V = .ctor()
  <init>(Lsun/security/util/ObjectIdentifier;)V = .ctor(Sun.Security.Util.ObjectIdentifier)
  <init>(Lsun/security/util/ObjectIdentifier;Ljava/security/AlgorithmParameters;)V = .ctor(Sun.Security.Util.ObjectIdentifier, Java.Security.AlgorithmParameters)
  DH_oid = DHOid
  DH_PKIX_oid = DHPKIXOid
  DSA_oid = DSAOid
  DSA_OIW_oid = DSAOIWOid
  EC_oid = ECOid
  MD2_oid = MD2Oid
  md2WithRSAEncryption_oid = Md2WithRSAEncryptionOid
  MD5_oid = MD5Oid
  md5WithRSAEncryption_oid = Md5WithRSAEncryptionOid
  pbeWithMD5AndDES_oid = PbeWithMD5AndDESOid
  pbeWithMD5AndRC2_oid = PbeWithMD5AndRC2Oid
  pbeWithSHA1AndDESede_oid = PbeWithSHA1AndDESedeOid
  pbeWithSHA1AndDES_oid = PbeWithSHA1AndDESOid
  pbeWithSHA1AndRC2_40_oid = PbeWithSHA1AndRC240Oid
  pbeWithSHA1AndRC2_oid = PbeWithSHA1AndRC2Oid
  RSAEncryption_oid = RSAEncryptionOid
  RSA_oid = RSAOid
  sha1WithDSA_oid = Sha1WithDSAOid
  sha1WithDSA_OIW_oid = Sha1WithDSAOIWOid
  sha1WithECDSA_oid = Sha1WithECDSAOid
  sha1WithRSAEncryption_oid = Sha1WithRSAEncryptionOid
  sha1WithRSAEncryption_OIW_oid = Sha1WithRSAEncryptionOIWOid
  sha224WithECDSA_oid = Sha224WithECDSAOid
  SHA256_oid = SHA256Oid
  sha256WithECDSA_oid = Sha256WithECDSAOid
  sha256WithRSAEncryption_oid = Sha256WithRSAEncryptionOid
  SHA384_oid = SHA384Oid
  sha384WithECDSA_oid = Sha384WithECDSAOid
  sha384WithRSAEncryption_oid = Sha384WithRSAEncryptionOid
  SHA512_oid = SHA512Oid
  sha512WithECDSA_oid = Sha512WithECDSAOid
  sha512WithRSAEncryption_oid = Sha512WithRSAEncryptionOid
  SHA_oid = SHAOid
  shaWithDSA_OIW_oid = ShaWithDSAOIWOid
  specifiedWithECDSA_oid = SpecifiedWithECDSAOid
  getName()Ljava/lang/String; = Name
  getOID()Lsun/security/util/ObjectIdentifier; = OID
  getParameters()Ljava/security/AlgorithmParameters; = Parameters
  decodeParams()V = DecodeParams()
  derEncode(Ljava/io/OutputStream;)V = DerEncode(System.IO.Stream)
  encode()[B = Encode()
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  equals(Lsun/security/util/ObjectIdentifier;)Z = Equals(Sun.Security.Util.ObjectIdentifier)
  equals(Lsun/security/x509/AlgorithmId;)Z = Equals(Sun.Security.X509.AlgorithmId)
  get(Ljava/lang/String;)Lsun/security/x509/AlgorithmId; = Get(string)
  get(Ljava/security/AlgorithmParameters;)Lsun/security/x509/AlgorithmId; = Get(Java.Security.AlgorithmParameters)
  getAlgorithmId(Ljava/lang/String;)Lsun/security/x509/AlgorithmId; = GetAlgorithmId(string)
  getEncodedParams()[B = GetEncodedParams()
  paramsToString()Ljava/lang/String; = ParamsToString()
sun/security/x509/AttributeNameEnumeration = Sun.Security.X509.AttributeNameEnumeration
  <init>()V = .ctor()
sun/security/x509/AVA = Sun.Security.X509.AVA
  getObjectIdentifier()Lsun/security/util/ObjectIdentifier; = ObjectIdentifier
  getValueString()Ljava/lang/String; = ValueString
  derEncode(Ljava/io/OutputStream;)V = DerEncode(System.IO.Stream)
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  toRFC1779String()Ljava/lang/String; = ToRFC1779String()
  toRFC1779String(Ljava/util/Map;)Ljava/lang/String; = ToRFC1779String(System.Collections.Generic.IDictionary<string, string>)
  toRFC2253CanonicalString()Ljava/lang/String; = ToRFC2253CanonicalString()
  toRFC2253String()Ljava/lang/String; = ToRFC2253String()
  toRFC2253String(Ljava/util/Map;)Ljava/lang/String; = ToRFC2253String(System.Collections.Generic.IDictionary<string, string>)
sun/security/x509/CertAttrSet = Sun.Security.X509.ICertAttrSet
  getElements()Ljava/util/Enumeration; = Elements
  getName()Ljava/lang/String; = Name
  delete(Ljava/lang/String;)V = Delete(string)
  encode(Ljava/io/OutputStream;)V = Encode(System.IO.Stream)
  get(Ljava/lang/String;)Ljava/lang/Object; = Get(string)
  set(Ljava/lang/String;Ljava/lang/Object;)V = Set(string, Java.Lang.Object)
  toString()Ljava/lang/String; = ToString()
sun/security/x509/CertificateAlgorithmId = Sun.Security.X509.CertificateAlgorithmId
  <init>(Ljava/io/InputStream;)V = .ctor(System.IO.Stream)
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  <init>(Lsun/security/x509/AlgorithmId;)V = .ctor(Sun.Security.X509.AlgorithmId)
  ALGORITHM = Algorithm
  IDENT = Ident
  NAME = Name
  getElements()Ljava/util/Enumeration; = Elements
  getName()Ljava/lang/String; = Name
  delete(Ljava/lang/String;)V = Delete(string)
  encode(Ljava/io/OutputStream;)V = Encode(System.IO.Stream)
  get(Ljava/lang/String;)Ljava/lang/Object; = Get(string)
  set(Ljava/lang/String;Ljava/lang/Object;)V = Set(string, Java.Lang.Object)
sun/security/x509/CertificateIssuerName = Sun.Security.X509.CertificateIssuerName
  <init>(Ljava/io/InputStream;)V = .ctor(System.IO.Stream)
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  <init>(Lsun/security/x509/X500Name;)V = .ctor(Sun.Security.X509.X500Name)
  DN_NAME = DnName
  DN_PRINCIPAL = DnPrincipal
  IDENT = Ident
  NAME = Name
  getElements()Ljava/util/Enumeration; = Elements
  getName()Ljava/lang/String; = Name
  delete(Ljava/lang/String;)V = Delete(string)
  encode(Ljava/io/OutputStream;)V = Encode(System.IO.Stream)
  get(Ljava/lang/String;)Ljava/lang/Object; = Get(string)
  set(Ljava/lang/String;Ljava/lang/Object;)V = Set(string, Java.Lang.Object)
sun/security/x509/CertificateIssuerUniqueIdentity = Sun.Security.X509.CertificateIssuerUniqueIdentity
  <init>(Ljava/io/InputStream;)V = .ctor(System.IO.Stream)
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  <init>(Lsun/security/x509/UniqueIdentity;)V = .ctor(Sun.Security.X509.UniqueIdentity)
  ID = Id
  IDENT = Ident
  NAME = Name
  getElements()Ljava/util/Enumeration; = Elements
  getName()Ljava/lang/String; = Name
  delete(Ljava/lang/String;)V = Delete(string)
  encode(Ljava/io/OutputStream;)V = Encode(System.IO.Stream)
  get(Ljava/lang/String;)Ljava/lang/Object; = Get(string)
  set(Ljava/lang/String;Ljava/lang/Object;)V = Set(string, Java.Lang.Object)
sun/security/x509/CertificatePolicyId = Sun.Security.X509.CertificatePolicyId
  <init>(Lsun/security/util/ObjectIdentifier;)V = .ctor(Sun.Security.Util.ObjectIdentifier)
  getIdentifier()Lsun/security/util/ObjectIdentifier; = Identifier
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
sun/security/x509/CertificatePolicyMap = Sun.Security.X509.CertificatePolicyMap
  <init>(Lsun/security/x509/CertificatePolicyId;Lsun/security/x509/CertificatePolicyId;)V = .ctor(Sun.Security.X509.CertificatePolicyId, Sun.Security.X509.CertificatePolicyId)
  getIssuerIdentifier()Lsun/security/x509/CertificatePolicyId; = IssuerIdentifier
  getSubjectIdentifier()Lsun/security/x509/CertificatePolicyId; = SubjectIdentifier
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
sun/security/x509/CertificateSerialNumber = Sun.Security.X509.CertificateSerialNumber
  <init>(I)V = .ctor(int)
  <init>(Ljava/io/InputStream;)V = .ctor(System.IO.Stream)
  <init>(Ljava/math/BigInteger;)V = .ctor(Java.Math.BigInteger)
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  IDENT = Ident
  NAME = Name
  NUMBER = Number
  getElements()Ljava/util/Enumeration; = Elements
  getName()Ljava/lang/String; = Name
  delete(Ljava/lang/String;)V = Delete(string)
  encode(Ljava/io/OutputStream;)V = Encode(System.IO.Stream)
  get(Ljava/lang/String;)Ljava/lang/Object; = Get(string)
  set(Ljava/lang/String;Ljava/lang/Object;)V = Set(string, Java.Lang.Object)
sun/security/x509/CertificateSubjectName = Sun.Security.X509.CertificateSubjectName
  <init>(Ljava/io/InputStream;)V = .ctor(System.IO.Stream)
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  <init>(Lsun/security/x509/X500Name;)V = .ctor(Sun.Security.X509.X500Name)
  DN_NAME = DnName
  DN_PRINCIPAL = DnPrincipal
  IDENT = Ident
  NAME = Name
  getElements()Ljava/util/Enumeration; = Elements
  getName()Ljava/lang/String; = Name
  delete(Ljava/lang/String;)V = Delete(string)
  encode(Ljava/io/OutputStream;)V = Encode(System.IO.Stream)
  get(Ljava/lang/String;)Ljava/lang/Object; = Get(string)
  set(Ljava/lang/String;Ljava/lang/Object;)V = Set(string, Java.Lang.Object)
sun/security/x509/CertificateSubjectUniqueIdentity = Sun.Security.X509.CertificateSubjectUniqueIdentity
  <init>(Ljava/io/InputStream;)V = .ctor(System.IO.Stream)
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  <init>(Lsun/security/x509/UniqueIdentity;)V = .ctor(Sun.Security.X509.UniqueIdentity)
  ID = Id
  IDENT = Ident
  NAME = Name
  getElements()Ljava/util/Enumeration; = Elements
  getName()Ljava/lang/String; = Name
  delete(Ljava/lang/String;)V = Delete(string)
  encode(Ljava/io/OutputStream;)V = Encode(System.IO.Stream)
  get(Ljava/lang/String;)Ljava/lang/Object; = Get(string)
  set(Ljava/lang/String;Ljava/lang/Object;)V = Set(string, Java.Lang.Object)
sun/security/x509/CertificateValidity = Sun.Security.X509.CertificateValidity
  <init>()V = .ctor()
  <init>(Ljava/util/Date;Ljava/util/Date;)V = .ctor(Java.Util.Date, Java.Util.Date)
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  IDENT = Ident
  NAME = Name
  NOT_AFTER = NotAfter
  NOT_BEFORE = NotBefore
  getElements()Ljava/util/Enumeration; = Elements
  getName()Ljava/lang/String; = Name
  delete(Ljava/lang/String;)V = Delete(string)
  encode(Ljava/io/OutputStream;)V = Encode(System.IO.Stream)
  get(Ljava/lang/String;)Ljava/lang/Object; = Get(string)
  set(Ljava/lang/String;Ljava/lang/Object;)V = Set(string, Java.Lang.Object)
  valid()V = Valid()
  valid(Ljava/util/Date;)V = Valid(Java.Util.Date)
sun/security/x509/CertificateVersion = Sun.Security.X509.CertificateVersion
  <init>()V = .ctor()
  <init>(I)V = .ctor(int)
  <init>(Ljava/io/InputStream;)V = .ctor(System.IO.Stream)
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  IDENT = Ident
  NAME = Name
  V1 = V1
  V2 = V2
  V3 = V3
  VERSION = Version
  getElements()Ljava/util/Enumeration; = Elements
  getName()Ljava/lang/String; = Name
  compare(I)I = Compare(int)
  delete(Ljava/lang/String;)V = Delete(string)
  encode(Ljava/io/OutputStream;)V = Encode(System.IO.Stream)
  get(Ljava/lang/String;)Ljava/lang/Object; = Get(string)
  set(Ljava/lang/String;Ljava/lang/Object;)V = Set(string, Java.Lang.Object)
sun/security/x509/CertificateX509Key = Sun.Security.X509.CertificateX509Key
  <init>(Ljava/io/InputStream;)V = .ctor(System.IO.Stream)
  <init>(Ljava/security/PublicKey;)V = .ctor(Java.Security.IPublicKey)
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  IDENT = Ident
  KEY = Key
  NAME = Name
  getElements()Ljava/util/Enumeration; = Elements
  getName()Ljava/lang/String; = Name
  delete(Ljava/lang/String;)V = Delete(string)
  encode(Ljava/io/OutputStream;)V = Encode(System.IO.Stream)
  get(Ljava/lang/String;)Ljava/lang/Object; = Get(string)
  set(Ljava/lang/String;Ljava/lang/Object;)V = Set(string, Java.Lang.Object)
sun/security/x509/CRLExtensions = Sun.Security.X509.CRLExtensions
  <init>()V = .ctor()
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  hasUnsupportedCriticalExtension()Z = HasUnsupportedCriticalExtension
  delete(Ljava/lang/String;)V = Delete(string)
  encode(Ljava/io/OutputStream;Z)V = Encode(System.IO.Stream, bool)
  set(Ljava/lang/String;Ljava/lang/Object;)V = Set(string, Java.Lang.Object)
sun/security/x509/DistributionPoint = Sun.Security.X509.DistributionPoint
  <init>(Lsun/security/x509/GeneralNames;[ZLsun/security/x509/GeneralNames;)V = .ctor(Sun.Security.X509.GeneralNames, bool[], Sun.Security.X509.GeneralNames)
  <init>(Lsun/security/x509/RDN;[ZLsun/security/x509/GeneralNames;)V = .ctor(Sun.Security.X509.RDN, bool[], Sun.Security.X509.GeneralNames)
  AA_COMPROMISE = AaCompromise
  AFFILIATION_CHANGED = AffiliationChanged
  CA_COMPROMISE = CaCompromise
  CERTIFICATE_HOLD = CertificateHold
  CESSATION_OF_OPERATION = CessationOfOperation
  KEY_COMPROMISE = KeyCompromise
  PRIVILEGE_WITHDRAWN = PrivilegeWithdrawn
  SUPERSEDED = Superseded
  getCRLIssuer()Lsun/security/x509/GeneralNames; = CRLIssuer
  getFullName()Lsun/security/x509/GeneralNames; = FullName
  getRelativeName()Lsun/security/x509/RDN; = RelativeName
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  getReasonFlags()[Z = GetReasonFlags()
sun/security/x509/DistributionPointName = Sun.Security.X509.DistributionPointName
  <init>(Lsun/security/x509/GeneralNames;)V = .ctor(Sun.Security.X509.GeneralNames)
  <init>(Lsun/security/x509/RDN;)V = .ctor(Sun.Security.X509.RDN)
  getFullName()Lsun/security/x509/GeneralNames; = FullName
  getRelativeName()Lsun/security/x509/RDN; = RelativeName
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
sun/security/x509/DNSName = Sun.Security.X509.DNSName
  <init>(Ljava/lang/String;)V = .ctor(string)
  getName()Ljava/lang/String; = Name
  getType()I = Type
  constrains(Lsun/security/x509/GeneralNameInterface;)I = Constrains(Sun.Security.X509.IGeneralNameInterface)
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  subtreeDepth()I = SubtreeDepth()
sun/security/x509/EDIPartyName = Sun.Security.X509.EDIPartyName
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  getAssignerName()Ljava/lang/String; = AssignerName
  getPartyName()Ljava/lang/String; = PartyName
  getType()I = Type
  constrains(Lsun/security/x509/GeneralNameInterface;)I = Constrains(Sun.Security.X509.IGeneralNameInterface)
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  subtreeDepth()I = SubtreeDepth()
sun/security/x509/GeneralName = Sun.Security.X509.GeneralName
  <init>(Lsun/security/x509/GeneralNameInterface;)V = .ctor(Sun.Security.X509.IGeneralNameInterface)
  getName()Lsun/security/x509/GeneralNameInterface; = Name
  getType()I = Type
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
sun/security/x509/GeneralNameInterface = Sun.Security.X509.IGeneralNameInterface
  NAME_ANY = NameAny
  NAME_DIFF_TYPE = NameDiffType
  NAME_DIRECTORY = NameDirectory
  NAME_DNS = NameDns
  NAME_EDI = NameEdi
  NAME_IP = NameIp
  NAME_MATCH = NameMatch
  NAME_NARROWS = NameNarrows
  NAME_OID = NameOid
  NAME_RFC822 = NameRfc822
  NAME_SAME_TYPE = NameSameType
  NAME_URI = NameUri
  NAME_WIDENS = NameWidens
  NAME_X400 = NameX400
  getType()I = Type
  constrains(Lsun/security/x509/GeneralNameInterface;)I = Constrains(Sun.Security.X509.IGeneralNameInterface)
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  subtreeDepth()I = SubtreeDepth()
sun/security/x509/GeneralNames = Sun.Security.X509.GeneralNames
  <init>()V = .ctor()
  isEmpty()Z = IsEmpty
  add(Lsun/security/x509/GeneralName;)Lsun/security/x509/GeneralNames; = Add(Sun.Security.X509.GeneralName)
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  get(I)Lsun/security/x509/GeneralName; = Get(int)
  iterator()Ljava/util/Iterator; = Iterator()
  names()Ljava/util/List; = Names()
  size()I = Size()
sun/security/x509/GeneralSubtree = Sun.Security.X509.GeneralSubtree
  <init>(Lsun/security/x509/GeneralName;II)V = .ctor(Sun.Security.X509.GeneralName, int, int)
  getMaximum()I = Maximum
  getMinimum()I = Minimum
  getName()Lsun/security/x509/GeneralName; = Name
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
sun/security/x509/GeneralSubtrees = Sun.Security.X509.GeneralSubtrees
  <init>()V = .ctor()
  add(Lsun/security/x509/GeneralSubtree;)V = Add(Sun.Security.X509.GeneralSubtree)
  clone()Ljava/lang/Object; = Clone()
  contains(Lsun/security/x509/GeneralSubtree;)Z = Contains(Sun.Security.X509.GeneralSubtree)
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  get(I)Lsun/security/x509/GeneralSubtree; = Get(int)
  intersect(Lsun/security/x509/GeneralSubtrees;)Lsun/security/x509/GeneralSubtrees; = Intersect(Sun.Security.X509.GeneralSubtrees)
  iterator()Ljava/util/Iterator; = Iterator()
  reduce(Lsun/security/x509/GeneralSubtrees;)V = Reduce(Sun.Security.X509.GeneralSubtrees)
  remove(I)V = Remove(int)
  size()I = Size()
  trees()Ljava/util/List; = Trees()
  union(Lsun/security/x509/GeneralSubtrees;)V = Union(Sun.Security.X509.GeneralSubtrees)
sun/security/x509/IPAddressName = Sun.Security.X509.IPAddressName
  <init>([B)V = .ctor(byte[])
  <init>(Ljava/lang/String;)V = .ctor(string)
  getName()Ljava/lang/String; = Name
  getType()I = Type
  constrains(Lsun/security/x509/GeneralNameInterface;)I = Constrains(Sun.Security.X509.IGeneralNameInterface)
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  getBytes()[B = GetBytes()
  subtreeDepth()I = SubtreeDepth()
sun/security/x509/KeyIdentifier = Sun.Security.X509.KeyIdentifier
  <init>([B)V = .ctor(byte[])
  <init>(Ljava/security/PublicKey;)V = .ctor(Java.Security.IPublicKey)
  getIdentifier()[B = GetIdentifier()
sun/security/x509/OIDMap = Sun.Security.X509.OIDMap
  addAttribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)V = AddAttribute(string, string, Java.Lang.Class)
  getClass(Ljava/lang/String;)Ljava/lang/Class; = GetClass(string)
  getClass(Lsun/security/util/ObjectIdentifier;)Ljava/lang/Class; = GetClass(Sun.Security.Util.ObjectIdentifier)
  getName(Lsun/security/util/ObjectIdentifier;)Ljava/lang/String; = GetName(Sun.Security.Util.ObjectIdentifier)
  getOID(Ljava/lang/String;)Lsun/security/util/ObjectIdentifier; = GetOID(string)
sun/security/x509/OIDName = Sun.Security.X509.OIDName
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Lsun/security/util/ObjectIdentifier;)V = .ctor(Sun.Security.Util.ObjectIdentifier)
  getOID()Lsun/security/util/ObjectIdentifier; = OID
  getType()I = Type
  constrains(Lsun/security/x509/GeneralNameInterface;)I = Constrains(Sun.Security.X509.IGeneralNameInterface)
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  subtreeDepth()I = SubtreeDepth()
sun/security/x509/OtherName = Sun.Security.X509.OtherName
  <init>(Lsun/security/util/ObjectIdentifier;[B)V = .ctor(Sun.Security.Util.ObjectIdentifier, byte[])
  getOID()Lsun/security/util/ObjectIdentifier; = OID
  getType()I = Type
  constrains(Lsun/security/x509/GeneralNameInterface;)I = Constrains(Sun.Security.X509.IGeneralNameInterface)
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  getNameValue()[B = GetNameValue()
  subtreeDepth()I = SubtreeDepth()
sun/security/x509/PKIXExtensions = Sun.Security.X509.PKIXExtensions
  <init>()V = .ctor()
  AuthInfoAccess_Id = AuthInfoAccessId
  AuthorityKey_Id = AuthorityKeyId
  BasicConstraints_Id = BasicConstraintsId
  CertificateIssuer_Id = CertificateIssuerId
  CertificatePolicies_Id = CertificatePoliciesId
  CRLDistributionPoints_Id = CRLDistributionPointsId
  CRLNumber_Id = CRLNumberId
  DeltaCRLIndicator_Id = DeltaCRLIndicatorId
  ExtendedKeyUsage_Id = ExtendedKeyUsageId
  FreshestCRL_Id = FreshestCRLId
  HoldInstructionCode_Id = HoldInstructionCodeId
  InhibitAnyPolicy_Id = InhibitAnyPolicyId
  InvalidityDate_Id = InvalidityDateId
  IssuerAlternativeName_Id = IssuerAlternativeNameId
  IssuingDistributionPoint_Id = IssuingDistributionPointId
  KeyUsage_Id = KeyUsageId
  NameConstraints_Id = NameConstraintsId
  PolicyConstraints_Id = PolicyConstraintsId
  PolicyMappings_Id = PolicyMappingsId
  PrivateKeyUsage_Id = PrivateKeyUsageId
  ReasonCode_Id = ReasonCodeId
  SubjectAlternativeName_Id = SubjectAlternativeNameId
  SubjectDirectoryAttributes_Id = SubjectDirectoryAttributesId
  SubjectInfoAccess_Id = SubjectInfoAccessId
  SubjectKey_Id = SubjectKeyId
sun/security/x509/PolicyInformation = Sun.Security.X509.PolicyInformation
  <init>(Lsun/security/x509/CertificatePolicyId;Ljava/util/Set;)V = .ctor(Sun.Security.X509.CertificatePolicyId, System.Collections.Generic.ICollection<Java.Security.Cert.PolicyQualifierInfo>)
  ID = Id
  NAME = Name
  QUALIFIERS = Qualifiers
  getElements()Ljava/util/Enumeration; = Elements
  getName()Ljava/lang/String; = Name
  getPolicyIdentifier()Lsun/security/x509/CertificatePolicyId; = PolicyIdentifier
  getPolicyQualifiers()Ljava/util/Set; = PolicyQualifiers
  delete(Ljava/lang/String;)V = Delete(string)
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  get(Ljava/lang/String;)Ljava/lang/Object; = Get(string)
  set(Ljava/lang/String;Ljava/lang/Object;)V = Set(string, Java.Lang.Object)
sun/security/x509/RDN = Sun.Security.X509.RDN
  <init>([Lsun/security/x509/AVA;)V = .ctor(Sun.Security.X509.AVA[])
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/util/Map;)V = .ctor(string, System.Collections.Generic.IDictionary<string, string>)
  <init>(Lsun/security/x509/AVA;)V = .ctor(Sun.Security.X509.AVA)
  avas()Ljava/util/List; = Avas()
  size()I = Size()
  toRFC1779String()Ljava/lang/String; = ToRFC1779String()
  toRFC1779String(Ljava/util/Map;)Ljava/lang/String; = ToRFC1779String(System.Collections.Generic.IDictionary<string, string>)
  toRFC2253String()Ljava/lang/String; = ToRFC2253String()
  toRFC2253String(Z)Ljava/lang/String; = ToRFC2253String(bool)
  toRFC2253String(Ljava/util/Map;)Ljava/lang/String; = ToRFC2253String(System.Collections.Generic.IDictionary<string, string>)
sun/security/x509/ReasonFlags = Sun.Security.X509.ReasonFlags
  <init>([B)V = .ctor(byte[])
  <init>([Z)V = .ctor(bool[])
  <init>(Lsun/security/util/BitArray;)V = .ctor(Sun.Security.Util.BitArray)
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  AA_COMPROMISE = AaCompromise
  AFFILIATION_CHANGED = AffiliationChanged
  CA_COMPROMISE = CaCompromise
  CERTIFICATE_HOLD = CertificateHold
  CESSATION_OF_OPERATION = CessationOfOperation
  KEY_COMPROMISE = KeyCompromise
  PRIVILEGE_WITHDRAWN = PrivilegeWithdrawn
  SUPERSEDED = Superseded
  UNUSED = Unused
  getElements()Ljava/util/Enumeration; = Elements
  delete(Ljava/lang/String;)V = Delete(string)
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  get(Ljava/lang/String;)Ljava/lang/Object; = Get(string)
  getFlags()[Z = GetFlags()
  set(Ljava/lang/String;Ljava/lang/Object;)V = Set(string, Java.Lang.Object)
sun/security/x509/RFC822Name = Sun.Security.X509.RFC822Name
  <init>(Ljava/lang/String;)V = .ctor(string)
  getName()Ljava/lang/String; = Name
  getType()I = Type
  constrains(Lsun/security/x509/GeneralNameInterface;)I = Constrains(Sun.Security.X509.IGeneralNameInterface)
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  parseName(Ljava/lang/String;)V = ParseName(string)
  subtreeDepth()I = SubtreeDepth()
sun/security/x509/SerialNumber = Sun.Security.X509.SerialNumber
  <init>(I)V = .ctor(int)
  <init>(Ljava/io/InputStream;)V = .ctor(System.IO.Stream)
  <init>(Ljava/math/BigInteger;)V = .ctor(Java.Math.BigInteger)
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  getNumber()Ljava/math/BigInteger; = Number
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
sun/security/x509/UniqueIdentity = Sun.Security.X509.UniqueIdentity
  <init>([B)V = .ctor(byte[])
  <init>(Lsun/security/util/BitArray;)V = .ctor(Sun.Security.Util.BitArray)
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  encode(Lsun/security/util/DerOutputStream;B)V = Encode(Sun.Security.Util.DerOutputStream, sbyte)
  getId()[Z = GetId()
sun/security/x509/URIName = Sun.Security.X509.URIName
  <init>(Ljava/lang/String;)V = .ctor(string)
  getHost()Ljava/lang/String; = Host
  getHostObject()Ljava/lang/Object; = HostObject
  getName()Ljava/lang/String; = Name
  getScheme()Ljava/lang/String; = Scheme
  getType()I = Type
  getURI()Ljava/net/URI; = URI
  constrains(Lsun/security/x509/GeneralNameInterface;)I = Constrains(Sun.Security.X509.IGeneralNameInterface)
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  subtreeDepth()I = SubtreeDepth()
sun/security/x509/X400Address = Sun.Security.X509.X400Address
  <init>([B)V = .ctor(byte[])
  getType()I = Type
  constrains(Lsun/security/x509/GeneralNameInterface;)I = Constrains(Sun.Security.X509.IGeneralNameInterface)
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  subtreeDepth()I = SubtreeDepth()
sun/security/x509/X500Name = Sun.Security.X509.X500Name
  <init>([B)V = .ctor(byte[])
  <init>([Lsun/security/x509/RDN;)V = .ctor(Sun.Security.X509.RDN[])
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string, string)
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string, string, string, string)
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V = .ctor(string, string, string, string, bool)
  <init>(Ljava/lang/String;Ljava/util/Map;)V = .ctor(string, System.Collections.Generic.IDictionary<string, string>)
  <init>(Lsun/security/util/DerInputStream;)V = .ctor(Sun.Security.Util.DerInputStream)
  commonName_oid = CommonNameOid
  countryName_oid = CountryNameOid
  DNQUALIFIER_OID = DnqualifierOid
  DOMAIN_COMPONENT_OID = DomainComponentOid
  GENERATIONQUALIFIER_OID = GenerationqualifierOid
  GIVENNAME_OID = GivennameOid
  INITIALS_OID = InitialsOid
  ipAddress_oid = IpAddressOid
  localityName_oid = LocalityNameOid
  orgName_oid = OrgNameOid
  orgUnitName_oid = OrgUnitNameOid
  SERIALNUMBER_OID = SerialnumberOid
  stateName_oid = StateNameOid
  streetAddress_oid = StreetAddressOid
  SURNAME_OID = SurnameOid
  title_oid = TitleOid
  userid_oid = UseridOid
  getCommonName()Ljava/lang/String; = CommonName
  getCountry()Ljava/lang/String; = Country
  getDNQualifier()Ljava/lang/String; = DNQualifier
  getDomain()Ljava/lang/String; = Domain
  getGeneration()Ljava/lang/String; = Generation
  getGivenName()Ljava/lang/String; = GivenName
  getInitials()Ljava/lang/String; = Initials
  getIP()Ljava/lang/String; = IP
  isEmpty()Z = IsEmpty
  getLocality()Ljava/lang/String; = Locality
  getName()Ljava/lang/String; = Name
  getOrganization()Ljava/lang/String; = Organization
  getOrganizationalUnit()Ljava/lang/String; = OrganizationalUnit
  getRFC1779Name()Ljava/lang/String; = RFC1779Name
  getRFC2253CanonicalName()Ljava/lang/String; = RFC2253CanonicalName
  getRFC2253Name()Ljava/lang/String; = RFC2253Name
  getState()Ljava/lang/String; = State
  getSurname()Ljava/lang/String; = Surname
  getType()I = Type
  allAvas()Ljava/util/List; = AllAvas()
  asX500Name(Ljavax/security/auth/x500/X500Principal;)Lsun/security/x509/X500Name; = AsX500Name(Javax.Security.Auth.X500.X500Principal)
  asX500Principal()Ljavax/security/auth/x500/X500Principal; = AsX500Principal()
  avaSize()I = AvaSize()
  commonAncestor(Lsun/security/x509/X500Name;)Lsun/security/x509/X500Name; = CommonAncestor(Sun.Security.X509.X500Name)
  constrains(Lsun/security/x509/GeneralNameInterface;)I = Constrains(Sun.Security.X509.IGeneralNameInterface)
  emit(Lsun/security/util/DerOutputStream;)V = Emit(Sun.Security.Util.DerOutputStream)
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  getEncoded()[B = GetEncoded()
  getEncodedInternal()[B = GetEncodedInternal()
  getRFC1779Name(Ljava/util/Map;)Ljava/lang/String; = GetRFC1779Name(System.Collections.Generic.IDictionary<string, string>)
  getRFC2253Name(Ljava/util/Map;)Ljava/lang/String; = GetRFC2253Name(System.Collections.Generic.IDictionary<string, string>)
  rdns()Ljava/util/List; = Rdns()
  size()I = Size()
  subtreeDepth()I = SubtreeDepth()
sun/security/x509/X500Signer = Sun.Security.X509.X500Signer
  <init>(Ljava/security/Signature;Lsun/security/x509/X500Name;)V = .ctor(Java.Security.Signature, Sun.Security.X509.X500Name)
  getAlgorithmId()Lsun/security/x509/AlgorithmId; = AlgorithmId
  getSigner()Lsun/security/x509/X500Name; = Signer
  sign()[B = Sign()
  update([BII)V = Update(byte[], int, int)
sun/security/x509/X509AttributeName = Sun.Security.X509.X509AttributeName
  <init>(Ljava/lang/String;)V = .ctor(string)
  getPrefix()Ljava/lang/String; = Prefix
  getSuffix()Ljava/lang/String; = Suffix
sun/security/x509/X509CertImpl = Sun.Security.X509.X509CertImpl
  <init>()V = .ctor()
  <init>([B)V = .ctor(byte[])
  <init>(Ljava/io/InputStream;)V = .ctor(System.IO.Stream)
  <init>(Lsun/security/x509/X509CertInfo;)V = .ctor(Sun.Security.X509.X509CertInfo)
  ALG_ID = AlgId
  algId = AlgId
  INFO = Info
  info = Info
  ISSUER_DN = IssuerDn
  NAME = Name
  PUBLIC_KEY = PublicKey
  SERIAL_ID = SerialId
  SIG = Sig
  SIG_ALG = SigAlg
  SIGNATURE = Signature
  signature = Signature
  SIGNED_CERT = SignedCert
  SUBJECT_DN = SubjectDn
  VERSION = Version
  getBasicConstraints()I = BasicConstraints
  getCriticalExtensionOIDs()Ljava/util/Set; = CriticalExtensionOIDs
  getElements()Ljava/util/Enumeration; = Elements
  hasUnsupportedCriticalExtension()Z = HasUnsupportedCriticalExtension
  getIssuerDN()Ljava/security/Principal; = IssuerDN
  getName()Ljava/lang/String; = Name
  getNonCriticalExtensionOIDs()Ljava/util/Set; = NonCriticalExtensionOIDs
  getNotAfter()Ljava/util/Date; = NotAfter
  getNotBefore()Ljava/util/Date; = NotBefore
  getPublicKey()Ljava/security/PublicKey; = PublicKey
  getSerialNumber()Ljava/math/BigInteger; = SerialNumber
  getSerialNumberObject()Lsun/security/x509/SerialNumber; = SerialNumberObject
  getSigAlgName()Ljava/lang/String; = SigAlgName
  getSigAlgOID()Ljava/lang/String; = SigAlgOID
  getSubjectDN()Ljava/security/Principal; = SubjectDN
  getVersion()I = Version
  checkValidity()V = CheckValidity()
  checkValidity(Ljava/util/Date;)V = CheckValidity(Java.Util.Date)
  delete(Ljava/lang/String;)V = Delete(string)
  derEncode(Ljava/io/OutputStream;)V = DerEncode(System.IO.Stream)
  encode(Ljava/io/OutputStream;)V = Encode(System.IO.Stream)
  get(Ljava/lang/String;)Ljava/lang/Object; = Get(string)
  getEncoded()[B = GetEncoded()
  getEncodedInternal()[B = GetEncodedInternal()
  getEncodedInternal(Ljava/security/cert/Certificate;)[B = GetEncodedInternal(Java.Security.Cert.Certificate)
  getExtendedKeyUsage(Ljava/security/cert/X509Certificate;)Ljava/util/List; = GetExtendedKeyUsage(Java.Security.Cert.X509Certificate)
  getExtensionValue(Ljava/lang/String;)[B = GetExtensionValue(string)
  getIssuerAlternativeNames(Ljava/security/cert/X509Certificate;)Ljava/util/Collection; = GetIssuerAlternativeNames(Java.Security.Cert.X509Certificate)
  getIssuerUniqueID()[Z = GetIssuerUniqueID()
  getIssuerX500Principal(Ljava/security/cert/X509Certificate;)Ljavax/security/auth/x500/X500Principal; = GetIssuerX500Principal(Java.Security.Cert.X509Certificate)
  getKeyUsage()[Z = GetKeyUsage()
  getSigAlgParams()[B = GetSigAlgParams()
  getSignature()[B = GetSignature()
  getSubjectAlternativeNames(Ljava/security/cert/X509Certificate;)Ljava/util/Collection; = GetSubjectAlternativeNames(Java.Security.Cert.X509Certificate)
  getSubjectUniqueID()[Z = GetSubjectUniqueID()
  getSubjectX500Principal(Ljava/security/cert/X509Certificate;)Ljavax/security/auth/x500/X500Principal; = GetSubjectX500Principal(Java.Security.Cert.X509Certificate)
  getTBSCertificate()[B = GetTBSCertificate()
  isSelfIssued(Ljava/security/cert/X509Certificate;)Z = IsSelfIssued(Java.Security.Cert.X509Certificate)
  isSelfSigned(Ljava/security/cert/X509Certificate;Ljava/lang/String;)Z = IsSelfSigned(Java.Security.Cert.X509Certificate, string)
  set(Ljava/lang/String;Ljava/lang/Object;)V = Set(string, Java.Lang.Object)
  sign(Ljava/security/PrivateKey;Ljava/lang/String;)V = Sign(Java.Security.IPrivateKey, string)
  sign(Ljava/security/PrivateKey;Ljava/lang/String;Ljava/lang/String;)V = Sign(Java.Security.IPrivateKey, string, string)
  toImpl(Ljava/security/cert/X509Certificate;)Lsun/security/x509/X509CertImpl; = ToImpl(Java.Security.Cert.X509Certificate)
  toString()Ljava/lang/String; = ToString()
  verify(Ljava/security/PublicKey;)V = Verify(Java.Security.IPublicKey)
  verify(Ljava/security/PublicKey;Ljava/lang/String;)V = Verify(Java.Security.IPublicKey, string)
sun/security/x509/X509CertInfo = Sun.Security.X509.X509CertInfo
  <init>()V = .ctor()
  <init>([B)V = .ctor(byte[])
  algId = AlgId
  ALGORITHM_ID = AlgorithmId
  EXTENSIONS = Extensions
  IDENT = Ident
  interval = Interval
  ISSUER = Issuer
  issuer = Issuer
  ISSUER_ID = IssuerId
  issuerUniqueId = IssuerUniqueId
  KEY = Key
  NAME = Name
  pubKey = PubKey
  serialNum = SerialNum
  SERIAL_NUMBER = SerialNumber
  SUBJECT = Subject
  subject = Subject
  SUBJECT_ID = SubjectId
  subjectUniqueId = SubjectUniqueId
  VALIDITY = Validity
  VERSION = Version
  version = Version
  getElements()Ljava/util/Enumeration; = Elements
  getName()Ljava/lang/String; = Name
  delete(Ljava/lang/String;)V = Delete(string)
  encode(Ljava/io/OutputStream;)V = Encode(System.IO.Stream)
  equals(Lsun/security/x509/X509CertInfo;)Z = Equals(Sun.Security.X509.X509CertInfo)
  get(Ljava/lang/String;)Ljava/lang/Object; = Get(string)
  getEncodedInfo()[B = GetEncodedInfo()
  set(Ljava/lang/String;Ljava/lang/Object;)V = Set(string, Java.Lang.Object)
sun/security/x509/X509CRLEntryImpl = Sun.Security.X509.X509CRLEntryImpl
  <init>([B)V = .ctor(byte[])
  <init>(Ljava/math/BigInteger;Ljava/util/Date;)V = .ctor(Java.Math.BigInteger, Java.Util.Date)
  <init>(Ljava/math/BigInteger;Ljava/util/Date;Lsun/security/x509/CRLExtensions;)V = .ctor(Java.Math.BigInteger, Java.Util.Date, Sun.Security.X509.CRLExtensions)
  getCriticalExtensionOIDs()Ljava/util/Set; = CriticalExtensionOIDs
  hasExtensions()Z = HasExtensions
  hasUnsupportedCriticalExtension()Z = HasUnsupportedCriticalExtension
  getNonCriticalExtensionOIDs()Ljava/util/Set; = NonCriticalExtensionOIDs
  getReasonCode()Ljava/lang/Integer; = ReasonCode
  getRevocationDate()Ljava/util/Date; = RevocationDate
  getSerialNumber()Ljava/math/BigInteger; = SerialNumber
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  getEncoded()[B = GetEncoded()
  getExtensionValue(Ljava/lang/String;)[B = GetExtensionValue(string)
  toImpl(Ljava/security/cert/X509CRLEntry;)Lsun/security/x509/X509CRLEntryImpl; = ToImpl(Java.Security.Cert.X509CRLEntry)
  toString()Ljava/lang/String; = ToString()
sun/security/x509/X509CRLImpl = Sun.Security.X509.X509CRLImpl
  <init>([B)V = .ctor(byte[])
  <init>(Ljava/io/InputStream;)V = .ctor(System.IO.Stream)
  <init>(Lsun/security/x509/X500Name;Ljava/util/Date;Ljava/util/Date;)V = .ctor(Sun.Security.X509.X500Name, Java.Util.Date, Java.Util.Date)
  <init>(Lsun/security/x509/X500Name;Ljava/util/Date;Ljava/util/Date;[Ljava/security/cert/X509CRLEntry;)V = .ctor(Sun.Security.X509.X500Name, Java.Util.Date, Java.Util.Date, Java.Security.Cert.X509CRLEntry[])
  <init>(Lsun/security/x509/X500Name;Ljava/util/Date;Ljava/util/Date;[Ljava/security/cert/X509CRLEntry;Lsun/security/x509/CRLExtensions;)V = .ctor(Sun.Security.X509.X500Name, Java.Util.Date, Java.Util.Date, Java.Security.Cert.X509CRLEntry[], Sun.Security.X509.CRLExtensions)
  getAuthKeyId()Lsun/security/x509/KeyIdentifier; = AuthKeyId
  getBaseCRLNumber()Ljava/math/BigInteger; = BaseCRLNumber
  getCriticalExtensionOIDs()Ljava/util/Set; = CriticalExtensionOIDs
  getCRLNumber()Ljava/math/BigInteger; = CRLNumber
  hasUnsupportedCriticalExtension()Z = HasUnsupportedCriticalExtension
  getIssuerDN()Ljava/security/Principal; = IssuerDN
  getNextUpdate()Ljava/util/Date; = NextUpdate
  getNonCriticalExtensionOIDs()Ljava/util/Set; = NonCriticalExtensionOIDs
  getRevokedCertificates()Ljava/util/Set; = RevokedCertificates
  getSigAlgName()Ljava/lang/String; = SigAlgName
  getSigAlgOID()Ljava/lang/String; = SigAlgOID
  getThisUpdate()Ljava/util/Date; = ThisUpdate
  getVersion()I = Version
  encodeInfo(Ljava/io/OutputStream;)V = EncodeInfo(System.IO.Stream)
  getEncoded()[B = GetEncoded()
  getEncodedInternal()[B = GetEncodedInternal()
  getEncodedInternal(Ljava/security/cert/X509CRL;)[B = GetEncodedInternal(Java.Security.Cert.X509CRL)
  getExtension(Lsun/security/util/ObjectIdentifier;)Ljava/lang/Object; = GetExtension(Sun.Security.Util.ObjectIdentifier)
  getExtensionValue(Ljava/lang/String;)[B = GetExtensionValue(string)
  getIssuerX500Principal(Ljava/security/cert/X509CRL;)Ljavax/security/auth/x500/X500Principal; = GetIssuerX500Principal(Java.Security.Cert.X509CRL)
  getRevokedCertificate(Ljava/math/BigInteger;)Ljava/security/cert/X509CRLEntry; = GetRevokedCertificate(Java.Math.BigInteger)
  getSigAlgParams()[B = GetSigAlgParams()
  getSignature()[B = GetSignature()
  getTBSCertList()[B = GetTBSCertList()
  isRevoked(Ljava/security/cert/Certificate;)Z = IsRevoked(Java.Security.Cert.Certificate)
  sign(Ljava/security/PrivateKey;Ljava/lang/String;)V = Sign(Java.Security.IPrivateKey, string)
  sign(Ljava/security/PrivateKey;Ljava/lang/String;Ljava/lang/String;)V = Sign(Java.Security.IPrivateKey, string, string)
  toImpl(Ljava/security/cert/X509CRL;)Lsun/security/x509/X509CRLImpl; = ToImpl(Java.Security.Cert.X509CRL)
  toString()Ljava/lang/String; = ToString()
  verify(Ljava/security/PublicKey;)V = Verify(Java.Security.IPublicKey)
  verify(Ljava/security/PublicKey;Ljava/lang/String;)V = Verify(Java.Security.IPublicKey, string)
sun/security/x509/X509Key = Sun.Security.X509.X509Key
  <init>()V = .ctor()
  algid = Algid
  encodedKey = EncodedKey
  key = Key
  getAlgorithm()Ljava/lang/String; = Algorithm
  getAlgorithmId()Lsun/security/x509/AlgorithmId; = AlgorithmId
  getFormat()Ljava/lang/String; = Format
  getKey()Lsun/security/util/BitArray; = Key
  setKey(Lsun/security/util/BitArray;)V = Key
  decode([B)V = Decode(byte[])
  decode(Ljava/io/InputStream;)V = Decode(System.IO.Stream)
  encode()[B = Encode()
  encode(Lsun/security/util/DerOutputStream;)V = Encode(Sun.Security.Util.DerOutputStream)
  getEncoded()[B = GetEncoded()
  getEncodedInternal()[B = GetEncodedInternal()
  parseKeyBits()V = ParseKeyBits()
sun/util/calendar/AbstractCalendar = Sun.Util.Calendar.AbstractCalendar
  <init>()V = .ctor()
  getCalendarDate()Lsun/util/calendar/CalendarDate; = CalendarDate
  getWeekLength()I = WeekLength
  getCalendarDate(J)Lsun/util/calendar/CalendarDate; = GetCalendarDate(long)
  getCalendarDate(JLjava/util/TimeZone;)Lsun/util/calendar/CalendarDate; = GetCalendarDate(long, Java.Util.TimeZone)
  getCalendarDate(JLsun/util/calendar/CalendarDate;)Lsun/util/calendar/CalendarDate; = GetCalendarDate(long, Sun.Util.Calendar.CalendarDate)
  getCalendarDateFromFixedDate(Lsun/util/calendar/CalendarDate;J)V = GetCalendarDateFromFixedDate(Sun.Util.Calendar.CalendarDate, long)
  getDayOfWeekDateOnOrBefore(JI)J = GetDayOfWeekDateOnOrBefore(long, int)
  getEra(Ljava/lang/String;)Lsun/util/calendar/Era; = GetEra(string)
  getEras()[Lsun/util/calendar/Era; = GetEras()
  getFixedDate(Lsun/util/calendar/CalendarDate;)J = GetFixedDate(Sun.Util.Calendar.CalendarDate)
  getNthDayOfWeek(IILsun/util/calendar/CalendarDate;)Lsun/util/calendar/CalendarDate; = GetNthDayOfWeek(int, int, Sun.Util.Calendar.CalendarDate)
  getTime(Lsun/util/calendar/CalendarDate;)J = GetTime(Sun.Util.Calendar.CalendarDate)
  getTimeOfDay(Lsun/util/calendar/CalendarDate;)J = GetTimeOfDay(Sun.Util.Calendar.CalendarDate)
  getTimeOfDayValue(Lsun/util/calendar/CalendarDate;)J = GetTimeOfDayValue(Sun.Util.Calendar.CalendarDate)
  isLeapYear(Lsun/util/calendar/CalendarDate;)Z = IsLeapYear(Sun.Util.Calendar.CalendarDate)
  setEra(Lsun/util/calendar/CalendarDate;Ljava/lang/String;)V = SetEra(Sun.Util.Calendar.CalendarDate, string)
  setEras([Lsun/util/calendar/Era;)V = SetEras(Sun.Util.Calendar.Era[])
  setTimeOfDay(Lsun/util/calendar/CalendarDate;I)Lsun/util/calendar/CalendarDate; = SetTimeOfDay(Sun.Util.Calendar.CalendarDate, int)
  validateTime(Lsun/util/calendar/CalendarDate;)Z = ValidateTime(Sun.Util.Calendar.CalendarDate)
sun/util/calendar/BaseCalendar = Sun.Util.Calendar.BaseCalendar
  <init>()V = .ctor()
  APRIL = April
  AUGUST = August
  DECEMBER = December
  FEBRUARY = February
  FRIDAY = Friday
  JANUARY = January
  JULY = July
  JUNE = June
  MARCH = March
  MAY = May
  MONDAY = Monday
  NOVEMBER = November
  OCTOBER = October
  SATURDAY = Saturday
  SEPTEMBER = September
  SUNDAY = Sunday
  THURSDAY = Thursday
  TUESDAY = Tuesday
  WEDNESDAY = Wednesday
  getCalendarDateFromFixedDate(Lsun/util/calendar/CalendarDate;J)V = GetCalendarDateFromFixedDate(Sun.Util.Calendar.CalendarDate, long)
  getDayOfWeek(Lsun/util/calendar/CalendarDate;)I = GetDayOfWeek(Sun.Util.Calendar.CalendarDate)
  getDayOfWeekFromFixedDate(J)I = GetDayOfWeekFromFixedDate(long)
  getDayOfYear(Lsun/util/calendar/CalendarDate;)J = GetDayOfYear(Sun.Util.Calendar.CalendarDate)
  getFixedDate(IIILsun/util/calendar/BaseCalendar$Date;)J = GetFixedDate(int, int, int, Sun.Util.Calendar.BaseCalendar.Date)
  getFixedDate(Lsun/util/calendar/CalendarDate;)J = GetFixedDate(Sun.Util.Calendar.CalendarDate)
  getMonthLength(Lsun/util/calendar/CalendarDate;)I = GetMonthLength(Sun.Util.Calendar.CalendarDate)
  getYearFromFixedDate(J)I = GetYearFromFixedDate(long)
  getYearLength(Lsun/util/calendar/CalendarDate;)I = GetYearLength(Sun.Util.Calendar.CalendarDate)
  getYearLengthInMonths(Lsun/util/calendar/CalendarDate;)I = GetYearLengthInMonths(Sun.Util.Calendar.CalendarDate)
  isLeapYear(Lsun/util/calendar/CalendarDate;)Z = IsLeapYear(Sun.Util.Calendar.CalendarDate)
  normalize(Lsun/util/calendar/CalendarDate;)Z = Normalize(Sun.Util.Calendar.CalendarDate)
  validate(Lsun/util/calendar/CalendarDate;)Z = Validate(Sun.Util.Calendar.CalendarDate)
sun/util/calendar/CalendarDate = Sun.Util.Calendar.CalendarDate
  <init>()V = .ctor()
  <init>(Ljava/util/TimeZone;)V = .ctor(Java.Util.TimeZone)
  FIELD_UNDEFINED = FieldUndefined
  TIME_UNDEFINED = TimeUndefined
  getDaylightSaving()I = DaylightSaving
  getDayOfMonth()I = DayOfMonth
  getDayOfWeek()I = DayOfWeek
  getEra()Lsun/util/calendar/Era; = Era
  getHours()I = Hours
  isDaylightTime()Z = IsDaylightTime
  isLeapYear()Z = IsLeapYear
  isNormalized()Z = IsNormalized
  getMillis()I = Millis
  getMinutes()I = Minutes
  getMonth()I = Month
  getSeconds()I = Seconds
  isStandardTime()Z = StandardTime
  setStandardTime(Z)V = StandardTime
  getTimeOfDay()J = TimeOfDay
  getYear()I = Year
  getZone()Ljava/util/TimeZone; = Zone
  getZoneOffset()I = ZoneOffset
  addDate(III)Lsun/util/calendar/CalendarDate; = AddDate(int, int, int)
  addDayOfMonth(I)Lsun/util/calendar/CalendarDate; = AddDayOfMonth(int)
  addHours(I)Lsun/util/calendar/CalendarDate; = AddHours(int)
  addMillis(I)Lsun/util/calendar/CalendarDate; = AddMillis(int)
  addMinutes(I)Lsun/util/calendar/CalendarDate; = AddMinutes(int)
  addMonth(I)Lsun/util/calendar/CalendarDate; = AddMonth(int)
  addSeconds(I)Lsun/util/calendar/CalendarDate; = AddSeconds(int)
  addTimeOfDay(IIII)Lsun/util/calendar/CalendarDate; = AddTimeOfDay(int, int, int, int)
  addYear(I)Lsun/util/calendar/CalendarDate; = AddYear(int)
  clone()Ljava/lang/Object; = Clone()
  isSameDate(Lsun/util/calendar/CalendarDate;)Z = IsSameDate(Sun.Util.Calendar.CalendarDate)
  setDate(III)Lsun/util/calendar/CalendarDate; = SetDate(int, int, int)
  setDaylightSaving(I)V = SetDaylightSaving(int)
  setDayOfMonth(I)Lsun/util/calendar/CalendarDate; = SetDayOfMonth(int)
  setDayOfWeek(I)V = SetDayOfWeek(int)
  setEra(Lsun/util/calendar/Era;)Lsun/util/calendar/CalendarDate; = SetEra(Sun.Util.Calendar.Era)
  setHours(I)Lsun/util/calendar/CalendarDate; = SetHours(int)
  setLocale(Ljava/util/Locale;)V = SetLocale(Java.Util.Locale)
  setMillis(I)Lsun/util/calendar/CalendarDate; = SetMillis(int)
  setMinutes(I)Lsun/util/calendar/CalendarDate; = SetMinutes(int)
  setMonth(I)Lsun/util/calendar/CalendarDate; = SetMonth(int)
  setNormalized(Z)V = SetNormalized(bool)
  setSeconds(I)Lsun/util/calendar/CalendarDate; = SetSeconds(int)
  setTimeOfDay(IIII)Lsun/util/calendar/CalendarDate; = SetTimeOfDay(int, int, int, int)
  setTimeOfDay(J)V = SetTimeOfDay(long)
  setYear(I)Lsun/util/calendar/CalendarDate; = SetYear(int)
  setZone(Ljava/util/TimeZone;)Lsun/util/calendar/CalendarDate; = SetZone(Java.Util.TimeZone)
  setZoneOffset(I)V = SetZoneOffset(int)
sun/util/calendar/CalendarSystem = Sun.Util.Calendar.CalendarSystem
  <init>()V = .ctor()
  getCalendarDate()Lsun/util/calendar/CalendarDate; = CalendarDate
  getName()Ljava/lang/String; = Name
  getWeekLength()I = WeekLength
  forName(Ljava/lang/String;)Lsun/util/calendar/CalendarSystem; = ForName(string)
  getCalendarDate(J)Lsun/util/calendar/CalendarDate; = GetCalendarDate(long)
  getCalendarDate(JLjava/util/TimeZone;)Lsun/util/calendar/CalendarDate; = GetCalendarDate(long, Java.Util.TimeZone)
  getCalendarDate(JLsun/util/calendar/CalendarDate;)Lsun/util/calendar/CalendarDate; = GetCalendarDate(long, Sun.Util.Calendar.CalendarDate)
  getEra(Ljava/lang/String;)Lsun/util/calendar/Era; = GetEra(string)
  getEras()[Lsun/util/calendar/Era; = GetEras()
  getMonthLength(Lsun/util/calendar/CalendarDate;)I = GetMonthLength(Sun.Util.Calendar.CalendarDate)
  getNthDayOfWeek(IILsun/util/calendar/CalendarDate;)Lsun/util/calendar/CalendarDate; = GetNthDayOfWeek(int, int, Sun.Util.Calendar.CalendarDate)
  getTime(Lsun/util/calendar/CalendarDate;)J = GetTime(Sun.Util.Calendar.CalendarDate)
  getYearLength(Lsun/util/calendar/CalendarDate;)I = GetYearLength(Sun.Util.Calendar.CalendarDate)
  getYearLengthInMonths(Lsun/util/calendar/CalendarDate;)I = GetYearLengthInMonths(Sun.Util.Calendar.CalendarDate)
  newCalendarDate()Lsun/util/calendar/CalendarDate; = NewCalendarDate()
  newCalendarDate(Ljava/util/TimeZone;)Lsun/util/calendar/CalendarDate; = NewCalendarDate(Java.Util.TimeZone)
  normalize(Lsun/util/calendar/CalendarDate;)Z = Normalize(Sun.Util.Calendar.CalendarDate)
  setEra(Lsun/util/calendar/CalendarDate;Ljava/lang/String;)V = SetEra(Sun.Util.Calendar.CalendarDate, string)
  setTimeOfDay(Lsun/util/calendar/CalendarDate;I)Lsun/util/calendar/CalendarDate; = SetTimeOfDay(Sun.Util.Calendar.CalendarDate, int)
  validate(Lsun/util/calendar/CalendarDate;)Z = Validate(Sun.Util.Calendar.CalendarDate)
sun/util/calendar/CalendarUtils = Sun.Util.Calendar.CalendarUtils
  <init>()V = .ctor()
  amod(II)I = Amod(int, int)
  amod(JJ)J = Amod(long, long)
  floorDivide(II)I = FloorDivide(int, int)
  floorDivide(II[I)I = FloorDivide(int, int, int[])
  floorDivide(JI[I)I = FloorDivide(long, int, int[])
  floorDivide(JJ)J = FloorDivide(long, long)
  isGregorianLeapYear(I)Z = IsGregorianLeapYear(int)
  isJulianLeapYear(I)Z = IsJulianLeapYear(int)
  mod(II)I = Mod(int, int)
  mod(JJ)J = Mod(long, long)
  sprintf0d(Ljava/lang/StringBuffer;II)Ljava/lang/StringBuffer; = Sprintf0d(Java.Lang.StringBuffer, int, int)
  sprintf0d(Ljava/lang/StringBuilder;II)Ljava/lang/StringBuilder; = Sprintf0d(Java.Lang.StringBuilder, int, int)
sun/util/calendar/Era = Sun.Util.Calendar.Era
  <init>(Ljava/lang/String;Ljava/lang/String;JZ)V = .ctor(string, string, long, bool)
  getAbbreviation()Ljava/lang/String; = Abbreviation
  isLocalTime()Z = IsLocalTime
  getName()Ljava/lang/String; = Name
  getSinceDate()Lsun/util/calendar/CalendarDate; = SinceDate
  getDiaplayAbbreviation(Ljava/util/Locale;)Ljava/lang/String; = GetDiaplayAbbreviation(Java.Util.Locale)
  getDisplayName(Ljava/util/Locale;)Ljava/lang/String; = GetDisplayName(Java.Util.Locale)
  getSince(Ljava/util/TimeZone;)J = GetSince(Java.Util.TimeZone)
sun/util/calendar/ZoneInfoFile = Sun.Util.Calendar.ZoneInfoFile
  <init>()V = .ctor()
  JAVAZI_LABEL = JavaziLabel
  JAVAZI_VERSION = JavaziVersion
  JAVAZM_FILE_NAME = JavazmFileName
  JAVAZM_LABEL = JavazmLabel
  JAVAZM_VERSION = JavazmVersion
  TAG_CRC32 = TagCrc32
  TAG_ExcludedZones = TAGExcludedZones
  TAG_GMTOffsetWillChange = TAGGMTOffsetWillChange
  TAG_LastDSTSaving = TAGLastDSTSaving
  TAG_Offset = TAGOffset
  TAG_RawOffset = TAGRawOffset
  TAG_RawOffsetIndices = TAGRawOffsetIndices
  TAG_RawOffsets = TAGRawOffsets
  TAG_SimpleTimeZone = TAGSimpleTimeZone
  TAG_Transition = TAGTransition
  TAG_TZDataVersion = TAGTZDataVersion
  TAG_ZoneAliases = TAGZoneAliases
  TAG_ZoneIDs = TAGZoneIDs
  getFileName(Ljava/lang/String;)Ljava/lang/String; = GetFileName(string)
  toCustomID(I)Ljava/lang/String; = ToCustomID(int)
