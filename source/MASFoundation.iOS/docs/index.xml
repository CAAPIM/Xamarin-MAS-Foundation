<Overview>
  <Assemblies>
    <Assembly Name="MASFoundation.iOS" Version="1.9.10.0">
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.LinkerSafe</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.LinkWith("MASFoundation.framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("CA Technologies")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("${AuthorCopyright}")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("The core library that handles the communication and authentication layer")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("CA Mobile SDK")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("MASFoundation.iOS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTrademark("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework("Xamarin.iOS,Version=v1.0", FrameworkDisplayName="Xamarin.iOS")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
  </Assemblies>
  <Remarks>MASFoundation is the core MAS framework that handles the communication and authentication layer.</Remarks>
  <Copyright>Copyright (c) 2018 CA. All rights reserved.</Copyright>
  <Types>
    <Namespace Name="MASFoundation">
      <Type Name="Constants" Kind="Class" />
      <Type Name="MAS" Kind="Class" />
      <Type Name="MASApplication" Kind="Class" />
      <Type Name="MASAuthCredentials" Kind="Class" />
      <Type Name="MASAuthCredentialsAuthorizationCode" Kind="Class" />
      <Type Name="MASAuthCredentialsBlock" Kind="Delegate" />
      <Type Name="MASAuthCredentialsJWT" Kind="Class" />
      <Type Name="MASAuthCredentialsPassword" Kind="Class" />
      <Type Name="MASAuthenticationStatus" Kind="Enumeration" />
      <Type Name="MASCompletionErrorBlock" Kind="Delegate" />
      <Type Name="MASConfiguration" Kind="Class" />
      <Type Name="MASDevice" Kind="Class" />
      <Type Name="MASFile" Kind="Class" />
      <Type Name="MASFileDirectoryType" Kind="Enumeration" />
      <Type Name="MASFoundationErrorCode" Kind="Enumeration" />
      <Type Name="MASGatewayMonitoringStatus" Kind="Enumeration" />
      <Type Name="MASGatewayMonitorStatusBlock" Kind="Delegate" />
      <Type Name="MASGrantFlow" Kind="Enumeration" />
      <Type Name="MASNetworkReachabilityStatus" Kind="Enumeration" />
      <Type Name="MASObject" Kind="Class" />
      <Type Name="MASObjectResponseErrorBlock" Kind="Delegate" />
      <Type Name="MASRequest" Kind="Class" />
      <Type Name="MASRequestBuilder" Kind="Class" />
      <Type Name="MASRequestResponseType" Kind="Enumeration" />
      <Type Name="MASResponseInfoErrorBlock" Kind="Delegate" />
      <Type Name="MASResponseObjectErrorBlock" Kind="Delegate" />
      <Type Name="MASResponseObjectErrorResult" Kind="Class" />
      <Type Name="MASSecurityConfiguration" Kind="Class" />
      <Type Name="MASSecuritySSLPinningMode" Kind="Enumeration" />
      <Type Name="MASSharedStorage" Kind="Class" />
      <Type Name="MASState" Kind="Enumeration" />
      <Type Name="MASUser" Kind="Class" />
      <Type Name="MASUserAuthCredentialsBlock" Kind="Delegate" />
      <Type Name="MASUserResponseErrorBlock" Kind="Delegate" />
      <Type Name="NSData_MAS" Kind="Class" />
    </Namespace>
    <Namespace Name="MASFoundation.iOS">
    </Namespace>
  </Types>
  <Title>MASFoundation.iOS</Title>
  <ExtensionMethods>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Foundation.NSData" />
      </Targets>
      <Member MemberName="DecryptData">
        <MemberSignature Language="C#" Value="public static Foundation.NSData DecryptData (this Foundation.NSData This, Foundation.NSData data, string password, out Foundation.NSError anError);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSData DecryptData(class Foundation.NSData This, class Foundation.NSData data, string password, class Foundation.NSError anError) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Foundation.NSData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="Foundation.NSData" RefType="this" />
          <Parameter Name="data" Type="Foundation.NSData" />
          <Parameter Name="password" Type="System.String" />
          <Parameter Name="anError" Type="Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">This instance of the class.</param>
          <param name="data">The NSData object to be decrypted.</param>
          <param name="password">The NSString used as password during the decryption.</param>
          <param name="anError">The NSError variable used for any error returned by the method.</param>
          <summary>Decrypts data using a password passed in the parameter</summary>
        </Docs>
        <Link Type="MASFoundation.NSData_MAS" Member="M:MASFoundation.NSData_MAS.DecryptData(Foundation.NSData,Foundation.NSData,System.String,Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Foundation.NSData" />
      </Targets>
      <Member MemberName="EncryptData">
        <MemberSignature Language="C#" Value="public static Foundation.NSData EncryptData (this Foundation.NSData This, Foundation.NSData data, string password, out Foundation.NSError anError);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSData EncryptData(class Foundation.NSData This, class Foundation.NSData data, string password, class Foundation.NSError anError) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Foundation.NSData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="Foundation.NSData" RefType="this" />
          <Parameter Name="data" Type="Foundation.NSData" />
          <Parameter Name="password" Type="System.String" />
          <Parameter Name="anError" Type="Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">This instance of the class.</param>
          <param name="data">The NSData object to be encrypted.</param>
          <param name="password">The NSString used as password during the encryption.</param>
          <param name="anError">The NSError variable used for any error returned by the method.</param>
          <summary>Encrypts data using a password passed in the parameter.</summary>
        </Docs>
        <Link Type="MASFoundation.NSData_MAS" Member="M:MASFoundation.NSData_MAS.EncryptData(Foundation.NSData,Foundation.NSData,System.String,Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Foundation.NSData" />
      </Targets>
      <Member MemberName="IsEncrypted">
        <MemberSignature Language="C#" Value="public static bool IsEncrypted (this Foundation.NSData This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEncrypted(class Foundation.NSData This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="Foundation.NSData" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">This instance of the class.</param>
          <summary>Simple, convenient method to determine if the object is encrypted.</summary>
        </Docs>
        <Link Type="MASFoundation.NSData_MAS" Member="M:MASFoundation.NSData_MAS.IsEncrypted(Foundation.NSData)" />
      </Member>
    </ExtensionMethod>
  </ExtensionMethods>
</Overview>
