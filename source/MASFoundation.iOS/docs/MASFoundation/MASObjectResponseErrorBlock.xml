<Type Name="MASObjectResponseErrorBlock" FullName="MASFoundation.MASObjectResponseErrorBlock">
  <TypeSignature Language="C#" Value="public delegate void MASObjectResponseErrorBlock(NSObject responseObject, NSError error);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MASObjectResponseErrorBlock extends System.MulticastDelegate" />
  <AssemblyInfo>
    <AssemblyName>MASFoundation.iOS</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="responseObject" Type="Foundation.NSObject" />
    <Parameter Name="error" Type="Foundation.NSError" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="responseObject">Object containing the result of the request.</param>
    <param name="error">NSError object in case any error is encountered during the process</param>
    <summary>A standard (NSObject responseObject, NSError error) block.
  The block will be executed when a request finishes the task unsuccessfully, or successfully.
  All of three arguments in the block can be null depends on the result of the request, 
  and response object should be casted to appropriate data type when it is received.</summary>
    <remarks>
    </remarks>
  </Docs>
</Type>
