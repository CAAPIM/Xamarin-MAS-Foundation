<Type Name="MASAuthorizationResponse" FullName="MASFoundation.MASAuthorizationResponse">
  <TypeSignature Language="C#" Value="public class MASAuthorizationResponse : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MASAuthorizationResponse extends Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>MASFoundation.iOS</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("MASAuthorizationResponse", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>MASAuthorizationResponse class is designed to handle applicationâ€™s interaction with other applications (SFSafariViewController) for social login functionality of MASFoundation SDK.
MASAuthorizationResponse method should be properly invoked in [UIApplicationDelegate application:openURL:options:] method of AppDelegate for the application. If the method is not invoked, social login functionality may not work properly.
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MASAuthorizationResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MASAuthorizationResponse (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MASAuthorizationResponse (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public virtual bool Application (UIKit.UIApplication app, Foundation.NSUrl url, Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt; options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Application(class UIKit.UIApplication app, class Foundation.NSUrl url, class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.NSObject&gt; options) cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("application:openURL:options:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="UIKit.UIApplication" />
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="options" Type="Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt;" />
      </Parameters>
      <Docs>
        <param name="app">UIApplication object as passed in [UIApplicationDelegate application:openURL:options:].</param>
        <param name="url">NSURL object as passed in [UIApplicationDelegate application:openURL:options:].</param>
        <param name="options">NSDictionary as passed in [UIApplicationDelegate application:openURL:options:].</param>
        <summary>Parse returned URL from SFSafariViewController with authorization code and OAuth state. Call this method inside [UIApplicationDelegate application:openURL:options:] of the AppDelegate for the application. This method should be invoked in order to properly perform social login in MASFoundation SDK.</summary>
        <returns>BOOL value whether the URL is specific for social login in MASFoundation or not.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public virtual bool Application (UIKit.UIApplication application, Foundation.NSUrl url, string sourceApplication, Foundation.NSObject annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Application(class UIKit.UIApplication application, class Foundation.NSUrl url, string sourceApplication, class Foundation.NSObject annotation) cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("application:openURL:sourceApplication:annotation:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="sourceApplication" Type="System.String" />
        <Parameter Name="annotation" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="application">UIApplication object as passed in [UIApplicationDelegate application:openURL:sourceApplication:annotation:].</param>
        <param name="url">NSURL object as passed in [UIApplicationDelegate application:openURL:sourceApplication:annotation:].</param>
        <param name="sourceApplication">NSDictionary as passed in [UIApplicationDelegate application:openURL:sourceApplication:annotation:].</param>
        <param name="annotation">annotation as passed in [UIApplicationDelegate application:openURL:sourceApplication:annotation:].</param>
        <summary>Prase returned URL from SFSafariViewController with authorization code and OAuth state. Call this method inside [UIApplicationDelegate application:openURL:sourceApplication:annotation:] of the AppDelegate for the application. This method should be invoked in order to properly perform social login in MASFoundation SDK.</summary>
        <returns>BOOL value whether the URL is specific for social login in MASFoundation or not.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegate">
      <MemberSignature Language="C#" Value="public MASFoundation.MASAuthorizationResponseDelegate Delegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MASFoundation.MASAuthorizationResponseDelegate Delegate" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>MASFoundation.MASAuthorizationResponseDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>`MASAuthorizationResponseDelegate` property for delegation of MASAuthorizationResponse protocols</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedInstance">
      <MemberSignature Language="C#" Value="public static MASFoundation.MASAuthorizationResponse SharedInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MASFoundation.MASAuthorizationResponse SharedInstance() cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("sharedInstance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MASFoundation.MASAuthorizationResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieve the shared MASAuthorizationResponse singleton.</summary>
        <returns>Returns the shared MASAuthorizationResponse singleton.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakDelegate">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject WeakDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject WeakDelegate" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("delegate", ObjCRuntime.ArgumentSemantic.Weak)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDelegate:", ObjCRuntime.ArgumentSemantic.Weak)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
