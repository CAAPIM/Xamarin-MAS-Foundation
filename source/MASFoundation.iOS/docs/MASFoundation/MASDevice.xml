<Type Name="MASDevice" FullName="MASFoundation.MASDevice">
  <TypeSignature Language="C#" Value="public class MASDevice : MASFoundation.MASObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MASDevice extends MASFoundation.MASObject" />
  <AssemblyInfo>
    <AssemblyName>MASFoundation.iOS</AssemblyName>
    <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
    <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
    <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
    <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
    <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
    <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MASFoundation.MASObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("MASDevice", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
    The `MASDevice` class is a local representation of device data.
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MASDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MASDevice (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MASDevice (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MASDevice (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDevice">
      <MemberSignature Language="C#" Value="public static MASFoundation.MASDevice CurrentDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MASFoundation.MASDevice CurrentDevice() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("currentDevice")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MASFoundation.MASDevice</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        The device the application is running on. This is a singleton object.
        </summary>
        <returns>A singleton 'MASDevice' object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeregisterWithCompletion">
      <MemberSignature Language="C#" Value="public virtual void DeregisterWithCompletion (MASFoundation.MASCompletionErrorBlock completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeregisterWithCompletion(class MASFoundation.MASCompletionErrorBlock completion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("deregisterWithCompletion:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completion" Type="MASFoundation.MASCompletionErrorBlock">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDMASCompletionErrorBlock))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completion">Completion.</param>
        <summary>
        Deregister the application resources on this device. This is a two step operation.
        
        <para>It will first attempt to remove the device's registered record in the cloud.  If it fails,
        an error is returned and the appropriate notification is sent and it will stop there.</para><para>Upon success of the first operation, deregistration in the cloud, it will then attempt to
        wipe the device of all credential settings.  If it fails, an error is returned and the appropriate
        notification is sent.It will stop here.</para><para>*  WARNING #1: </para><para>    A call to deregistration in the same session as the device was initially registered will
            fail and may leave the device in a strange state.This call should work post
            initial registration and a restart of the application.</para><para>* WARNING #2: </para><para>    A successful call to deregistration will leave the current application session
            without required credentials and settings.  You must restart the application
            to re-register the application and retrieve new credentials.</para><para>This should be considered an advanced feature.If you make this available to end users it
        should not be made too easily accessible and the UI control should be marked and possibly labeled
        to accentuate that it will wipe settings both in the cloud and locally on the device. We
        recommend you also provide an additional user confirmation UI component to make it clear to 
        the user what will occur and allow them to cancel the operation or proceed.</para><para>Although an asynchronous block callback parameter is provided for detecting the response,
        optionally you can set that to null and the caller can observe the lifecycle notifications instead.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identifier">
      <MemberSignature Language="C#" Value="public virtual string Identifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Identifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("identifier")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        The MASDevice identifier.
        </summary>
        <value>The device identifier.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBeingAuthorized">
      <MemberSignature Language="C#" Value="public virtual bool IsBeingAuthorized { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBeingAuthorized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("isBeingAuthorized")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setIsBeingAuthorized:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        Gets or sets a value indicating whether this <see cref="T:MASFoundation.MASDevice" /> is being authorized with other devices through proximity login.
        </summary>
        <value>
          <c>true</c> if is being authorized; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public virtual bool IsRegistered { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRegistered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("isRegistered")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        Gets a value indicating whether this <see cref="T:MASFoundation.MASDevice" /> is registered.
        </summary>
        <value>
          <c>true</c> if is registered; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("name")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        Gets the MASDevice name.
        </summary>
        <value>The MASDevice name.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProximityLoginDelegate">
      <MemberSignature Language="C#" Value="public static MASFoundation.MASProximityLoginDelegate ProximityLoginDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class MASFoundation.MASProximityLoginDelegate ProximityLoginDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("proximityLoginDelegate")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setProximityLoginDelegate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MASFoundation.MASProximityLoginDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        Gets or sets the proximity login delegate.
        </summary>
        <value>The proximity login delegate.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetLocally">
      <MemberSignature Language="C#" Value="public virtual void ResetLocally ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetLocally() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("resetLocally")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        Reset the application's locally stored data on the device only.  This does NOT call the
        backend service to remove the device record.You must call MASDevice.CurrentDevice().DeregisterWithCompletion() to do that.
        
        <para>WARNING: if you call this method, all access credentials and locally stored configuration related to the application will be removed.
        Re-authentication proccess will be triggered whenever you are trying to access the gateway.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAsBluetoothCentral">
      <MemberSignature Language="C#" Value="public virtual void StartAsBluetoothCentral ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartAsBluetoothCentral() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("startAsBluetoothCentral")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        Start the device acting as a bluetooth central.
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAsBluetoothCentralWithAuthenticationProvider">
      <MemberSignature Language="C#" Value="public virtual void StartAsBluetoothCentralWithAuthenticationProvider (MASFoundation.MASAuthenticationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartAsBluetoothCentralWithAuthenticationProvider(class MASFoundation.MASAuthenticationProvider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("startAsBluetoothCentralWithAuthenticationProvider:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="MASFoundation.MASAuthenticationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">MASAuthenticationProvider to pass authentication information to other devices.</param>
        <summary>
        Start the device acting as a bluetooth central with given authentication provider.
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAsBluetoothPeripheral">
      <MemberSignature Language="C#" Value="public virtual void StartAsBluetoothPeripheral ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartAsBluetoothPeripheral() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("startAsBluetoothPeripheral")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        Start the device acting as a bluetooth peripheral.
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public virtual string Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("status")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        Gets the MASDevice status.
        </summary>
        <value>The MASDevice status.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopAsBluetoothCentral">
      <MemberSignature Language="C#" Value="public virtual void StopAsBluetoothCentral ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopAsBluetoothCentral() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("stopAsBluetoothCentral")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        Stop the device acting as a bluetooth central.
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopAsBluetoothPeripheral">
      <MemberSignature Language="C#" Value="public virtual void StopAsBluetoothPeripheral ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopAsBluetoothPeripheral() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6662.25382</AssemblyVersion>
        <AssemblyVersion>1.0.6662.25608</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29231</AssemblyVersion>
        <AssemblyVersion>1.0.6662.29322</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28818</AssemblyVersion>
        <AssemblyVersion>1.0.6666.28870</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("stopAsBluetoothPeripheral")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        Stop the device acting as a bluetooth peripheral.
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
